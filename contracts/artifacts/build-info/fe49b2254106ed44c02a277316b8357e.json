{
	"id": "fe49b2254106ed44c02a277316b8357e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/STEMMER_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/STEMMER.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\ncontract STEMToken is ERC20, Ownable {\n\n    IERC20 public usdtToken;\n\n    uint256 public buyRate = 1e18;      // Fixed: 1 USDT = 1 STEM\n    uint256 public sellRate = 1e18;     // Dynamic: ≥ 1 STEM per USDT\n\n    address public treasury;\n    address public profitTreasury;\n\n    // 📢 Events\n    event BuyStem(address indexed buyer, uint256 usdtAmount, uint256 stemAmount);\n    event SellStem(address indexed seller, uint256 stemAmount, uint256 usdtAmount, uint256 profitStems);\n    event Minted(address indexed to, uint256 amount);\n    event Burned(address indexed from, uint256 amount);\n    event SellRateUpdated(uint256 newSellRate);\n    event BuyRateUpdated(uint256 newBuyRate);\n    event TreasuryChanged(address indexed newTreasury);\n    event ProfitTreasuryChanged(address indexed newProfitTreasury);\n    event USDTWithdrawn(address indexed to, uint256 amount);\n\n    constructor(\n        address _usdtTokenAddress,\n        address _treasury,\n        address _profitTreasury,\n        uint256 initialSupply\n    ) ERC20(\"STEMMER\", \"STEM\") Ownable(msg.sender) {\n        usdtToken = IERC20(_usdtTokenAddress);\n        treasury = _treasury;\n        profitTreasury = _profitTreasury;\n        _mint(treasury, initialSupply * 1e18);\n    }\n\n    // 🔁 Buy STEM with USDT (always 1 USDT = 1 STEM)\n    function buyStem(uint256 usdtAmount) external {\n        require(usdtAmount > 0, \"Amount must be greater than 0\");\n\n        uint256 stemAmount = usdtAmount * 1e18;\n        require(usdtToken.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\");\n\n        _transfer(treasury, msg.sender, stemAmount);\n        emit BuyStem(msg.sender, usdtAmount, stemAmount);\n    }\n\n    // 🔁 Sell STEM for USDT\n    function sellStem(uint256 stemAmount) external {\n        require(stemAmount > 0, \"Amount must be greater than 0\");\n\n        // Calculate USDT payout based on sellRate\n        uint256 usdtAmount = (stemAmount * 1e18) / sellRate;\n\n        // Calculate expected STEM if sellRate = 1.0 (i.e. user should have received more USDT)\n        uint256 fairUsdtAmount = stemAmount / 1e18;\n        uint256 expectedStems = fairUsdtAmount * sellRate;\n        uint256 profitStems = expectedStems > stemAmount ? expectedStems - stemAmount : 0;\n\n        // Transfer user’s STEMs to treasury, and send profitStems to profit wallet\n        _transfer(msg.sender, treasury, stemAmount);\n        if (profitStems > 0 && profitTreasury != address(0)) {\n            _transfer(treasury, profitTreasury, profitStems);\n        }\n\n        require(usdtToken.transfer(msg.sender, usdtAmount), \"USDT payout failed\");\n        emit SellStem(msg.sender, stemAmount, usdtAmount, profitStems);\n    }\n\n    // 🧠 Admin: Mint STEM\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount * 1e18);\n        emit Minted(to, amount);\n    }\n\n    // 🧹 Admin: Burn STEM\n    function burn(address from, uint256 amount) external onlyOwner {\n        _burn(from, amount * 1e18);\n        emit Burned(from, amount);\n    }\n\n   // ⚙️ Admin: Change STEM buy rate\n    function setBuyRate(uint256 newRate) external onlyOwner {\n        require(newRate >= 1e18, \"Buy rate must be >= 1 STEM\");\n        require(newRate <= sellRate, \"Buy rate must be <= Sell rate\");\n        buyRate = newRate;\n        emit BuyRateUpdated(newRate);\n    }\n\n\n    // ⚙️ Admin: Set Sell Rate (can be >= 1 STEM = 1 USDT)\n    function setSellRate(uint256 newRate) external onlyOwner {\n        require(newRate >= 1e18, unicode\"Sell rate must be ≥ 1 STEM per USDT\");\n        sellRate = newRate;\n        emit SellRateUpdated(newRate);\n    }\n\n    // 🏦 Admin: Withdraw USDT\n    function withdrawUSDT(address to, uint256 amount) external onlyOwner {\n        require(usdtToken.transfer(to, amount), \"Withdraw failed\");\n        emit USDTWithdrawn(to, amount);\n    }\n\n    // 🏦 Admin: Set main treasury (holding STEM)\n    function setTreasury(address _treasury) external onlyOwner {\n        treasury = _treasury;\n        emit TreasuryChanged(_treasury);\n    }\n\n    // 🏦 Admin: Set USDT profit receiver\n    function setProfitTreasury(address _treasury) external onlyOwner {\n        profitTreasury = _treasury;\n        emit ProfitTreasuryChanged(_treasury);\n    }\n\n    // Optional frontend helper\n    function getConfig() external view returns (\n        uint256 _buyRate,\n        uint256 _sellRate,\n        address _treasury,\n        address _profitTreasury,\n        uint256 treasuryStemBalance,\n        uint256 profitStemBalance,\n        uint256 contractStemBalance,\n        uint256 contractUsdtBalance,\n        uint256 totalStemSupply\n        ) {\n            return (\n                buyRate,\n                sellRate,\n                treasury,\n                profitTreasury,\n                balanceOf(treasury),\n                balanceOf(profitTreasury),\n                balanceOf(address(this)),\n                usdtToken.balanceOf(address(this)),\n                totalSupply()\n            );\n        }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/STEMMER_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/STEMMER_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/STEMMER_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/STEMMER_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/STEMMER_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/STEMMER_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "contracts/STEMMER_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"STEMToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_profitTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBuyRate",
									"type": "uint256"
								}
							],
							"name": "BuyRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								}
							],
							"name": "BuyStem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newProfitTreasury",
									"type": "address"
								}
							],
							"name": "ProfitTreasuryChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSellRate",
									"type": "uint256"
								}
							],
							"name": "SellRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profitStems",
									"type": "uint256"
								}
							],
							"name": "SellStem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "USDTWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								}
							],
							"name": "buyStem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getConfig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_buyRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_profitTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "treasuryStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "profitStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractUsdtBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStemSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								}
							],
							"name": "sellStem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setBuyRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setProfitTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setSellRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/STEMMER_flattened.sol\":24917:29907  contract STEMToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/STEMMER_flattened.sol\":25016:25020  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMMER_flattened.sol\":24991:25020  uint256 public buyRate = 1e18 */\n  0x07\n  sstore\n    /* \"contracts/STEMMER_flattened.sol\":25083:25087  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMMER_flattened.sol\":25057:25087  uint256 public sellRate = 1e18 */\n  0x08\n  sstore\n    /* \"contracts/STEMMER_flattened.sol\":25791:26153  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/STEMMER_flattened.sol\":25968:25978  msg.sender */\n  caller\n    /* \"contracts/STEMMER_flattened.sol\":12482:12595  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x5354454d4d455200000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5354454d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":12556:12561  name_ */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":12548:12553  _name */\n  0x03\n    /* \"contracts/STEMMER_flattened.sol\":12548:12561  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":12581:12588  symbol_ */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":12571:12578  _symbol */\n  0x04\n    /* \"contracts/STEMMER_flattened.sol\":12571:12588  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":12482:12595  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":23049:23050  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":23025:23051  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":23025:23037  initialOwner */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":23025:23051  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/STEMMER_flattened.sol\":23021:23116  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/STEMMER_flattened.sol\":23102:23103  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":23074:23105  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/STEMMER_flattened.sol\":23021:23116  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/STEMMER_flattened.sol\":23125:23157  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/STEMMER_flattened.sol\":23144:23156  initialOwner */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":23125:23143  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/STEMMER_flattened.sol\":23125:23157  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/STEMMER_flattened.sol\":22977:23164  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":26009:26026  _usdtTokenAddress */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":25990:25999  usdtToken */\n  0x06\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":25990:26027  usdtToken = IERC20(_usdtTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":26048:26057  _treasury */\n  dup3\n    /* \"contracts/STEMMER_flattened.sol\":26037:26045  treasury */\n  0x09\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":26037:26057  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":26084:26099  _profitTreasury */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":26067:26081  profitTreasury */\n  0x0a\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":26067:26099  profitTreasury = _profitTreasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":26109:26146  _mint(treasury, initialSupply * 1e18) */\n  tag_18\n    /* \"contracts/STEMMER_flattened.sol\":26115:26123  treasury */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":26141:26145  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMMER_flattened.sol\":26125:26138  initialSupply */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":26125:26145  initialSupply * 1e18 */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/STEMMER_flattened.sol\":26109:26114  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/STEMMER_flattened.sol\":26109:26146  _mint(treasury, initialSupply * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/STEMMER_flattened.sol\":25791:26153  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":24917:29907  contract STEMToken is ERC20, Ownable {... */\n  jump(tag_22)\n    /* \"contracts/STEMMER_flattened.sol\":24664:24851  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/STEMMER_flattened.sol\":24737:24753  address oldOwner */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":24756:24762  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":24737:24762  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":24781:24789  newOwner */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":24772:24778  _owner */\n  0x05\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":24772:24789  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":24835:24843  newOwner */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":24804:24844  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":24825:24833  oldOwner */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":24804:24844  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/STEMMER_flattened.sol\":24727:24851  {... */\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":24664:24851  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/STEMMER_flattened.sol\":18339:18547  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"contracts/STEMMER_flattened.sol\":18428:18429  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":18409:18430  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":18409:18416  account */\n  dup3\n    /* \"contracts/STEMMER_flattened.sol\":18409:18430  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/STEMMER_flattened.sol\":18405:18496  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"contracts/STEMMER_flattened.sol\":18482:18483  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":18453:18485  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/STEMMER_flattened.sol\":18405:18496  if (account == address(0)) {... */\ntag_25:\n    /* \"contracts/STEMMER_flattened.sol\":18505:18540  _update(address(0), account, value) */\n  tag_27\n    /* \"contracts/STEMMER_flattened.sol\":18521:18522  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":18525:18532  account */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":18534:18539  value */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":18505:18512  _update */\n  shl(0x20, tag_28)\n    /* \"contracts/STEMMER_flattened.sol\":18505:18540  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/STEMMER_flattened.sol\":18339:18547  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/STEMMER_flattened.sol\":16889:17996  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"contracts/STEMMER_flattened.sol\":16994:16995  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":16978:16996  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":16978:16982  from */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":16978:16996  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/STEMMER_flattened.sol\":16974:17514  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"contracts/STEMMER_flattened.sol\":17130:17135  value */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":17114:17126  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17114:17135  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":16974:17514  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"contracts/STEMMER_flattened.sol\":17166:17185  uint256 fromBalance */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17188:17197  _balances */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":17188:17203  _balances[from] */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17198:17202  from */\n  dup6\n    /* \"contracts/STEMMER_flattened.sol\":17188:17203  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/STEMMER_flattened.sol\":17166:17203  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":17235:17240  value */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":17221:17232  fromBalance */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":17221:17240  fromBalance < value */\n  lt\n    /* \"contracts/STEMMER_flattened.sol\":17217:17332  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"contracts/STEMMER_flattened.sol\":17292:17296  from */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":17298:17309  fromBalance */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":17311:17316  value */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":17267:17317  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/STEMMER_flattened.sol\":17217:17332  if (fromBalance < value) {... */\ntag_34:\n    /* \"contracts/STEMMER_flattened.sol\":17484:17489  value */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":17470:17481  fromBalance */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":17470:17489  fromBalance - value */\n  sub\n    /* \"contracts/STEMMER_flattened.sol\":17452:17461  _balances */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17452:17467  _balances[from] */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":17462:17466  from */\n  dup7\n    /* \"contracts/STEMMER_flattened.sol\":17452:17467  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/STEMMER_flattened.sol\":17452:17489  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":17152:17514  {... */\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":16974:17514  if (from == address(0)) {... */\ntag_33:\n    /* \"contracts/STEMMER_flattened.sol\":17542:17543  0 */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17528:17544  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":17528:17530  to */\n  dup3\n    /* \"contracts/STEMMER_flattened.sol\":17528:17544  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/STEMMER_flattened.sol\":17524:17949  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"contracts/STEMMER_flattened.sol\":17707:17712  value */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":17691:17703  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17691:17712  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":17524:17949  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"contracts/STEMMER_flattened.sol\":17919:17924  value */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":17902:17911  _balances */\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17902:17915  _balances[to] */\n  dup1\n    /* \"contracts/STEMMER_flattened.sol\":17912:17914  to */\n  dup5\n    /* \"contracts/STEMMER_flattened.sol\":17902:17915  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/STEMMER_flattened.sol\":17902:17924  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER_flattened.sol\":17524:17949  if (to == address(0)) {... */\ntag_38:\n    /* \"contracts/STEMMER_flattened.sol\":17979:17981  to */\n  dup2\n    /* \"contracts/STEMMER_flattened.sol\":17964:17989  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER_flattened.sol\":17973:17977  from */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":17964:17989  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/STEMMER_flattened.sol\":17983:17988  value */\n  dup4\n    /* \"contracts/STEMMER_flattened.sol\":17964:17989  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/STEMMER_flattened.sol\":16889:17996  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_44:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_45:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_79\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_44\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_46:\n    /* \"#utility.yul\":641:665   */\n  tag_81\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_82:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_47:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_84\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_48:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_49:\n    /* \"#utility.yul\":1001:1025   */\n  tag_87\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_88:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_50:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_90\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_49\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  dup1\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_93\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1343:1463   */\ntag_92:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_94\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_95\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_47\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_96\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_97\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_50\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2130   */\ntag_51:\n    /* \"#utility.yul\":2083:2089   */\n  0x00\n    /* \"#utility.yul\":2117:2122   */\n  dup2\n    /* \"#utility.yul\":2111:2123   */\n  mload\n    /* \"#utility.yul\":2101:2123   */\n  swap1\n  pop\n    /* \"#utility.yul\":2031:2130   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2136:2316   */\ntag_52:\n    /* \"#utility.yul\":2184:2261   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2181:2182   */\n  0x00\n    /* \"#utility.yul\":2174:2262   */\n  mstore\n    /* \"#utility.yul\":2281:2285   */\n  0x41\n    /* \"#utility.yul\":2278:2279   */\n  0x04\n    /* \"#utility.yul\":2271:2286   */\n  mstore\n    /* \"#utility.yul\":2305:2309   */\n  0x24\n    /* \"#utility.yul\":2302:2303   */\n  0x00\n    /* \"#utility.yul\":2295:2310   */\n  revert\n    /* \"#utility.yul\":2322:2502   */\ntag_53:\n    /* \"#utility.yul\":2370:2447   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2367:2368   */\n  0x00\n    /* \"#utility.yul\":2360:2448   */\n  mstore\n    /* \"#utility.yul\":2467:2471   */\n  0x22\n    /* \"#utility.yul\":2464:2465   */\n  0x04\n    /* \"#utility.yul\":2457:2472   */\n  mstore\n    /* \"#utility.yul\":2491:2495   */\n  0x24\n    /* \"#utility.yul\":2488:2489   */\n  0x00\n    /* \"#utility.yul\":2481:2496   */\n  revert\n    /* \"#utility.yul\":2508:2828   */\ntag_54:\n    /* \"#utility.yul\":2552:2558   */\n  0x00\n    /* \"#utility.yul\":2589:2590   */\n  0x02\n    /* \"#utility.yul\":2583:2587   */\n  dup3\n    /* \"#utility.yul\":2579:2591   */\n  div\n    /* \"#utility.yul\":2569:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2637   */\n  0x01\n    /* \"#utility.yul\":2630:2634   */\n  dup3\n    /* \"#utility.yul\":2626:2638   */\n  and\n    /* \"#utility.yul\":2657:2675   */\n  dup1\n    /* \"#utility.yul\":2647:2728   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2713:2717   */\n  0x7f\n    /* \"#utility.yul\":2705:2711   */\n  dup3\n    /* \"#utility.yul\":2701:2718   */\n  and\n    /* \"#utility.yul\":2691:2718   */\n  swap2\n  pop\n    /* \"#utility.yul\":2647:2728   */\ntag_102:\n    /* \"#utility.yul\":2775:2777   */\n  0x20\n    /* \"#utility.yul\":2767:2773   */\n  dup3\n    /* \"#utility.yul\":2764:2778   */\n  lt\n    /* \"#utility.yul\":2744:2762   */\n  dup2\n    /* \"#utility.yul\":2741:2779   */\n  sub\n    /* \"#utility.yul\":2738:2822   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2794:2812   */\n  tag_104\n  tag_53\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2738:2822   */\ntag_103:\n    /* \"#utility.yul\":2559:2828   */\n  pop\n    /* \"#utility.yul\":2508:2828   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2834:2975   */\ntag_55:\n    /* \"#utility.yul\":2883:2887   */\n  0x00\n    /* \"#utility.yul\":2906:2909   */\n  dup2\n    /* \"#utility.yul\":2898:2909   */\n  swap1\n  pop\n    /* \"#utility.yul\":2929:2932   */\n  dup2\n    /* \"#utility.yul\":2926:2927   */\n  0x00\n    /* \"#utility.yul\":2919:2933   */\n  mstore\n    /* \"#utility.yul\":2963:2967   */\n  0x20\n    /* \"#utility.yul\":2960:2961   */\n  0x00\n    /* \"#utility.yul\":2950:2968   */\n  keccak256\n    /* \"#utility.yul\":2942:2968   */\n  swap1\n  pop\n    /* \"#utility.yul\":2834:2975   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2981:3074   */\ntag_56:\n    /* \"#utility.yul\":3018:3024   */\n  0x00\n    /* \"#utility.yul\":3065:3067   */\n  0x20\n    /* \"#utility.yul\":3060:3062   */\n  0x1f\n    /* \"#utility.yul\":3053:3058   */\n  dup4\n    /* \"#utility.yul\":3049:3063   */\n  add\n    /* \"#utility.yul\":3045:3068   */\n  div\n    /* \"#utility.yul\":3035:3068   */\n  swap1\n  pop\n    /* \"#utility.yul\":2981:3074   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3080:3187   */\ntag_57:\n    /* \"#utility.yul\":3124:3132   */\n  0x00\n    /* \"#utility.yul\":3174:3179   */\n  dup3\n    /* \"#utility.yul\":3168:3172   */\n  dup3\n    /* \"#utility.yul\":3164:3180   */\n  shl\n    /* \"#utility.yul\":3143:3180   */\n  swap1\n  pop\n    /* \"#utility.yul\":3080:3187   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3193:3586   */\ntag_58:\n    /* \"#utility.yul\":3262:3268   */\n  0x00\n    /* \"#utility.yul\":3312:3313   */\n  0x08\n    /* \"#utility.yul\":3300:3310   */\n  dup4\n    /* \"#utility.yul\":3296:3314   */\n  mul\n    /* \"#utility.yul\":3335:3432   */\n  tag_109\n    /* \"#utility.yul\":3365:3431   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3354:3363   */\n  dup3\n    /* \"#utility.yul\":3335:3432   */\n  tag_57\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3453:3492   */\n  tag_110\n    /* \"#utility.yul\":3483:3491   */\n  dup7\n    /* \"#utility.yul\":3472:3481   */\n  dup4\n    /* \"#utility.yul\":3453:3492   */\n  tag_57\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3441:3492   */\n  swap6\n  pop\n    /* \"#utility.yul\":3525:3529   */\n  dup1\n    /* \"#utility.yul\":3521:3530   */\n  not\n    /* \"#utility.yul\":3514:3519   */\n  dup5\n    /* \"#utility.yul\":3510:3531   */\n  and\n    /* \"#utility.yul\":3501:3531   */\n  swap4\n  pop\n    /* \"#utility.yul\":3574:3578   */\n  dup1\n    /* \"#utility.yul\":3564:3572   */\n  dup7\n    /* \"#utility.yul\":3560:3579   */\n  and\n    /* \"#utility.yul\":3553:3558   */\n  dup5\n    /* \"#utility.yul\":3550:3580   */\n  or\n    /* \"#utility.yul\":3540:3580   */\n  swap3\n  pop\n    /* \"#utility.yul\":3269:3586   */\n  pop\n  pop\n    /* \"#utility.yul\":3193:3586   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3592:3652   */\ntag_59:\n    /* \"#utility.yul\":3620:3623   */\n  0x00\n    /* \"#utility.yul\":3641:3646   */\n  dup2\n    /* \"#utility.yul\":3634:3646   */\n  swap1\n  pop\n    /* \"#utility.yul\":3592:3652   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3658:3800   */\ntag_60:\n    /* \"#utility.yul\":3708:3717   */\n  0x00\n    /* \"#utility.yul\":3741:3794   */\n  tag_113\n    /* \"#utility.yul\":3759:3793   */\n  tag_114\n    /* \"#utility.yul\":3768:3792   */\n  tag_115\n    /* \"#utility.yul\":3786:3791   */\n  dup5\n    /* \"#utility.yul\":3768:3792   */\n  tag_48\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3759:3793   */\n  tag_59\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3741:3794   */\n  tag_48\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3728:3794   */\n  swap1\n  pop\n    /* \"#utility.yul\":3658:3800   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3806:3881   */\ntag_61:\n    /* \"#utility.yul\":3849:3852   */\n  0x00\n    /* \"#utility.yul\":3870:3875   */\n  dup2\n    /* \"#utility.yul\":3863:3875   */\n  swap1\n  pop\n    /* \"#utility.yul\":3806:3881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4156   */\ntag_62:\n    /* \"#utility.yul\":3997:4036   */\n  tag_118\n    /* \"#utility.yul\":4028:4035   */\n  dup4\n    /* \"#utility.yul\":3997:4036   */\n  tag_60\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4058:4149   */\n  tag_119\n    /* \"#utility.yul\":4107:4148   */\n  tag_120\n    /* \"#utility.yul\":4131:4147   */\n  dup3\n    /* \"#utility.yul\":4107:4148   */\n  tag_61\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4099:4105   */\n  dup5\n    /* \"#utility.yul\":4092:4096   */\n  dup5\n    /* \"#utility.yul\":4086:4097   */\n  sload\n    /* \"#utility.yul\":4058:4149   */\n  tag_58\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4052:4056   */\n  dup3\n    /* \"#utility.yul\":4045:4150   */\n  sstore\n    /* \"#utility.yul\":3963:4156   */\n  pop\n    /* \"#utility.yul\":3887:4156   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4162:4235   */\ntag_63:\n    /* \"#utility.yul\":4207:4210   */\n  0x00\n    /* \"#utility.yul\":4162:4235   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4241:4430   */\ntag_64:\n    /* \"#utility.yul\":4318:4350   */\n  tag_123\n  tag_63\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4359:4424   */\n  tag_124\n    /* \"#utility.yul\":4417:4423   */\n  dup2\n    /* \"#utility.yul\":4409:4415   */\n  dup5\n    /* \"#utility.yul\":4403:4407   */\n  dup5\n    /* \"#utility.yul\":4359:4424   */\n  tag_62\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4294:4430   */\n  pop\n    /* \"#utility.yul\":4241:4430   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4436:4622   */\ntag_65:\n    /* \"#utility.yul\":4496:4616   */\ntag_126:\n    /* \"#utility.yul\":4513:4516   */\n  dup2\n    /* \"#utility.yul\":4506:4511   */\n  dup2\n    /* \"#utility.yul\":4503:4517   */\n  lt\n    /* \"#utility.yul\":4496:4616   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":4567:4606   */\n  tag_129\n    /* \"#utility.yul\":4604:4605   */\n  0x00\n    /* \"#utility.yul\":4597:4602   */\n  dup3\n    /* \"#utility.yul\":4567:4606   */\n  tag_64\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4540:4541   */\n  0x01\n    /* \"#utility.yul\":4533:4538   */\n  dup2\n    /* \"#utility.yul\":4529:4542   */\n  add\n    /* \"#utility.yul\":4520:4542   */\n  swap1\n  pop\n    /* \"#utility.yul\":4496:4616   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":4436:4622   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4628:5171   */\ntag_66:\n    /* \"#utility.yul\":4729:4731   */\n  0x1f\n    /* \"#utility.yul\":4724:4727   */\n  dup3\n    /* \"#utility.yul\":4721:4732   */\n  gt\n    /* \"#utility.yul\":4718:5164   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4763:4801   */\n  tag_132\n    /* \"#utility.yul\":4795:4800   */\n  dup2\n    /* \"#utility.yul\":4763:4801   */\n  tag_55\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4847:4876   */\n  tag_133\n    /* \"#utility.yul\":4865:4875   */\n  dup5\n    /* \"#utility.yul\":4847:4876   */\n  tag_56\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4837:4845   */\n  dup2\n    /* \"#utility.yul\":4833:4877   */\n  add\n    /* \"#utility.yul\":5030:5032   */\n  0x20\n    /* \"#utility.yul\":5018:5028   */\n  dup6\n    /* \"#utility.yul\":5015:5033   */\n  lt\n    /* \"#utility.yul\":5012:5061   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5051:5059   */\n  dup2\n    /* \"#utility.yul\":5036:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":5012:5061   */\ntag_134:\n    /* \"#utility.yul\":5074:5154   */\n  tag_135\n    /* \"#utility.yul\":5130:5152   */\n  tag_136\n    /* \"#utility.yul\":5148:5151   */\n  dup6\n    /* \"#utility.yul\":5130:5152   */\n  tag_56\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5120:5128   */\n  dup4\n    /* \"#utility.yul\":5116:5153   */\n  add\n    /* \"#utility.yul\":5103:5114   */\n  dup3\n    /* \"#utility.yul\":5074:5154   */\n  tag_65\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4733:5164   */\n  pop\n  pop\n    /* \"#utility.yul\":4718:5164   */\ntag_131:\n    /* \"#utility.yul\":4628:5171   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5177:5294   */\ntag_67:\n    /* \"#utility.yul\":5231:5239   */\n  0x00\n    /* \"#utility.yul\":5281:5286   */\n  dup3\n    /* \"#utility.yul\":5275:5279   */\n  dup3\n    /* \"#utility.yul\":5271:5287   */\n  shr\n    /* \"#utility.yul\":5250:5287   */\n  swap1\n  pop\n    /* \"#utility.yul\":5177:5294   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5300:5469   */\ntag_68:\n    /* \"#utility.yul\":5344:5350   */\n  0x00\n    /* \"#utility.yul\":5377:5428   */\n  tag_139\n    /* \"#utility.yul\":5425:5426   */\n  0x00\n    /* \"#utility.yul\":5421:5427   */\n  not\n    /* \"#utility.yul\":5413:5418   */\n  dup5\n    /* \"#utility.yul\":5410:5411   */\n  0x08\n    /* \"#utility.yul\":5406:5419   */\n  mul\n    /* \"#utility.yul\":5377:5428   */\n  tag_67\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5373:5429   */\n  not\n    /* \"#utility.yul\":5458:5462   */\n  dup1\n    /* \"#utility.yul\":5452:5456   */\n  dup4\n    /* \"#utility.yul\":5448:5463   */\n  and\n    /* \"#utility.yul\":5438:5463   */\n  swap2\n  pop\n    /* \"#utility.yul\":5351:5469   */\n  pop\n    /* \"#utility.yul\":5300:5469   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5474:5769   */\ntag_69:\n    /* \"#utility.yul\":5550:5554   */\n  0x00\n    /* \"#utility.yul\":5696:5725   */\n  tag_141\n    /* \"#utility.yul\":5721:5724   */\n  dup4\n    /* \"#utility.yul\":5715:5719   */\n  dup4\n    /* \"#utility.yul\":5696:5725   */\n  tag_68\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5688:5725   */\n  swap2\n  pop\n    /* \"#utility.yul\":5758:5761   */\n  dup3\n    /* \"#utility.yul\":5755:5756   */\n  0x02\n    /* \"#utility.yul\":5751:5762   */\n  mul\n    /* \"#utility.yul\":5745:5749   */\n  dup3\n    /* \"#utility.yul\":5742:5763   */\n  or\n    /* \"#utility.yul\":5734:5763   */\n  swap1\n  pop\n    /* \"#utility.yul\":5474:5769   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5774:7169   */\ntag_9:\n    /* \"#utility.yul\":5891:5928   */\n  tag_143\n    /* \"#utility.yul\":5924:5927   */\n  dup3\n    /* \"#utility.yul\":5891:5928   */\n  tag_51\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5993:6011   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5985:5991   */\n  dup2\n    /* \"#utility.yul\":5982:6012   */\n  gt\n    /* \"#utility.yul\":5979:6035   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6015:6033   */\n  tag_145\n  tag_52\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5979:6035   */\ntag_144:\n    /* \"#utility.yul\":6059:6097   */\n  tag_146\n    /* \"#utility.yul\":6091:6095   */\n  dup3\n    /* \"#utility.yul\":6085:6096   */\n  sload\n    /* \"#utility.yul\":6059:6097   */\n  tag_54\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6144:6211   */\n  tag_147\n    /* \"#utility.yul\":6204:6210   */\n  dup3\n    /* \"#utility.yul\":6196:6202   */\n  dup3\n    /* \"#utility.yul\":6190:6194   */\n  dup6\n    /* \"#utility.yul\":6144:6211   */\n  tag_66\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6238:6239   */\n  0x00\n    /* \"#utility.yul\":6262:6266   */\n  0x20\n    /* \"#utility.yul\":6249:6266   */\n  swap1\n  pop\n    /* \"#utility.yul\":6294:6296   */\n  0x1f\n    /* \"#utility.yul\":6286:6292   */\n  dup4\n    /* \"#utility.yul\":6283:6297   */\n  gt\n    /* \"#utility.yul\":6311:6312   */\n  0x01\n    /* \"#utility.yul\":6306:6924   */\n  dup2\n  eq\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6968:6969   */\n  0x00\n    /* \"#utility.yul\":6985:6991   */\n  dup5\n    /* \"#utility.yul\":6982:7059   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":7034:7043   */\n  dup3\n    /* \"#utility.yul\":7029:7032   */\n  dup8\n    /* \"#utility.yul\":7025:7044   */\n  add\n    /* \"#utility.yul\":7019:7045   */\n  mload\n    /* \"#utility.yul\":7010:7045   */\n  swap1\n  pop\n    /* \"#utility.yul\":6982:7059   */\ntag_150:\n    /* \"#utility.yul\":7085:7152   */\n  tag_151\n    /* \"#utility.yul\":7145:7151   */\n  dup6\n    /* \"#utility.yul\":7138:7143   */\n  dup3\n    /* \"#utility.yul\":7085:7152   */\n  tag_69\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7079:7083   */\n  dup7\n    /* \"#utility.yul\":7072:7153   */\n  sstore\n    /* \"#utility.yul\":6941:7163   */\n  pop\n    /* \"#utility.yul\":6276:7163   */\n  jump(tag_148)\n    /* \"#utility.yul\":6306:6924   */\ntag_149:\n    /* \"#utility.yul\":6358:6362   */\n  0x1f\n    /* \"#utility.yul\":6354:6363   */\n  not\n    /* \"#utility.yul\":6346:6352   */\n  dup5\n    /* \"#utility.yul\":6342:6364   */\n  and\n    /* \"#utility.yul\":6392:6429   */\n  tag_152\n    /* \"#utility.yul\":6424:6428   */\n  dup7\n    /* \"#utility.yul\":6392:6429   */\n  tag_55\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6451:6452   */\n  0x00\n    /* \"#utility.yul\":6465:6673   */\ntag_153:\n    /* \"#utility.yul\":6479:6486   */\n  dup3\n    /* \"#utility.yul\":6476:6477   */\n  dup2\n    /* \"#utility.yul\":6473:6487   */\n  lt\n    /* \"#utility.yul\":6465:6673   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6558:6567   */\n  dup5\n    /* \"#utility.yul\":6553:6556   */\n  dup10\n    /* \"#utility.yul\":6549:6568   */\n  add\n    /* \"#utility.yul\":6543:6569   */\n  mload\n    /* \"#utility.yul\":6535:6541   */\n  dup3\n    /* \"#utility.yul\":6528:6570   */\n  sstore\n    /* \"#utility.yul\":6609:6610   */\n  0x01\n    /* \"#utility.yul\":6601:6607   */\n  dup3\n    /* \"#utility.yul\":6597:6611   */\n  add\n    /* \"#utility.yul\":6587:6611   */\n  swap2\n  pop\n    /* \"#utility.yul\":6656:6658   */\n  0x20\n    /* \"#utility.yul\":6645:6654   */\n  dup6\n    /* \"#utility.yul\":6641:6659   */\n  add\n    /* \"#utility.yul\":6628:6659   */\n  swap5\n  pop\n    /* \"#utility.yul\":6502:6506   */\n  0x20\n    /* \"#utility.yul\":6499:6500   */\n  dup2\n    /* \"#utility.yul\":6495:6507   */\n  add\n    /* \"#utility.yul\":6490:6507   */\n  swap1\n  pop\n    /* \"#utility.yul\":6465:6673   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":6701:6707   */\n  dup7\n    /* \"#utility.yul\":6692:6699   */\n  dup4\n    /* \"#utility.yul\":6689:6708   */\n  lt\n    /* \"#utility.yul\":6686:6865   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6759:6768   */\n  dup5\n    /* \"#utility.yul\":6754:6757   */\n  dup10\n    /* \"#utility.yul\":6750:6769   */\n  add\n    /* \"#utility.yul\":6744:6770   */\n  mload\n    /* \"#utility.yul\":6802:6850   */\n  tag_157\n    /* \"#utility.yul\":6844:6848   */\n  0x1f\n    /* \"#utility.yul\":6836:6842   */\n  dup10\n    /* \"#utility.yul\":6832:6849   */\n  and\n    /* \"#utility.yul\":6821:6830   */\n  dup3\n    /* \"#utility.yul\":6802:6850   */\n  tag_68\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6794:6800   */\n  dup4\n    /* \"#utility.yul\":6787:6851   */\n  sstore\n    /* \"#utility.yul\":6709:6865   */\n  pop\n    /* \"#utility.yul\":6686:6865   */\ntag_156:\n    /* \"#utility.yul\":6911:6912   */\n  0x01\n    /* \"#utility.yul\":6907:6908   */\n  0x02\n    /* \"#utility.yul\":6899:6905   */\n  dup9\n    /* \"#utility.yul\":6895:6909   */\n  mul\n    /* \"#utility.yul\":6891:6913   */\n  add\n    /* \"#utility.yul\":6885:6889   */\n  dup9\n    /* \"#utility.yul\":6878:6914   */\n  sstore\n    /* \"#utility.yul\":6313:6924   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6276:7163   */\ntag_148:\n  pop\n    /* \"#utility.yul\":5866:7169   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5774:7169   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7175:7293   */\ntag_70:\n    /* \"#utility.yul\":7262:7286   */\n  tag_159\n    /* \"#utility.yul\":7280:7285   */\n  dup2\n    /* \"#utility.yul\":7262:7286   */\n  tag_45\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7257:7260   */\n  dup3\n    /* \"#utility.yul\":7250:7287   */\n  mstore\n    /* \"#utility.yul\":7175:7293   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7299:7521   */\ntag_14:\n    /* \"#utility.yul\":7392:7396   */\n  0x00\n    /* \"#utility.yul\":7430:7432   */\n  0x20\n    /* \"#utility.yul\":7419:7428   */\n  dup3\n    /* \"#utility.yul\":7415:7433   */\n  add\n    /* \"#utility.yul\":7407:7433   */\n  swap1\n  pop\n    /* \"#utility.yul\":7443:7514   */\n  tag_161\n    /* \"#utility.yul\":7511:7512   */\n  0x00\n    /* \"#utility.yul\":7500:7509   */\n  dup4\n    /* \"#utility.yul\":7496:7513   */\n  add\n    /* \"#utility.yul\":7487:7493   */\n  dup5\n    /* \"#utility.yul\":7443:7514   */\n  tag_70\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7299:7521   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7527:7707   */\ntag_71:\n    /* \"#utility.yul\":7575:7652   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7572:7573   */\n  0x00\n    /* \"#utility.yul\":7565:7653   */\n  mstore\n    /* \"#utility.yul\":7672:7676   */\n  0x11\n    /* \"#utility.yul\":7669:7670   */\n  0x04\n    /* \"#utility.yul\":7662:7677   */\n  mstore\n    /* \"#utility.yul\":7696:7700   */\n  0x24\n    /* \"#utility.yul\":7693:7694   */\n  0x00\n    /* \"#utility.yul\":7686:7701   */\n  revert\n    /* \"#utility.yul\":7713:8123   */\ntag_20:\n    /* \"#utility.yul\":7753:7760   */\n  0x00\n    /* \"#utility.yul\":7776:7796   */\n  tag_164\n    /* \"#utility.yul\":7794:7795   */\n  dup3\n    /* \"#utility.yul\":7776:7796   */\n  tag_48\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7771:7796   */\n  swap2\n  pop\n    /* \"#utility.yul\":7810:7830   */\n  tag_165\n    /* \"#utility.yul\":7828:7829   */\n  dup4\n    /* \"#utility.yul\":7810:7830   */\n  tag_48\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7805:7830   */\n  swap3\n  pop\n    /* \"#utility.yul\":7865:7866   */\n  dup3\n    /* \"#utility.yul\":7862:7863   */\n  dup3\n    /* \"#utility.yul\":7858:7867   */\n  mul\n    /* \"#utility.yul\":7887:7917   */\n  tag_166\n    /* \"#utility.yul\":7905:7916   */\n  dup2\n    /* \"#utility.yul\":7887:7917   */\n  tag_48\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7876:7917   */\n  swap2\n  pop\n    /* \"#utility.yul\":8066:8067   */\n  dup3\n    /* \"#utility.yul\":8057:8064   */\n  dup3\n    /* \"#utility.yul\":8053:8068   */\n  div\n    /* \"#utility.yul\":8050:8051   */\n  dup5\n    /* \"#utility.yul\":8047:8069   */\n  eq\n    /* \"#utility.yul\":8027:8028   */\n  dup4\n    /* \"#utility.yul\":8020:8029   */\n  iszero\n    /* \"#utility.yul\":8000:8083   */\n  or\n    /* \"#utility.yul\":7977:8116   */\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8096:8114   */\n  tag_168\n  tag_71\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7977:8116   */\ntag_167:\n    /* \"#utility.yul\":7761:8123   */\n  pop\n    /* \"#utility.yul\":7713:8123   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8129:8320   */\ntag_32:\n    /* \"#utility.yul\":8169:8172   */\n  0x00\n    /* \"#utility.yul\":8188:8208   */\n  tag_170\n    /* \"#utility.yul\":8206:8207   */\n  dup3\n    /* \"#utility.yul\":8188:8208   */\n  tag_48\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8183:8208   */\n  swap2\n  pop\n    /* \"#utility.yul\":8222:8242   */\n  tag_171\n    /* \"#utility.yul\":8240:8241   */\n  dup4\n    /* \"#utility.yul\":8222:8242   */\n  tag_48\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8217:8242   */\n  swap3\n  pop\n    /* \"#utility.yul\":8265:8266   */\n  dup3\n    /* \"#utility.yul\":8262:8263   */\n  dup3\n    /* \"#utility.yul\":8258:8267   */\n  add\n    /* \"#utility.yul\":8251:8267   */\n  swap1\n  pop\n    /* \"#utility.yul\":8286:8289   */\n  dup1\n    /* \"#utility.yul\":8283:8284   */\n  dup3\n    /* \"#utility.yul\":8280:8290   */\n  gt\n    /* \"#utility.yul\":8277:8313   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8293:8311   */\n  tag_173\n  tag_71\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8277:8313   */\ntag_172:\n    /* \"#utility.yul\":8129:8320   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8326:8444   */\ntag_72:\n    /* \"#utility.yul\":8413:8437   */\n  tag_175\n    /* \"#utility.yul\":8431:8436   */\n  dup2\n    /* \"#utility.yul\":8413:8437   */\n  tag_48\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8408:8411   */\n  dup3\n    /* \"#utility.yul\":8401:8438   */\n  mstore\n    /* \"#utility.yul\":8326:8444   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8450:8892   */\ntag_36:\n    /* \"#utility.yul\":8599:8603   */\n  0x00\n    /* \"#utility.yul\":8637:8639   */\n  0x60\n    /* \"#utility.yul\":8626:8635   */\n  dup3\n    /* \"#utility.yul\":8622:8640   */\n  add\n    /* \"#utility.yul\":8614:8640   */\n  swap1\n  pop\n    /* \"#utility.yul\":8650:8721   */\n  tag_177\n    /* \"#utility.yul\":8718:8719   */\n  0x00\n    /* \"#utility.yul\":8707:8716   */\n  dup4\n    /* \"#utility.yul\":8703:8720   */\n  add\n    /* \"#utility.yul\":8694:8700   */\n  dup7\n    /* \"#utility.yul\":8650:8721   */\n  tag_70\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8731:8803   */\n  tag_178\n    /* \"#utility.yul\":8799:8801   */\n  0x20\n    /* \"#utility.yul\":8788:8797   */\n  dup4\n    /* \"#utility.yul\":8784:8802   */\n  add\n    /* \"#utility.yul\":8775:8781   */\n  dup6\n    /* \"#utility.yul\":8731:8803   */\n  tag_72\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8813:8885   */\n  tag_179\n    /* \"#utility.yul\":8881:8883   */\n  0x40\n    /* \"#utility.yul\":8870:8879   */\n  dup4\n    /* \"#utility.yul\":8866:8884   */\n  add\n    /* \"#utility.yul\":8857:8863   */\n  dup5\n    /* \"#utility.yul\":8813:8885   */\n  tag_72\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8450:8892   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8898:9120   */\ntag_40:\n    /* \"#utility.yul\":8991:8995   */\n  0x00\n    /* \"#utility.yul\":9029:9031   */\n  0x20\n    /* \"#utility.yul\":9018:9027   */\n  dup3\n    /* \"#utility.yul\":9014:9032   */\n  add\n    /* \"#utility.yul\":9006:9032   */\n  swap1\n  pop\n    /* \"#utility.yul\":9042:9113   */\n  tag_181\n    /* \"#utility.yul\":9110:9111   */\n  0x00\n    /* \"#utility.yul\":9099:9108   */\n  dup4\n    /* \"#utility.yul\":9095:9112   */\n  add\n    /* \"#utility.yul\":9086:9092   */\n  dup5\n    /* \"#utility.yul\":9042:9113   */\n  tag_72\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8898:9120   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/STEMMER_flattened.sol\":24917:29907  contract STEMToken is ERC20, Ownable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/STEMMER_flattened.sol\":24917:29907  contract STEMToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85e436bf\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xbb285554\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xf0f44260\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf203787c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfc37987b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xbb285554\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc3f909d4\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x95d89b41\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x85e436bf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8e0b017d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x313ce567\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x61d027b3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6217229b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5d91e3f8\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0f7e730b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1481794e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":12660:12749  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":14879:15065  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":29006:29161  function setProfitTreasury(address _treasury) external onlyOwner {... */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":28577:28761  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":13730:13827  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":15657:15901  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":13588:13670  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":27634:27769  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":26636:27599  function sellStem(uint256 stemAmount) external {... */\n    tag_11:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":25130:25153  address public treasury */\n    tag_12:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":25057:25087  uint256 public sellRate = 1e18 */\n    tag_13:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":13885:14001  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":24045:24146  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":27992:28255  function setBuyRate(uint256 newRate) external onlyOwner {... */\n    tag_16:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":23390:23475  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":28325:28538  function setSellRate(uint256 newRate) external onlyOwner {... */\n    tag_18:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":12862:12955  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":27804:27945  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_20:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":14196:14374  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":24961:24984  IERC20 public usdtToken */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":26215:26599  function buyStem(uint256 usdtAmount) external {... */\n    tag_23:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":29199:29905  function getConfig() external view returns (... */\n    tag_24:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":14432:14572  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":28819:28956  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_26:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":25159:25188  address public profitTreasury */\n    tag_27:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":24295:24510  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"contracts/STEMMER_flattened.sol\":24991:25020  uint256 public buyRate = 1e18 */\n    tag_29:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER_flattened.sol\":12660:12749  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"contracts/STEMMER_flattened.sol\":12705:12718  string memory */\n      0x60\n        /* \"contracts/STEMMER_flattened.sol\":12737:12742  _name */\n      0x03\n        /* \"contracts/STEMMER_flattened.sol\":12730:12742  return _name */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_135\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":12660:12749  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":14879:15065  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"contracts/STEMMER_flattened.sol\":14952:14956  bool */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":14968:14981  address owner */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":14984:14996  _msgSender() */\n      tag_141\n        /* \"contracts/STEMMER_flattened.sol\":14984:14994  _msgSender */\n      tag_142\n        /* \"contracts/STEMMER_flattened.sol\":14984:14996  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/STEMMER_flattened.sol\":14968:14996  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":15006:15037  _approve(owner, spender, value) */\n      tag_143\n        /* \"contracts/STEMMER_flattened.sol\":15015:15020  owner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":15022:15029  spender */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15031:15036  value */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15006:15014  _approve */\n      tag_144\n        /* \"contracts/STEMMER_flattened.sol\":15006:15037  _approve(owner, spender, value) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/STEMMER_flattened.sol\":15054:15058  true */\n      0x01\n        /* \"contracts/STEMMER_flattened.sol\":15047:15058  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":14879:15065  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":29006:29161  function setProfitTreasury(address _treasury) external onlyOwner {... */\n    tag_49:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_146\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/STEMMER_flattened.sol\":29098:29107  _treasury */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":29081:29095  profitTreasury */\n      0x0a\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":29081:29107  profitTreasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":29144:29153  _treasury */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":29122:29154  ProfitTreasuryChanged(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":29006:29161  function setProfitTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":28577:28761  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n    tag_52:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_150\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/STEMMER_flattened.sol\":28664:28673  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":28664:28682  usdtToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/STEMMER_flattened.sol\":28683:28685  to */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":28687:28693  amount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":28664:28694  usdtToken.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/STEMMER_flattened.sol\":28656:28714  require(usdtToken.transfer(to, amount), \"Withdraw failed\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/STEMMER_flattened.sol\":28743:28745  to */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":28729:28754  USDTWithdrawn(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b\n        /* \"contracts/STEMMER_flattened.sol\":28747:28753  amount */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":28729:28754  USDTWithdrawn(to, amount) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":28577:28761  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":13730:13827  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"contracts/STEMMER_flattened.sol\":13782:13789  uint256 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":13808:13820  _totalSupply */\n      sload(0x02)\n        /* \"contracts/STEMMER_flattened.sol\":13801:13820  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":13730:13827  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":15657:15901  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"contracts/STEMMER_flattened.sol\":15744:15748  bool */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":15760:15775  address spender */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":15778:15790  _msgSender() */\n      tag_164\n        /* \"contracts/STEMMER_flattened.sol\":15778:15788  _msgSender */\n      tag_142\n        /* \"contracts/STEMMER_flattened.sol\":15778:15790  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/STEMMER_flattened.sol\":15760:15790  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":15800:15837  _spendAllowance(from, spender, value) */\n      tag_165\n        /* \"contracts/STEMMER_flattened.sol\":15816:15820  from */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15822:15829  spender */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":15831:15836  value */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15800:15815  _spendAllowance */\n      tag_166\n        /* \"contracts/STEMMER_flattened.sol\":15800:15837  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/STEMMER_flattened.sol\":15847:15873  _transfer(from, to, value) */\n      tag_167\n        /* \"contracts/STEMMER_flattened.sol\":15857:15861  from */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15863:15865  to */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15867:15872  value */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":15847:15856  _transfer */\n      tag_168\n        /* \"contracts/STEMMER_flattened.sol\":15847:15873  _transfer(from, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/STEMMER_flattened.sol\":15890:15894  true */\n      0x01\n        /* \"contracts/STEMMER_flattened.sol\":15883:15894  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":15657:15901  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":13588:13670  function decimals() public view virtual returns (uint8) {... */\n    tag_63:\n        /* \"contracts/STEMMER_flattened.sol\":13637:13642  uint8 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":13661:13663  18 */\n      0x12\n        /* \"contracts/STEMMER_flattened.sol\":13654:13663  return 18 */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":13588:13670  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":27634:27769  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_68:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_171\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/STEMMER_flattened.sol\":27705:27729  _mint(to, amount * 1e18) */\n      tag_173\n        /* \"contracts/STEMMER_flattened.sol\":27711:27713  to */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27724:27728  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":27715:27721  amount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":27715:27728  amount * 1e18 */\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"contracts/STEMMER_flattened.sol\":27705:27710  _mint */\n      tag_176\n        /* \"contracts/STEMMER_flattened.sol\":27705:27729  _mint(to, amount * 1e18) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/STEMMER_flattened.sol\":27751:27753  to */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":27744:27762  Minted(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/STEMMER_flattened.sol\":27755:27761  amount */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27744:27762  Minted(to, amount) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":27634:27769  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":26636:27599  function sellStem(uint256 stemAmount) external {... */\n    tag_72:\n        /* \"contracts/STEMMER_flattened.sol\":26714:26715  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":26701:26711  stemAmount */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":26701:26715  stemAmount > 0 */\n      gt\n        /* \"contracts/STEMMER_flattened.sol\":26693:26749  require(stemAmount > 0, \"Amount must be greater than 0\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/STEMMER_flattened.sol\":26811:26829  uint256 usdtAmount */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":26854:26862  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER_flattened.sol\":26846:26850  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":26833:26843  stemAmount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":26833:26850  stemAmount * 1e18 */\n      tag_182\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_182:\n        /* \"contracts/STEMMER_flattened.sol\":26832:26862  (stemAmount * 1e18) / sellRate */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/STEMMER_flattened.sol\":26811:26862  uint256 usdtAmount = (stemAmount * 1e18) / sellRate */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":26969:26991  uint256 fairUsdtAmount */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":27007:27011  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":26994:27004  stemAmount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":26994:27011  stemAmount / 1e18 */\n      tag_185\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_185:\n        /* \"contracts/STEMMER_flattened.sol\":26969:27011  uint256 fairUsdtAmount = stemAmount / 1e18 */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":27021:27042  uint256 expectedStems */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":27062:27070  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER_flattened.sol\":27045:27059  fairUsdtAmount */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27045:27070  fairUsdtAmount * sellRate */\n      tag_186\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_186:\n        /* \"contracts/STEMMER_flattened.sol\":27021:27070  uint256 expectedStems = fairUsdtAmount * sellRate */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":27080:27099  uint256 profitStems */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":27118:27128  stemAmount */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":27102:27115  expectedStems */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27102:27128  expectedStems > stemAmount */\n      gt\n        /* \"contracts/STEMMER_flattened.sol\":27102:27161  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      tag_187\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":27160:27161  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":27102:27161  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      jump(tag_188)\n    tag_187:\n        /* \"contracts/STEMMER_flattened.sol\":27147:27157  stemAmount */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":27131:27144  expectedStems */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27131:27157  expectedStems - stemAmount */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/STEMMER_flattened.sol\":27102:27161  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n    tag_188:\n        /* \"contracts/STEMMER_flattened.sol\":27080:27161  uint256 profitStems = expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":27258:27301  _transfer(msg.sender, treasury, stemAmount) */\n      tag_191\n        /* \"contracts/STEMMER_flattened.sol\":27268:27278  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":27280:27288  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":27290:27300  stemAmount */\n      dup8\n        /* \"contracts/STEMMER_flattened.sol\":27258:27267  _transfer */\n      tag_168\n        /* \"contracts/STEMMER_flattened.sol\":27258:27301  _transfer(msg.sender, treasury, stemAmount) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/STEMMER_flattened.sol\":27329:27330  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":27315:27326  profitStems */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":27315:27330  profitStems > 0 */\n      gt\n        /* \"contracts/STEMMER_flattened.sol\":27315:27362  profitStems > 0 && profitTreasury != address(0) */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":27360:27361  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":27334:27362  profitTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":27334:27348  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":27334:27362  profitTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/STEMMER_flattened.sol\":27315:27362  profitStems > 0 && profitTreasury != address(0) */\n    tag_192:\n        /* \"contracts/STEMMER_flattened.sol\":27311:27437  if (profitStems > 0 && profitTreasury != address(0)) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":27378:27426  _transfer(treasury, profitTreasury, profitStems) */\n      tag_194\n        /* \"contracts/STEMMER_flattened.sol\":27388:27396  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":27398:27412  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":27414:27425  profitStems */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":27378:27387  _transfer */\n      tag_168\n        /* \"contracts/STEMMER_flattened.sol\":27378:27426  _transfer(treasury, profitTreasury, profitStems) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/STEMMER_flattened.sol\":27311:27437  if (profitStems > 0 && profitTreasury != address(0)) {... */\n    tag_193:\n        /* \"contracts/STEMMER_flattened.sol\":27455:27464  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":27455:27473  usdtToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/STEMMER_flattened.sol\":27474:27484  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":27486:27496  usdtAmount */\n      dup7\n        /* \"contracts/STEMMER_flattened.sol\":27455:27497  usdtToken.transfer(msg.sender, usdtAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_198:\n        /* \"contracts/STEMMER_flattened.sol\":27447:27520  require(usdtToken.transfer(msg.sender, usdtAmount), \"USDT payout failed\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/STEMMER_flattened.sol\":27544:27554  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":27535:27592  SellStem(msg.sender, stemAmount, usdtAmount, profitStems) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420\n        /* \"contracts/STEMMER_flattened.sol\":27556:27566  stemAmount */\n      dup7\n        /* \"contracts/STEMMER_flattened.sol\":27568:27578  usdtAmount */\n      dup7\n        /* \"contracts/STEMMER_flattened.sol\":27580:27591  profitStems */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":27535:27592  SellStem(msg.sender, stemAmount, usdtAmount, profitStems) */\n      mload(0x40)\n      tag_202\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":26683:27599  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":26636:27599  function sellStem(uint256 stemAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":25130:25153  address public treasury */\n    tag_74:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":25057:25087  uint256 public sellRate = 1e18 */\n    tag_78:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":13885:14001  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"contracts/STEMMER_flattened.sol\":13950:13957  uint256 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":13976:13985  _balances */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":13976:13994  _balances[account] */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":13986:13993  account */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":13976:13994  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/STEMMER_flattened.sol\":13969:13994  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":13885:14001  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":24045:24146  function renounceOwnership() public virtual onlyOwner {... */\n    tag_85:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_206\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/STEMMER_flattened.sol\":24109:24139  _transferOwnership(address(0)) */\n      tag_208\n        /* \"contracts/STEMMER_flattened.sol\":24136:24137  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":24109:24127  _transferOwnership */\n      tag_209\n        /* \"contracts/STEMMER_flattened.sol\":24109:24139  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/STEMMER_flattened.sol\":24045:24146  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":27992:28255  function setBuyRate(uint256 newRate) external onlyOwner {... */\n    tag_88:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_211\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/STEMMER_flattened.sol\":28077:28081  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":28066:28073  newRate */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":28066:28081  newRate >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/STEMMER_flattened.sol\":28058:28112  require(newRate >= 1e18, \"Buy rate must be >= 1 STEM\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/STEMMER_flattened.sol\":28141:28149  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER_flattened.sol\":28130:28137  newRate */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":28130:28149  newRate <= sellRate */\n      gt\n      iszero\n        /* \"contracts/STEMMER_flattened.sol\":28122:28183  require(newRate <= sellRate, \"Buy rate must be <= Sell rate\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/STEMMER_flattened.sol\":28203:28210  newRate */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":28193:28200  buyRate */\n      0x07\n        /* \"contracts/STEMMER_flattened.sol\":28193:28210  buyRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":28225:28248  BuyRateUpdated(newRate) */\n      0xedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb1\n        /* \"contracts/STEMMER_flattened.sol\":28240:28247  newRate */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":28225:28248  BuyRateUpdated(newRate) */\n      mload(0x40)\n      tag_219\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMMER_flattened.sol\":27992:28255  function setBuyRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":23390:23475  function owner() public view virtual returns (address) {... */\n    tag_90:\n        /* \"contracts/STEMMER_flattened.sol\":23436:23443  address */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":23462:23468  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":23455:23468  return _owner */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":23390:23475  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":28325:28538  function setSellRate(uint256 newRate) external onlyOwner {... */\n    tag_94:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_222\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/STEMMER_flattened.sol\":28411:28415  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":28400:28407  newRate */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":28400:28415  newRate >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/STEMMER_flattened.sol\":28392:28464  require(newRate >= 1e18, unicode\"Sell rate must be ≥ 1 STEM per USDT\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/STEMMER_flattened.sol\":28485:28492  newRate */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":28474:28482  sellRate */\n      0x08\n        /* \"contracts/STEMMER_flattened.sol\":28474:28492  sellRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":28507:28531  SellRateUpdated(newRate) */\n      0xbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab\n        /* \"contracts/STEMMER_flattened.sol\":28523:28530  newRate */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":28507:28531  SellRateUpdated(newRate) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMMER_flattened.sol\":28325:28538  function setSellRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":12862:12955  function symbol() public view virtual returns (string memory) {... */\n    tag_96:\n        /* \"contracts/STEMMER_flattened.sol\":12909:12922  string memory */\n      0x60\n        /* \"contracts/STEMMER_flattened.sol\":12941:12948  _symbol */\n      0x04\n        /* \"contracts/STEMMER_flattened.sol\":12934:12948  return _symbol */\n      dup1\n      sload\n      tag_229\n      swap1\n      tag_135\n      jump\t// in\n    tag_229:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_135\n      jump\t// in\n    tag_230:\n      dup1\n      iszero\n      tag_231\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_232\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_231)\n    tag_232:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_233:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_233\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":12862:12955  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":27804:27945  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_100:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_235\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/STEMMER_flattened.sol\":27877:27903  _burn(from, amount * 1e18) */\n      tag_237\n        /* \"contracts/STEMMER_flattened.sol\":27883:27887  from */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27898:27902  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":27889:27895  amount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":27889:27902  amount * 1e18 */\n      tag_238\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_238:\n        /* \"contracts/STEMMER_flattened.sol\":27877:27882  _burn */\n      tag_239\n        /* \"contracts/STEMMER_flattened.sol\":27877:27903  _burn(from, amount * 1e18) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/STEMMER_flattened.sol\":27925:27929  from */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":27918:27938  Burned(from, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7\n        /* \"contracts/STEMMER_flattened.sol\":27931:27937  amount */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":27918:27938  Burned(from, amount) */\n      mload(0x40)\n      tag_240\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":27804:27945  function burn(address from, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":14196:14374  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_103:\n        /* \"contracts/STEMMER_flattened.sol\":14265:14269  bool */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":14281:14294  address owner */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":14297:14309  _msgSender() */\n      tag_242\n        /* \"contracts/STEMMER_flattened.sol\":14297:14307  _msgSender */\n      tag_142\n        /* \"contracts/STEMMER_flattened.sol\":14297:14309  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/STEMMER_flattened.sol\":14281:14309  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":14319:14346  _transfer(owner, to, value) */\n      tag_243\n        /* \"contracts/STEMMER_flattened.sol\":14329:14334  owner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":14336:14338  to */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":14340:14345  value */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":14319:14328  _transfer */\n      tag_168\n        /* \"contracts/STEMMER_flattened.sol\":14319:14346  _transfer(owner, to, value) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/STEMMER_flattened.sol\":14363:14367  true */\n      0x01\n        /* \"contracts/STEMMER_flattened.sol\":14356:14367  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":14196:14374  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":24961:24984  IERC20 public usdtToken */\n    tag_106:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":26215:26599  function buyStem(uint256 usdtAmount) external {... */\n    tag_111:\n        /* \"contracts/STEMMER_flattened.sol\":26292:26293  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":26279:26289  usdtAmount */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":26279:26293  usdtAmount > 0 */\n      gt\n        /* \"contracts/STEMMER_flattened.sol\":26271:26327  require(usdtAmount > 0, \"Amount must be greater than 0\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_181\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/STEMMER_flattened.sol\":26338:26356  uint256 stemAmount */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":26372:26376  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER_flattened.sol\":26359:26369  usdtAmount */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":26359:26376  usdtAmount * 1e18 */\n      tag_247\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_247:\n        /* \"contracts/STEMMER_flattened.sol\":26338:26376  uint256 stemAmount = usdtAmount * 1e18 */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":26394:26403  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":26394:26416  usdtToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/STEMMER_flattened.sol\":26417:26427  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":26437:26441  this */\n      address\n        /* \"contracts/STEMMER_flattened.sol\":26444:26454  usdtAmount */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":26394:26455  usdtToken.transferFrom(msg.sender, address(this), usdtAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_252:\n        /* \"contracts/STEMMER_flattened.sol\":26386:26480  require(usdtToken.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/STEMMER_flattened.sol\":26491:26534  _transfer(treasury, msg.sender, stemAmount) */\n      tag_256\n        /* \"contracts/STEMMER_flattened.sol\":26501:26509  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":26511:26521  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":26523:26533  stemAmount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":26491:26500  _transfer */\n      tag_168\n        /* \"contracts/STEMMER_flattened.sol\":26491:26534  _transfer(treasury, msg.sender, stemAmount) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/STEMMER_flattened.sol\":26557:26567  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":26549:26592  BuyStem(msg.sender, usdtAmount, stemAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb\n        /* \"contracts/STEMMER_flattened.sol\":26569:26579  usdtAmount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":26581:26591  stemAmount */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":26549:26592  BuyStem(msg.sender, usdtAmount, stemAmount) */\n      mload(0x40)\n      tag_257\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":26261:26599  {... */\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":26215:26599  function buyStem(uint256 usdtAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":29199:29905  function getConfig() external view returns (... */\n    tag_113:\n        /* \"contracts/STEMMER_flattened.sol\":29252:29268  uint256 _buyRate */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":29278:29295  uint256 _sellRate */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":29305:29322  address _treasury */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":29332:29355  address _profitTreasury */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":29365:29392  uint256 treasuryStemBalance */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":29402:29427  uint256 profitStemBalance */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":29437:29464  uint256 contractStemBalance */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":29474:29501  uint256 contractUsdtBalance */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":29511:29534  uint256 totalStemSupply */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":29584:29591  buyRate */\n      sload(0x07)\n        /* \"contracts/STEMMER_flattened.sol\":29609:29617  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER_flattened.sol\":29635:29643  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":29661:29675  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":29693:29712  balanceOf(treasury) */\n      tag_260\n        /* \"contracts/STEMMER_flattened.sol\":29703:29711  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":29693:29702  balanceOf */\n      tag_82\n        /* \"contracts/STEMMER_flattened.sol\":29693:29712  balanceOf(treasury) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/STEMMER_flattened.sol\":29730:29755  balanceOf(profitTreasury) */\n      tag_261\n        /* \"contracts/STEMMER_flattened.sol\":29740:29754  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":29730:29739  balanceOf */\n      tag_82\n        /* \"contracts/STEMMER_flattened.sol\":29730:29755  balanceOf(profitTreasury) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/STEMMER_flattened.sol\":29773:29797  balanceOf(address(this)) */\n      tag_262\n        /* \"contracts/STEMMER_flattened.sol\":29791:29795  this */\n      address\n        /* \"contracts/STEMMER_flattened.sol\":29773:29782  balanceOf */\n      tag_82\n        /* \"contracts/STEMMER_flattened.sol\":29773:29797  balanceOf(address(this)) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/STEMMER_flattened.sol\":29815:29824  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":29815:29834  usdtToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/STEMMER_flattened.sol\":29843:29847  this */\n      address\n        /* \"contracts/STEMMER_flattened.sol\":29815:29849  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_263:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"contracts/STEMMER_flattened.sol\":29867:29880  totalSupply() */\n      tag_268\n        /* \"contracts/STEMMER_flattened.sol\":29867:29878  totalSupply */\n      tag_54\n        /* \"contracts/STEMMER_flattened.sol\":29867:29880  totalSupply() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/STEMMER_flattened.sol\":29559:29894  return (... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":29199:29905  function getConfig() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":14432:14572  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_119:\n        /* \"contracts/STEMMER_flattened.sol\":14512:14519  uint256 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":14538:14549  _allowances */\n      0x01\n        /* \"contracts/STEMMER_flattened.sol\":14538:14556  _allowances[owner] */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":14550:14555  owner */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":14538:14556  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/STEMMER_flattened.sol\":14538:14565  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":14557:14564  spender */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":14538:14565  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/STEMMER_flattened.sol\":14531:14565  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":14432:14572  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":28819:28956  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_123:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_271\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/STEMMER_flattened.sol\":28899:28908  _treasury */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":28888:28896  treasury */\n      0x09\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":28888:28908  treasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":28939:28948  _treasury */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":28923:28949  TreasuryChanged(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER_flattened.sol\":28819:28956  function setTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":25159:25188  address public profitTreasury */\n    tag_125:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":24295:24510  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      tag_274\n        /* \"contracts/STEMMER_flattened.sol\":23283:23294  _checkOwner */\n      tag_147\n        /* \"contracts/STEMMER_flattened.sol\":23283:23296  _checkOwner() */\n      jump\t// in\n    tag_274:\n        /* \"contracts/STEMMER_flattened.sol\":24399:24400  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":24379:24401  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":24379:24387  newOwner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":24379:24401  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":24375:24466  if (newOwner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":24452:24453  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":24424:24455  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":24375:24466  if (newOwner == address(0)) {... */\n    tag_276:\n        /* \"contracts/STEMMER_flattened.sol\":24475:24503  _transferOwnership(newOwner) */\n      tag_278\n        /* \"contracts/STEMMER_flattened.sol\":24494:24502  newOwner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":24475:24493  _transferOwnership */\n      tag_209\n        /* \"contracts/STEMMER_flattened.sol\":24475:24503  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/STEMMER_flattened.sol\":24295:24510  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":24991:25020  uint256 public buyRate = 1e18 */\n    tag_131:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":4208:4304  function _msgSender() internal view virtual returns (address) {... */\n    tag_142:\n        /* \"contracts/STEMMER_flattened.sol\":4261:4268  address */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":4287:4297  msg.sender */\n      caller\n        /* \"contracts/STEMMER_flattened.sol\":4280:4297  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":4208:4304  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":19607:19735  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_144:\n        /* \"contracts/STEMMER_flattened.sol\":19691:19728  _approve(owner, spender, value, true) */\n      tag_281\n        /* \"contracts/STEMMER_flattened.sol\":19700:19705  owner */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":19707:19714  spender */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":19716:19721  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":19723:19727  true */\n      0x01\n        /* \"contracts/STEMMER_flattened.sol\":19691:19699  _approve */\n      tag_282\n        /* \"contracts/STEMMER_flattened.sol\":19691:19728  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/STEMMER_flattened.sol\":19607:19735  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":23548:23710  function _checkOwner() internal view virtual {... */\n    tag_147:\n        /* \"contracts/STEMMER_flattened.sol\":23618:23630  _msgSender() */\n      tag_284\n        /* \"contracts/STEMMER_flattened.sol\":23618:23628  _msgSender */\n      tag_142\n        /* \"contracts/STEMMER_flattened.sol\":23618:23630  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/STEMMER_flattened.sol\":23607:23630  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":23607:23614  owner() */\n      tag_285\n        /* \"contracts/STEMMER_flattened.sol\":23607:23612  owner */\n      tag_90\n        /* \"contracts/STEMMER_flattened.sol\":23607:23614  owner() */\n      jump\t// in\n    tag_285:\n        /* \"contracts/STEMMER_flattened.sol\":23607:23630  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/STEMMER_flattened.sol\":23603:23704  if (owner() != _msgSender()) {... */\n      tag_286\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":23680:23692  _msgSender() */\n      tag_287\n        /* \"contracts/STEMMER_flattened.sol\":23680:23690  _msgSender */\n      tag_142\n        /* \"contracts/STEMMER_flattened.sol\":23680:23692  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"contracts/STEMMER_flattened.sol\":23653:23693  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":23603:23704  if (owner() != _msgSender()) {... */\n    tag_286:\n        /* \"contracts/STEMMER_flattened.sol\":23548:23710  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":21296:21772  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"contracts/STEMMER_flattened.sol\":21395:21419  uint256 currentAllowance */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":21422:21447  allowance(owner, spender) */\n      tag_290\n        /* \"contracts/STEMMER_flattened.sol\":21432:21437  owner */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":21439:21446  spender */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":21422:21431  allowance */\n      tag_119\n        /* \"contracts/STEMMER_flattened.sol\":21422:21447  allowance(owner, spender) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/STEMMER_flattened.sol\":21395:21447  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":21480:21497  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/STEMMER_flattened.sol\":21461:21477  currentAllowance */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":21461:21497  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/STEMMER_flattened.sol\":21457:21766  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":21536:21541  value */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":21517:21533  currentAllowance */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":21517:21541  currentAllowance < value */\n      lt\n        /* \"contracts/STEMMER_flattened.sol\":21513:21643  if (currentAllowance < value) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":21595:21602  spender */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":21604:21620  currentAllowance */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":21622:21627  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":21568:21628  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":21513:21643  if (currentAllowance < value) {... */\n    tag_292:\n        /* \"contracts/STEMMER_flattened.sol\":21684:21741  _approve(owner, spender, currentAllowance - value, false) */\n      tag_295\n        /* \"contracts/STEMMER_flattened.sol\":21693:21698  owner */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":21700:21707  spender */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":21728:21733  value */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":21709:21725  currentAllowance */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":21709:21733  currentAllowance - value */\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":21735:21740  false */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":21684:21692  _approve */\n      tag_282\n        /* \"contracts/STEMMER_flattened.sol\":21684:21741  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/STEMMER_flattened.sol\":21457:21766  if (currentAllowance < type(uint256).max) {... */\n    tag_291:\n        /* \"contracts/STEMMER_flattened.sol\":21385:21772  {... */\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":21296:21772  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":16274:16574  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_168:\n        /* \"contracts/STEMMER_flattened.sol\":16373:16374  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":16357:16375  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":16357:16361  from */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":16357:16375  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":16353:16439  if (from == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":16425:16426  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":16398:16428  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":16353:16439  if (from == address(0)) {... */\n    tag_297:\n        /* \"contracts/STEMMER_flattened.sol\":16466:16467  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":16452:16468  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":16452:16454  to */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":16452:16468  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":16448:16534  if (to == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":16520:16521  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":16491:16523  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":16448:16534  if (to == address(0)) {... */\n    tag_299:\n        /* \"contracts/STEMMER_flattened.sol\":16543:16567  _update(from, to, value) */\n      tag_301\n        /* \"contracts/STEMMER_flattened.sol\":16551:16555  from */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":16557:16559  to */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":16561:16566  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":16543:16550  _update */\n      tag_302\n        /* \"contracts/STEMMER_flattened.sol\":16543:16567  _update(from, to, value) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/STEMMER_flattened.sol\":16274:16574  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":18339:18547  function _mint(address account, uint256 value) internal {... */\n    tag_176:\n        /* \"contracts/STEMMER_flattened.sol\":18428:18429  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":18409:18430  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":18409:18416  account */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":18409:18430  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":18405:18496  if (account == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":18482:18483  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":18453:18485  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":18405:18496  if (account == address(0)) {... */\n    tag_304:\n        /* \"contracts/STEMMER_flattened.sol\":18505:18540  _update(address(0), account, value) */\n      tag_306\n        /* \"contracts/STEMMER_flattened.sol\":18521:18522  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":18525:18532  account */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":18534:18539  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":18505:18512  _update */\n      tag_302\n        /* \"contracts/STEMMER_flattened.sol\":18505:18540  _update(address(0), account, value) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/STEMMER_flattened.sol\":18339:18547  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":24664:24851  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_209:\n        /* \"contracts/STEMMER_flattened.sol\":24737:24753  address oldOwner */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":24756:24762  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":24737:24762  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":24781:24789  newOwner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":24772:24778  _owner */\n      0x05\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":24772:24789  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":24835:24843  newOwner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":24804:24844  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":24825:24833  oldOwner */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":24804:24844  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/STEMMER_flattened.sol\":24727:24851  {... */\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":24664:24851  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":18865:19071  function _burn(address account, uint256 value) internal {... */\n    tag_239:\n        /* \"contracts/STEMMER_flattened.sol\":18954:18955  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":18935:18956  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":18935:18942  account */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":18935:18956  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":18931:19020  if (account == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":19006:19007  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":18979:19009  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":18931:19020  if (account == address(0)) {... */\n    tag_309:\n        /* \"contracts/STEMMER_flattened.sol\":19029:19064  _update(account, address(0), value) */\n      tag_311\n        /* \"contracts/STEMMER_flattened.sol\":19037:19044  account */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":19054:19055  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":19058:19063  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":19029:19036  _update */\n      tag_302\n        /* \"contracts/STEMMER_flattened.sol\":19029:19064  _update(account, address(0), value) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/STEMMER_flattened.sol\":18865:19071  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":20582:21014  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_282:\n        /* \"contracts/STEMMER_flattened.sol\":20711:20712  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":20694:20713  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":20694:20699  owner */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":20694:20713  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":20690:20779  if (owner == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":20765:20766  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":20736:20768  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":20690:20779  if (owner == address(0)) {... */\n    tag_313:\n        /* \"contracts/STEMMER_flattened.sol\":20811:20812  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":20792:20813  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":20792:20799  spender */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":20792:20813  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":20788:20878  if (spender == address(0)) {... */\n      tag_315\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":20864:20865  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":20836:20867  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":20788:20878  if (spender == address(0)) {... */\n    tag_315:\n        /* \"contracts/STEMMER_flattened.sol\":20917:20922  value */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":20887:20898  _allowances */\n      0x01\n        /* \"contracts/STEMMER_flattened.sol\":20887:20905  _allowances[owner] */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":20899:20904  owner */\n      dup7\n        /* \"contracts/STEMMER_flattened.sol\":20887:20905  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/STEMMER_flattened.sol\":20887:20914  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":20906:20913  spender */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":20887:20914  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/STEMMER_flattened.sol\":20887:20922  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":20936:20945  emitEvent */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":20932:21008  if (emitEvent) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":20982:20989  spender */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":20966:20997  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":20975:20980  owner */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":20966:20997  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/STEMMER_flattened.sol\":20991:20996  value */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":20966:20997  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_318\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/STEMMER_flattened.sol\":20932:21008  if (emitEvent) {... */\n    tag_317:\n        /* \"contracts/STEMMER_flattened.sol\":20582:21014  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER_flattened.sol\":16889:17996  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_302:\n        /* \"contracts/STEMMER_flattened.sol\":16994:16995  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":16978:16996  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":16978:16982  from */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":16978:16996  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":16974:17514  if (from == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":17130:17135  value */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":17114:17126  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17114:17135  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":16974:17514  if (from == address(0)) {... */\n      jump(tag_323)\n    tag_320:\n        /* \"contracts/STEMMER_flattened.sol\":17166:17185  uint256 fromBalance */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17188:17197  _balances */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":17188:17203  _balances[from] */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17198:17202  from */\n      dup6\n        /* \"contracts/STEMMER_flattened.sol\":17188:17203  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/STEMMER_flattened.sol\":17166:17203  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":17235:17240  value */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":17221:17232  fromBalance */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":17221:17240  fromBalance < value */\n      lt\n        /* \"contracts/STEMMER_flattened.sol\":17217:17332  if (fromBalance < value) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":17292:17296  from */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":17298:17309  fromBalance */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":17311:17316  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":17267:17317  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/STEMMER_flattened.sol\":17217:17332  if (fromBalance < value) {... */\n    tag_324:\n        /* \"contracts/STEMMER_flattened.sol\":17484:17489  value */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":17470:17481  fromBalance */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":17470:17489  fromBalance - value */\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":17452:17461  _balances */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17452:17467  _balances[from] */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":17462:17466  from */\n      dup7\n        /* \"contracts/STEMMER_flattened.sol\":17452:17467  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/STEMMER_flattened.sol\":17452:17489  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":17152:17514  {... */\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":16974:17514  if (from == address(0)) {... */\n    tag_323:\n        /* \"contracts/STEMMER_flattened.sol\":17542:17543  0 */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17528:17544  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":17528:17530  to */\n      dup3\n        /* \"contracts/STEMMER_flattened.sol\":17528:17544  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/STEMMER_flattened.sol\":17524:17949  if (to == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"contracts/STEMMER_flattened.sol\":17707:17712  value */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":17691:17703  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17691:17712  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":17524:17949  if (to == address(0)) {... */\n      jump(tag_327)\n    tag_326:\n        /* \"contracts/STEMMER_flattened.sol\":17919:17924  value */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":17902:17911  _balances */\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17902:17915  _balances[to] */\n      dup1\n        /* \"contracts/STEMMER_flattened.sol\":17912:17914  to */\n      dup5\n        /* \"contracts/STEMMER_flattened.sol\":17902:17915  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/STEMMER_flattened.sol\":17902:17924  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER_flattened.sol\":17524:17949  if (to == address(0)) {... */\n    tag_327:\n        /* \"contracts/STEMMER_flattened.sol\":17979:17981  to */\n      dup2\n        /* \"contracts/STEMMER_flattened.sol\":17964:17989  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER_flattened.sol\":17973:17977  from */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":17964:17989  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/STEMMER_flattened.sol\":17983:17988  value */\n      dup4\n        /* \"contracts/STEMMER_flattened.sol\":17964:17989  Transfer(from, to, value) */\n      mload(0x40)\n      tag_328\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/STEMMER_flattened.sol\":16889:17996  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_329:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_330:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_331:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_379:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_379)\n    tag_381:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_332:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_333:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_384\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_329\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":818:889   */\n      tag_385\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_330\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_386\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_331\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":988:1017   */\n      tag_387\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_332\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_39:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_389\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_333\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_335:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_337:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_338:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_395\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_337\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_339:\n        /* \"#utility.yul\":1983:2007   */\n      tag_397\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_338\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_398:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_340:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_400\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_339\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_341:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_342:\n        /* \"#utility.yul\":2339:2363   */\n      tag_403\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_341\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_404:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_343:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_406\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_342\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_42:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_409\n      tag_335\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2632:2751   */\n    tag_408:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_410\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_340\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_411\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_343\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_344:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_345:\n        /* \"#utility.yul\":3196:3217   */\n      tag_414\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_344\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_45:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_416\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_345\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3775   */\n    tag_48:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      sub\n        /* \"#utility.yul\":3525:3557   */\n      slt\n        /* \"#utility.yul\":3522:3641   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":3560:3639   */\n      tag_419\n      tag_335\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3522:3641   */\n    tag_418:\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3705:3758   */\n      tag_420\n        /* \"#utility.yul\":3750:3757   */\n      dup5\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3730:3739   */\n      dup6\n        /* \"#utility.yul\":3726:3748   */\n      add\n        /* \"#utility.yul\":3705:3758   */\n      tag_340\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3695:3758   */\n      swap2\n      pop\n        /* \"#utility.yul\":3651:3768   */\n      pop\n        /* \"#utility.yul\":3446:3775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:3899   */\n    tag_346:\n        /* \"#utility.yul\":3868:3892   */\n      tag_422\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3868:3892   */\n      tag_341\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3863:3866   */\n      dup3\n        /* \"#utility.yul\":3856:3893   */\n      mstore\n        /* \"#utility.yul\":3781:3899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4127   */\n    tag_56:\n        /* \"#utility.yul\":3998:4002   */\n      0x00\n        /* \"#utility.yul\":4036:4038   */\n      0x20\n        /* \"#utility.yul\":4025:4034   */\n      dup3\n        /* \"#utility.yul\":4021:4039   */\n      add\n        /* \"#utility.yul\":4013:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":4049:4120   */\n      tag_424\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4049:4120   */\n      tag_346\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3905:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4752   */\n    tag_59:\n        /* \"#utility.yul\":4210:4216   */\n      0x00\n        /* \"#utility.yul\":4218:4224   */\n      dup1\n        /* \"#utility.yul\":4226:4232   */\n      0x00\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4263:4272   */\n      dup5\n        /* \"#utility.yul\":4254:4261   */\n      dup7\n        /* \"#utility.yul\":4250:4273   */\n      sub\n        /* \"#utility.yul\":4246:4278   */\n      slt\n        /* \"#utility.yul\":4243:4362   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":4281:4360   */\n      tag_427\n      tag_335\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4243:4362   */\n    tag_426:\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4426:4479   */\n      tag_428\n        /* \"#utility.yul\":4471:4478   */\n      dup7\n        /* \"#utility.yul\":4462:4468   */\n      dup3\n        /* \"#utility.yul\":4451:4460   */\n      dup8\n        /* \"#utility.yul\":4447:4469   */\n      add\n        /* \"#utility.yul\":4426:4479   */\n      tag_340\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4416:4479   */\n      swap4\n      pop\n        /* \"#utility.yul\":4372:4489   */\n      pop\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4554:4607   */\n      tag_429\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4590:4596   */\n      dup3\n        /* \"#utility.yul\":4579:4588   */\n      dup8\n        /* \"#utility.yul\":4575:4597   */\n      add\n        /* \"#utility.yul\":4554:4607   */\n      tag_340\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4544:4607   */\n      swap3\n      pop\n        /* \"#utility.yul\":4499:4617   */\n      pop\n        /* \"#utility.yul\":4656:4658   */\n      0x40\n        /* \"#utility.yul\":4682:4735   */\n      tag_430\n        /* \"#utility.yul\":4727:4734   */\n      dup7\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup8\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_343\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4627:4745   */\n      pop\n        /* \"#utility.yul\":4133:4752   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4758:4844   */\n    tag_347:\n        /* \"#utility.yul\":4793:4800   */\n      0x00\n        /* \"#utility.yul\":4833:4837   */\n      0xff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4838   */\n      and\n        /* \"#utility.yul\":4811:4838   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4962   */\n    tag_348:\n        /* \"#utility.yul\":4933:4955   */\n      tag_433\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4933:4955   */\n      tag_347\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4956   */\n      mstore\n        /* \"#utility.yul\":4850:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5182   */\n    tag_65:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5175   */\n      tag_435\n        /* \"#utility.yul\":5172:5173   */\n      0x00\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5157:5174   */\n      add\n        /* \"#utility.yul\":5148:5154   */\n      dup5\n        /* \"#utility.yul\":5108:5175   */\n      tag_348\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4968:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_71:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_438\n      tag_335\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5264:5383   */\n    tag_437:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_439\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_343\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_349:\n        /* \"#utility.yul\":5610:5634   */\n      tag_441\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_338\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_76:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_443\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_349\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:5935   */\n    tag_350:\n        /* \"#utility.yul\":5903:5906   */\n      0x00\n        /* \"#utility.yul\":5924:5929   */\n      dup2\n        /* \"#utility.yul\":5917:5929   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5941:6083   */\n    tag_351:\n        /* \"#utility.yul\":5991:6000   */\n      0x00\n        /* \"#utility.yul\":6024:6077   */\n      tag_446\n        /* \"#utility.yul\":6042:6076   */\n      tag_447\n        /* \"#utility.yul\":6051:6075   */\n      tag_448\n        /* \"#utility.yul\":6069:6074   */\n      dup5\n        /* \"#utility.yul\":6051:6075   */\n      tag_337\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":6042:6076   */\n      tag_350\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6024:6077   */\n      tag_337\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":6011:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5941:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6215   */\n    tag_352:\n        /* \"#utility.yul\":6139:6148   */\n      0x00\n        /* \"#utility.yul\":6172:6209   */\n      tag_450\n        /* \"#utility.yul\":6203:6208   */\n      dup3\n        /* \"#utility.yul\":6172:6209   */\n      tag_351\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6159:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6360   */\n    tag_353:\n        /* \"#utility.yul\":6284:6293   */\n      0x00\n        /* \"#utility.yul\":6317:6354   */\n      tag_452\n        /* \"#utility.yul\":6348:6353   */\n      dup3\n        /* \"#utility.yul\":6317:6354   */\n      tag_352\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6304:6354   */\n      swap1\n      pop\n        /* \"#utility.yul\":6221:6360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6366:6523   */\n    tag_354:\n        /* \"#utility.yul\":6466:6516   */\n      tag_454\n        /* \"#utility.yul\":6510:6515   */\n      dup2\n        /* \"#utility.yul\":6466:6516   */\n      tag_353\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6461:6464   */\n      dup3\n        /* \"#utility.yul\":6454:6517   */\n      mstore\n        /* \"#utility.yul\":6366:6523   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6529:6777   */\n    tag_108:\n        /* \"#utility.yul\":6635:6639   */\n      0x00\n        /* \"#utility.yul\":6673:6675   */\n      0x20\n        /* \"#utility.yul\":6662:6671   */\n      dup3\n        /* \"#utility.yul\":6658:6676   */\n      add\n        /* \"#utility.yul\":6650:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6686:6770   */\n      tag_456\n        /* \"#utility.yul\":6767:6768   */\n      0x00\n        /* \"#utility.yul\":6756:6765   */\n      dup4\n        /* \"#utility.yul\":6752:6769   */\n      add\n        /* \"#utility.yul\":6743:6749   */\n      dup5\n        /* \"#utility.yul\":6686:6770   */\n      tag_354\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6529:6777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6783:7891   */\n    tag_115:\n        /* \"#utility.yul\":7100:7104   */\n      0x00\n        /* \"#utility.yul\":7138:7141   */\n      0x0120\n        /* \"#utility.yul\":7127:7136   */\n      dup3\n        /* \"#utility.yul\":7123:7142   */\n      add\n        /* \"#utility.yul\":7115:7142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7152:7223   */\n      tag_458\n        /* \"#utility.yul\":7220:7221   */\n      0x00\n        /* \"#utility.yul\":7209:7218   */\n      dup4\n        /* \"#utility.yul\":7205:7222   */\n      add\n        /* \"#utility.yul\":7196:7202   */\n      dup13\n        /* \"#utility.yul\":7152:7223   */\n      tag_346\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7233:7305   */\n      tag_459\n        /* \"#utility.yul\":7301:7303   */\n      0x20\n        /* \"#utility.yul\":7290:7299   */\n      dup4\n        /* \"#utility.yul\":7286:7304   */\n      add\n        /* \"#utility.yul\":7277:7283   */\n      dup12\n        /* \"#utility.yul\":7233:7305   */\n      tag_346\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":7315:7387   */\n      tag_460\n        /* \"#utility.yul\":7383:7385   */\n      0x40\n        /* \"#utility.yul\":7372:7381   */\n      dup4\n        /* \"#utility.yul\":7368:7386   */\n      add\n        /* \"#utility.yul\":7359:7365   */\n      dup11\n        /* \"#utility.yul\":7315:7387   */\n      tag_349\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7397:7469   */\n      tag_461\n        /* \"#utility.yul\":7465:7467   */\n      0x60\n        /* \"#utility.yul\":7454:7463   */\n      dup4\n        /* \"#utility.yul\":7450:7468   */\n      add\n        /* \"#utility.yul\":7441:7447   */\n      dup10\n        /* \"#utility.yul\":7397:7469   */\n      tag_349\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7479:7552   */\n      tag_462\n        /* \"#utility.yul\":7547:7550   */\n      0x80\n        /* \"#utility.yul\":7536:7545   */\n      dup4\n        /* \"#utility.yul\":7532:7551   */\n      add\n        /* \"#utility.yul\":7523:7529   */\n      dup9\n        /* \"#utility.yul\":7479:7552   */\n      tag_346\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7562:7635   */\n      tag_463\n        /* \"#utility.yul\":7630:7633   */\n      0xa0\n        /* \"#utility.yul\":7619:7628   */\n      dup4\n        /* \"#utility.yul\":7615:7634   */\n      add\n        /* \"#utility.yul\":7606:7612   */\n      dup8\n        /* \"#utility.yul\":7562:7635   */\n      tag_346\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":7645:7718   */\n      tag_464\n        /* \"#utility.yul\":7713:7716   */\n      0xc0\n        /* \"#utility.yul\":7702:7711   */\n      dup4\n        /* \"#utility.yul\":7698:7717   */\n      add\n        /* \"#utility.yul\":7689:7695   */\n      dup7\n        /* \"#utility.yul\":7645:7718   */\n      tag_346\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7728:7801   */\n      tag_465\n        /* \"#utility.yul\":7796:7799   */\n      0xe0\n        /* \"#utility.yul\":7785:7794   */\n      dup4\n        /* \"#utility.yul\":7781:7800   */\n      add\n        /* \"#utility.yul\":7772:7778   */\n      dup6\n        /* \"#utility.yul\":7728:7801   */\n      tag_346\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7811:7884   */\n      tag_466\n        /* \"#utility.yul\":7879:7882   */\n      0x0100\n        /* \"#utility.yul\":7868:7877   */\n      dup4\n        /* \"#utility.yul\":7864:7883   */\n      add\n        /* \"#utility.yul\":7855:7861   */\n      dup5\n        /* \"#utility.yul\":7811:7884   */\n      tag_346\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6783:7891   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7897:8371   */\n    tag_118:\n        /* \"#utility.yul\":7965:7971   */\n      0x00\n        /* \"#utility.yul\":7973:7979   */\n      dup1\n        /* \"#utility.yul\":8022:8024   */\n      0x40\n        /* \"#utility.yul\":8010:8019   */\n      dup4\n        /* \"#utility.yul\":8001:8008   */\n      dup6\n        /* \"#utility.yul\":7997:8020   */\n      sub\n        /* \"#utility.yul\":7993:8025   */\n      slt\n        /* \"#utility.yul\":7990:8109   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":8028:8107   */\n      tag_469\n      tag_335\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7990:8109   */\n    tag_468:\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8173:8226   */\n      tag_470\n        /* \"#utility.yul\":8218:8225   */\n      dup6\n        /* \"#utility.yul\":8209:8215   */\n      dup3\n        /* \"#utility.yul\":8198:8207   */\n      dup7\n        /* \"#utility.yul\":8194:8216   */\n      add\n        /* \"#utility.yul\":8173:8226   */\n      tag_340\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8163:8226   */\n      swap3\n      pop\n        /* \"#utility.yul\":8119:8236   */\n      pop\n        /* \"#utility.yul\":8275:8277   */\n      0x20\n        /* \"#utility.yul\":8301:8354   */\n      tag_471\n        /* \"#utility.yul\":8346:8353   */\n      dup6\n        /* \"#utility.yul\":8337:8343   */\n      dup3\n        /* \"#utility.yul\":8326:8335   */\n      dup7\n        /* \"#utility.yul\":8322:8344   */\n      add\n        /* \"#utility.yul\":8301:8354   */\n      tag_340\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8291:8354   */\n      swap2\n      pop\n        /* \"#utility.yul\":8246:8364   */\n      pop\n        /* \"#utility.yul\":7897:8371   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8377:8557   */\n    tag_355:\n        /* \"#utility.yul\":8425:8502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8422:8423   */\n      0x00\n        /* \"#utility.yul\":8415:8503   */\n      mstore\n        /* \"#utility.yul\":8522:8526   */\n      0x22\n        /* \"#utility.yul\":8519:8520   */\n      0x04\n        /* \"#utility.yul\":8512:8527   */\n      mstore\n        /* \"#utility.yul\":8546:8550   */\n      0x24\n        /* \"#utility.yul\":8543:8544   */\n      0x00\n        /* \"#utility.yul\":8536:8551   */\n      revert\n        /* \"#utility.yul\":8563:8883   */\n    tag_135:\n        /* \"#utility.yul\":8607:8613   */\n      0x00\n        /* \"#utility.yul\":8644:8645   */\n      0x02\n        /* \"#utility.yul\":8638:8642   */\n      dup3\n        /* \"#utility.yul\":8634:8646   */\n      div\n        /* \"#utility.yul\":8624:8646   */\n      swap1\n      pop\n        /* \"#utility.yul\":8691:8692   */\n      0x01\n        /* \"#utility.yul\":8685:8689   */\n      dup3\n        /* \"#utility.yul\":8681:8693   */\n      and\n        /* \"#utility.yul\":8712:8730   */\n      dup1\n        /* \"#utility.yul\":8702:8783   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":8768:8772   */\n      0x7f\n        /* \"#utility.yul\":8760:8766   */\n      dup3\n        /* \"#utility.yul\":8756:8773   */\n      and\n        /* \"#utility.yul\":8746:8773   */\n      swap2\n      pop\n        /* \"#utility.yul\":8702:8783   */\n    tag_474:\n        /* \"#utility.yul\":8830:8832   */\n      0x20\n        /* \"#utility.yul\":8822:8828   */\n      dup3\n        /* \"#utility.yul\":8819:8833   */\n      lt\n        /* \"#utility.yul\":8799:8817   */\n      dup2\n        /* \"#utility.yul\":8796:8834   */\n      sub\n        /* \"#utility.yul\":8793:8877   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":8849:8867   */\n      tag_476\n      tag_355\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8793:8877   */\n    tag_475:\n        /* \"#utility.yul\":8614:8883   */\n      pop\n        /* \"#utility.yul\":8563:8883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8889:9221   */\n    tag_153:\n        /* \"#utility.yul\":9010:9014   */\n      0x00\n        /* \"#utility.yul\":9048:9050   */\n      0x40\n        /* \"#utility.yul\":9037:9046   */\n      dup3\n        /* \"#utility.yul\":9033:9051   */\n      add\n        /* \"#utility.yul\":9025:9051   */\n      swap1\n      pop\n        /* \"#utility.yul\":9061:9132   */\n      tag_478\n        /* \"#utility.yul\":9129:9130   */\n      0x00\n        /* \"#utility.yul\":9118:9127   */\n      dup4\n        /* \"#utility.yul\":9114:9131   */\n      add\n        /* \"#utility.yul\":9105:9111   */\n      dup6\n        /* \"#utility.yul\":9061:9132   */\n      tag_349\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9142:9214   */\n      tag_479\n        /* \"#utility.yul\":9210:9212   */\n      0x20\n        /* \"#utility.yul\":9199:9208   */\n      dup4\n        /* \"#utility.yul\":9195:9213   */\n      add\n        /* \"#utility.yul\":9186:9192   */\n      dup5\n        /* \"#utility.yul\":9142:9214   */\n      tag_346\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8889:9221   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9227:9343   */\n    tag_356:\n        /* \"#utility.yul\":9297:9318   */\n      tag_481\n        /* \"#utility.yul\":9312:9317   */\n      dup2\n        /* \"#utility.yul\":9297:9318   */\n      tag_344\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9290:9295   */\n      dup2\n        /* \"#utility.yul\":9287:9319   */\n      eq\n        /* \"#utility.yul\":9277:9337   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":9333:9334   */\n      0x00\n        /* \"#utility.yul\":9330:9331   */\n      dup1\n        /* \"#utility.yul\":9323:9335   */\n      revert\n        /* \"#utility.yul\":9277:9337   */\n    tag_482:\n        /* \"#utility.yul\":9227:9343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9349:9486   */\n    tag_357:\n        /* \"#utility.yul\":9403:9408   */\n      0x00\n        /* \"#utility.yul\":9434:9440   */\n      dup2\n        /* \"#utility.yul\":9428:9441   */\n      mload\n        /* \"#utility.yul\":9419:9441   */\n      swap1\n      pop\n        /* \"#utility.yul\":9450:9480   */\n      tag_484\n        /* \"#utility.yul\":9474:9479   */\n      dup2\n        /* \"#utility.yul\":9450:9480   */\n      tag_356\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9349:9486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9492:9837   */\n    tag_157:\n        /* \"#utility.yul\":9559:9565   */\n      0x00\n        /* \"#utility.yul\":9608:9610   */\n      0x20\n        /* \"#utility.yul\":9596:9605   */\n      dup3\n        /* \"#utility.yul\":9587:9594   */\n      dup5\n        /* \"#utility.yul\":9583:9606   */\n      sub\n        /* \"#utility.yul\":9579:9611   */\n      slt\n        /* \"#utility.yul\":9576:9695   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":9614:9693   */\n      tag_487\n      tag_335\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9576:9695   */\n    tag_486:\n        /* \"#utility.yul\":9734:9735   */\n      0x00\n        /* \"#utility.yul\":9759:9820   */\n      tag_488\n        /* \"#utility.yul\":9812:9819   */\n      dup5\n        /* \"#utility.yul\":9803:9809   */\n      dup3\n        /* \"#utility.yul\":9792:9801   */\n      dup6\n        /* \"#utility.yul\":9788:9810   */\n      add\n        /* \"#utility.yul\":9759:9820   */\n      tag_357\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9749:9820   */\n      swap2\n      pop\n        /* \"#utility.yul\":9705:9830   */\n      pop\n        /* \"#utility.yul\":9492:9837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9843:10008   */\n    tag_358:\n        /* \"#utility.yul\":9983:10000   */\n      0x5769746864726177206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":9971:9977   */\n      dup3\n        /* \"#utility.yul\":9967:9981   */\n      add\n        /* \"#utility.yul\":9960:10001   */\n      mstore\n        /* \"#utility.yul\":9843:10008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10014:10380   */\n    tag_359:\n        /* \"#utility.yul\":10156:10159   */\n      0x00\n        /* \"#utility.yul\":10177:10244   */\n      tag_491\n        /* \"#utility.yul\":10241:10243   */\n      0x0f\n        /* \"#utility.yul\":10236:10239   */\n      dup4\n        /* \"#utility.yul\":10177:10244   */\n      tag_330\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10170:10244   */\n      swap2\n      pop\n        /* \"#utility.yul\":10253:10346   */\n      tag_492\n        /* \"#utility.yul\":10342:10345   */\n      dup3\n        /* \"#utility.yul\":10253:10346   */\n      tag_358\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10371:10373   */\n      0x20\n        /* \"#utility.yul\":10366:10369   */\n      dup3\n        /* \"#utility.yul\":10362:10374   */\n      add\n        /* \"#utility.yul\":10355:10374   */\n      swap1\n      pop\n        /* \"#utility.yul\":10014:10380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10386:10805   */\n    tag_160:\n        /* \"#utility.yul\":10552:10556   */\n      0x00\n        /* \"#utility.yul\":10590:10592   */\n      0x20\n        /* \"#utility.yul\":10579:10588   */\n      dup3\n        /* \"#utility.yul\":10575:10593   */\n      add\n        /* \"#utility.yul\":10567:10593   */\n      swap1\n      pop\n        /* \"#utility.yul\":10639:10648   */\n      dup2\n        /* \"#utility.yul\":10633:10637   */\n      dup2\n        /* \"#utility.yul\":10629:10649   */\n      sub\n        /* \"#utility.yul\":10625:10626   */\n      0x00\n        /* \"#utility.yul\":10614:10623   */\n      dup4\n        /* \"#utility.yul\":10610:10627   */\n      add\n        /* \"#utility.yul\":10603:10650   */\n      mstore\n        /* \"#utility.yul\":10667:10798   */\n      tag_494\n        /* \"#utility.yul\":10793:10797   */\n      dup2\n        /* \"#utility.yul\":10667:10798   */\n      tag_359\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10659:10798   */\n      swap1\n      pop\n        /* \"#utility.yul\":10386:10805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10811:10991   */\n    tag_360:\n        /* \"#utility.yul\":10859:10936   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10856:10857   */\n      0x00\n        /* \"#utility.yul\":10849:10937   */\n      mstore\n        /* \"#utility.yul\":10956:10960   */\n      0x11\n        /* \"#utility.yul\":10953:10954   */\n      0x04\n        /* \"#utility.yul\":10946:10961   */\n      mstore\n        /* \"#utility.yul\":10980:10984   */\n      0x24\n        /* \"#utility.yul\":10977:10978   */\n      0x00\n        /* \"#utility.yul\":10970:10985   */\n      revert\n        /* \"#utility.yul\":10997:11407   */\n    tag_175:\n        /* \"#utility.yul\":11037:11044   */\n      0x00\n        /* \"#utility.yul\":11060:11080   */\n      tag_497\n        /* \"#utility.yul\":11078:11079   */\n      dup3\n        /* \"#utility.yul\":11060:11080   */\n      tag_341\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11055:11080   */\n      swap2\n      pop\n        /* \"#utility.yul\":11094:11114   */\n      tag_498\n        /* \"#utility.yul\":11112:11113   */\n      dup4\n        /* \"#utility.yul\":11094:11114   */\n      tag_341\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11089:11114   */\n      swap3\n      pop\n        /* \"#utility.yul\":11149:11150   */\n      dup3\n        /* \"#utility.yul\":11146:11147   */\n      dup3\n        /* \"#utility.yul\":11142:11151   */\n      mul\n        /* \"#utility.yul\":11171:11201   */\n      tag_499\n        /* \"#utility.yul\":11189:11200   */\n      dup2\n        /* \"#utility.yul\":11171:11201   */\n      tag_341\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11160:11201   */\n      swap2\n      pop\n        /* \"#utility.yul\":11350:11351   */\n      dup3\n        /* \"#utility.yul\":11341:11348   */\n      dup3\n        /* \"#utility.yul\":11337:11352   */\n      div\n        /* \"#utility.yul\":11334:11335   */\n      dup5\n        /* \"#utility.yul\":11331:11353   */\n      eq\n        /* \"#utility.yul\":11311:11312   */\n      dup4\n        /* \"#utility.yul\":11304:11313   */\n      iszero\n        /* \"#utility.yul\":11284:11367   */\n      or\n        /* \"#utility.yul\":11261:11400   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":11380:11398   */\n      tag_501\n      tag_360\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11261:11400   */\n    tag_500:\n        /* \"#utility.yul\":11045:11407   */\n      pop\n        /* \"#utility.yul\":10997:11407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11413:11592   */\n    tag_361:\n        /* \"#utility.yul\":11553:11584   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":11549:11550   */\n      0x00\n        /* \"#utility.yul\":11541:11547   */\n      dup3\n        /* \"#utility.yul\":11537:11551   */\n      add\n        /* \"#utility.yul\":11530:11585   */\n      mstore\n        /* \"#utility.yul\":11413:11592   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11598:11964   */\n    tag_362:\n        /* \"#utility.yul\":11740:11743   */\n      0x00\n        /* \"#utility.yul\":11761:11828   */\n      tag_504\n        /* \"#utility.yul\":11825:11827   */\n      0x1d\n        /* \"#utility.yul\":11820:11823   */\n      dup4\n        /* \"#utility.yul\":11761:11828   */\n      tag_330\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11754:11828   */\n      swap2\n      pop\n        /* \"#utility.yul\":11837:11930   */\n      tag_505\n        /* \"#utility.yul\":11926:11929   */\n      dup3\n        /* \"#utility.yul\":11837:11930   */\n      tag_361\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11955:11957   */\n      0x20\n        /* \"#utility.yul\":11950:11953   */\n      dup3\n        /* \"#utility.yul\":11946:11958   */\n      add\n        /* \"#utility.yul\":11939:11958   */\n      swap1\n      pop\n        /* \"#utility.yul\":11598:11964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11970:12389   */\n    tag_181:\n        /* \"#utility.yul\":12136:12140   */\n      0x00\n        /* \"#utility.yul\":12174:12176   */\n      0x20\n        /* \"#utility.yul\":12163:12172   */\n      dup3\n        /* \"#utility.yul\":12159:12177   */\n      add\n        /* \"#utility.yul\":12151:12177   */\n      swap1\n      pop\n        /* \"#utility.yul\":12223:12232   */\n      dup2\n        /* \"#utility.yul\":12217:12221   */\n      dup2\n        /* \"#utility.yul\":12213:12233   */\n      sub\n        /* \"#utility.yul\":12209:12210   */\n      0x00\n        /* \"#utility.yul\":12198:12207   */\n      dup4\n        /* \"#utility.yul\":12194:12211   */\n      add\n        /* \"#utility.yul\":12187:12234   */\n      mstore\n        /* \"#utility.yul\":12251:12382   */\n      tag_507\n        /* \"#utility.yul\":12377:12381   */\n      dup2\n        /* \"#utility.yul\":12251:12382   */\n      tag_362\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12243:12382   */\n      swap1\n      pop\n        /* \"#utility.yul\":11970:12389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12395:12575   */\n    tag_363:\n        /* \"#utility.yul\":12443:12520   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12440:12441   */\n      0x00\n        /* \"#utility.yul\":12433:12521   */\n      mstore\n        /* \"#utility.yul\":12540:12544   */\n      0x12\n        /* \"#utility.yul\":12537:12538   */\n      0x04\n        /* \"#utility.yul\":12530:12545   */\n      mstore\n        /* \"#utility.yul\":12564:12568   */\n      0x24\n        /* \"#utility.yul\":12561:12562   */\n      0x00\n        /* \"#utility.yul\":12554:12569   */\n      revert\n        /* \"#utility.yul\":12581:12766   */\n    tag_184:\n        /* \"#utility.yul\":12621:12622   */\n      0x00\n        /* \"#utility.yul\":12638:12658   */\n      tag_510\n        /* \"#utility.yul\":12656:12657   */\n      dup3\n        /* \"#utility.yul\":12638:12658   */\n      tag_341\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12633:12658   */\n      swap2\n      pop\n        /* \"#utility.yul\":12672:12692   */\n      tag_511\n        /* \"#utility.yul\":12690:12691   */\n      dup4\n        /* \"#utility.yul\":12672:12692   */\n      tag_341\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12667:12692   */\n      swap3\n      pop\n        /* \"#utility.yul\":12711:12712   */\n      dup3\n        /* \"#utility.yul\":12701:12736   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":12716:12734   */\n      tag_513\n      tag_363\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12701:12736   */\n    tag_512:\n        /* \"#utility.yul\":12758:12759   */\n      dup3\n        /* \"#utility.yul\":12755:12756   */\n      dup3\n        /* \"#utility.yul\":12751:12760   */\n      div\n        /* \"#utility.yul\":12746:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12581:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:12966   */\n    tag_190:\n        /* \"#utility.yul\":12812:12816   */\n      0x00\n        /* \"#utility.yul\":12832:12852   */\n      tag_515\n        /* \"#utility.yul\":12850:12851   */\n      dup3\n        /* \"#utility.yul\":12832:12852   */\n      tag_341\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12827:12852   */\n      swap2\n      pop\n        /* \"#utility.yul\":12866:12886   */\n      tag_516\n        /* \"#utility.yul\":12884:12885   */\n      dup4\n        /* \"#utility.yul\":12866:12886   */\n      tag_341\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12861:12886   */\n      swap3\n      pop\n        /* \"#utility.yul\":12910:12911   */\n      dup3\n        /* \"#utility.yul\":12907:12908   */\n      dup3\n        /* \"#utility.yul\":12903:12912   */\n      sub\n        /* \"#utility.yul\":12895:12912   */\n      swap1\n      pop\n        /* \"#utility.yul\":12934:12935   */\n      dup2\n        /* \"#utility.yul\":12928:12932   */\n      dup2\n        /* \"#utility.yul\":12925:12936   */\n      gt\n        /* \"#utility.yul\":12922:12959   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":12939:12957   */\n      tag_518\n      tag_360\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":12922:12959   */\n    tag_517:\n        /* \"#utility.yul\":12772:12966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12972:13140   */\n    tag_364:\n        /* \"#utility.yul\":13112:13132   */\n      0x55534454207061796f7574206661696c65640000000000000000000000000000\n        /* \"#utility.yul\":13108:13109   */\n      0x00\n        /* \"#utility.yul\":13100:13106   */\n      dup3\n        /* \"#utility.yul\":13096:13110   */\n      add\n        /* \"#utility.yul\":13089:13133   */\n      mstore\n        /* \"#utility.yul\":12972:13140   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13512   */\n    tag_365:\n        /* \"#utility.yul\":13288:13291   */\n      0x00\n        /* \"#utility.yul\":13309:13376   */\n      tag_521\n        /* \"#utility.yul\":13373:13375   */\n      0x12\n        /* \"#utility.yul\":13368:13371   */\n      dup4\n        /* \"#utility.yul\":13309:13376   */\n      tag_330\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13302:13376   */\n      swap2\n      pop\n        /* \"#utility.yul\":13385:13478   */\n      tag_522\n        /* \"#utility.yul\":13474:13477   */\n      dup3\n        /* \"#utility.yul\":13385:13478   */\n      tag_364\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13503:13505   */\n      0x20\n        /* \"#utility.yul\":13498:13501   */\n      dup3\n        /* \"#utility.yul\":13494:13506   */\n      add\n        /* \"#utility.yul\":13487:13506   */\n      swap1\n      pop\n        /* \"#utility.yul\":13146:13512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13518:13937   */\n    tag_201:\n        /* \"#utility.yul\":13684:13688   */\n      0x00\n        /* \"#utility.yul\":13722:13724   */\n      0x20\n        /* \"#utility.yul\":13711:13720   */\n      dup3\n        /* \"#utility.yul\":13707:13725   */\n      add\n        /* \"#utility.yul\":13699:13725   */\n      swap1\n      pop\n        /* \"#utility.yul\":13771:13780   */\n      dup2\n        /* \"#utility.yul\":13765:13769   */\n      dup2\n        /* \"#utility.yul\":13761:13781   */\n      sub\n        /* \"#utility.yul\":13757:13758   */\n      0x00\n        /* \"#utility.yul\":13746:13755   */\n      dup4\n        /* \"#utility.yul\":13742:13759   */\n      add\n        /* \"#utility.yul\":13735:13782   */\n      mstore\n        /* \"#utility.yul\":13799:13930   */\n      tag_524\n        /* \"#utility.yul\":13925:13929   */\n      dup2\n        /* \"#utility.yul\":13799:13930   */\n      tag_365\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13791:13930   */\n      swap1\n      pop\n        /* \"#utility.yul\":13518:13937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13943:14385   */\n    tag_203:\n        /* \"#utility.yul\":14092:14096   */\n      0x00\n        /* \"#utility.yul\":14130:14132   */\n      0x60\n        /* \"#utility.yul\":14119:14128   */\n      dup3\n        /* \"#utility.yul\":14115:14133   */\n      add\n        /* \"#utility.yul\":14107:14133   */\n      swap1\n      pop\n        /* \"#utility.yul\":14143:14214   */\n      tag_526\n        /* \"#utility.yul\":14211:14212   */\n      0x00\n        /* \"#utility.yul\":14200:14209   */\n      dup4\n        /* \"#utility.yul\":14196:14213   */\n      add\n        /* \"#utility.yul\":14187:14193   */\n      dup7\n        /* \"#utility.yul\":14143:14214   */\n      tag_346\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14224:14296   */\n      tag_527\n        /* \"#utility.yul\":14292:14294   */\n      0x20\n        /* \"#utility.yul\":14281:14290   */\n      dup4\n        /* \"#utility.yul\":14277:14295   */\n      add\n        /* \"#utility.yul\":14268:14274   */\n      dup6\n        /* \"#utility.yul\":14224:14296   */\n      tag_346\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14306:14378   */\n      tag_528\n        /* \"#utility.yul\":14374:14376   */\n      0x40\n        /* \"#utility.yul\":14363:14372   */\n      dup4\n        /* \"#utility.yul\":14359:14377   */\n      add\n        /* \"#utility.yul\":14350:14356   */\n      dup5\n        /* \"#utility.yul\":14306:14378   */\n      tag_346\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13943:14385   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14391:14567   */\n    tag_366:\n        /* \"#utility.yul\":14531:14559   */\n      0x4275792072617465206d757374206265203e3d2031205354454d000000000000\n        /* \"#utility.yul\":14527:14528   */\n      0x00\n        /* \"#utility.yul\":14519:14525   */\n      dup3\n        /* \"#utility.yul\":14515:14529   */\n      add\n        /* \"#utility.yul\":14508:14560   */\n      mstore\n        /* \"#utility.yul\":14391:14567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14573:14939   */\n    tag_367:\n        /* \"#utility.yul\":14715:14718   */\n      0x00\n        /* \"#utility.yul\":14736:14803   */\n      tag_531\n        /* \"#utility.yul\":14800:14802   */\n      0x1a\n        /* \"#utility.yul\":14795:14798   */\n      dup4\n        /* \"#utility.yul\":14736:14803   */\n      tag_330\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14729:14803   */\n      swap2\n      pop\n        /* \"#utility.yul\":14812:14905   */\n      tag_532\n        /* \"#utility.yul\":14901:14904   */\n      dup3\n        /* \"#utility.yul\":14812:14905   */\n      tag_366\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14930:14932   */\n      0x20\n        /* \"#utility.yul\":14925:14928   */\n      dup3\n        /* \"#utility.yul\":14921:14933   */\n      add\n        /* \"#utility.yul\":14914:14933   */\n      swap1\n      pop\n        /* \"#utility.yul\":14573:14939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14945:15364   */\n    tag_215:\n        /* \"#utility.yul\":15111:15115   */\n      0x00\n        /* \"#utility.yul\":15149:15151   */\n      0x20\n        /* \"#utility.yul\":15138:15147   */\n      dup3\n        /* \"#utility.yul\":15134:15152   */\n      add\n        /* \"#utility.yul\":15126:15152   */\n      swap1\n      pop\n        /* \"#utility.yul\":15198:15207   */\n      dup2\n        /* \"#utility.yul\":15192:15196   */\n      dup2\n        /* \"#utility.yul\":15188:15208   */\n      sub\n        /* \"#utility.yul\":15184:15185   */\n      0x00\n        /* \"#utility.yul\":15173:15182   */\n      dup4\n        /* \"#utility.yul\":15169:15186   */\n      add\n        /* \"#utility.yul\":15162:15209   */\n      mstore\n        /* \"#utility.yul\":15226:15357   */\n      tag_534\n        /* \"#utility.yul\":15352:15356   */\n      dup2\n        /* \"#utility.yul\":15226:15357   */\n      tag_367\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15218:15357   */\n      swap1\n      pop\n        /* \"#utility.yul\":14945:15364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15370:15549   */\n    tag_368:\n        /* \"#utility.yul\":15510:15541   */\n      0x4275792072617465206d757374206265203c3d2053656c6c2072617465000000\n        /* \"#utility.yul\":15506:15507   */\n      0x00\n        /* \"#utility.yul\":15498:15504   */\n      dup3\n        /* \"#utility.yul\":15494:15508   */\n      add\n        /* \"#utility.yul\":15487:15542   */\n      mstore\n        /* \"#utility.yul\":15370:15549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15555:15921   */\n    tag_369:\n        /* \"#utility.yul\":15697:15700   */\n      0x00\n        /* \"#utility.yul\":15718:15785   */\n      tag_537\n        /* \"#utility.yul\":15782:15784   */\n      0x1d\n        /* \"#utility.yul\":15777:15780   */\n      dup4\n        /* \"#utility.yul\":15718:15785   */\n      tag_330\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15711:15785   */\n      swap2\n      pop\n        /* \"#utility.yul\":15794:15887   */\n      tag_538\n        /* \"#utility.yul\":15883:15886   */\n      dup3\n        /* \"#utility.yul\":15794:15887   */\n      tag_368\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15912:15914   */\n      0x20\n        /* \"#utility.yul\":15907:15910   */\n      dup3\n        /* \"#utility.yul\":15903:15915   */\n      add\n        /* \"#utility.yul\":15896:15915   */\n      swap1\n      pop\n        /* \"#utility.yul\":15555:15921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15927:16346   */\n    tag_218:\n        /* \"#utility.yul\":16093:16097   */\n      0x00\n        /* \"#utility.yul\":16131:16133   */\n      0x20\n        /* \"#utility.yul\":16120:16129   */\n      dup3\n        /* \"#utility.yul\":16116:16134   */\n      add\n        /* \"#utility.yul\":16108:16134   */\n      swap1\n      pop\n        /* \"#utility.yul\":16180:16189   */\n      dup2\n        /* \"#utility.yul\":16174:16178   */\n      dup2\n        /* \"#utility.yul\":16170:16190   */\n      sub\n        /* \"#utility.yul\":16166:16167   */\n      0x00\n        /* \"#utility.yul\":16155:16164   */\n      dup4\n        /* \"#utility.yul\":16151:16168   */\n      add\n        /* \"#utility.yul\":16144:16191   */\n      mstore\n        /* \"#utility.yul\":16208:16339   */\n      tag_540\n        /* \"#utility.yul\":16334:16338   */\n      dup2\n        /* \"#utility.yul\":16208:16339   */\n      tag_369\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16200:16339   */\n      swap1\n      pop\n        /* \"#utility.yul\":15927:16346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16352:16608   */\n    tag_370:\n        /* \"#utility.yul\":16492:16558   */\n      0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572\n        /* \"#utility.yul\":16488:16489   */\n      0x00\n        /* \"#utility.yul\":16480:16486   */\n      dup3\n        /* \"#utility.yul\":16476:16490   */\n      add\n        /* \"#utility.yul\":16469:16559   */\n      mstore\n        /* \"#utility.yul\":16593:16600   */\n      0x2055534454000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16588:16590   */\n      0x20\n        /* \"#utility.yul\":16580:16586   */\n      dup3\n        /* \"#utility.yul\":16576:16591   */\n      add\n        /* \"#utility.yul\":16569:16601   */\n      mstore\n        /* \"#utility.yul\":16352:16608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16614:16980   */\n    tag_371:\n        /* \"#utility.yul\":16756:16759   */\n      0x00\n        /* \"#utility.yul\":16777:16844   */\n      tag_543\n        /* \"#utility.yul\":16841:16843   */\n      0x25\n        /* \"#utility.yul\":16836:16839   */\n      dup4\n        /* \"#utility.yul\":16777:16844   */\n      tag_330\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16770:16844   */\n      swap2\n      pop\n        /* \"#utility.yul\":16853:16946   */\n      tag_544\n        /* \"#utility.yul\":16942:16945   */\n      dup3\n        /* \"#utility.yul\":16853:16946   */\n      tag_370\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16971:16973   */\n      0x40\n        /* \"#utility.yul\":16966:16969   */\n      dup3\n        /* \"#utility.yul\":16962:16974   */\n      add\n        /* \"#utility.yul\":16955:16974   */\n      swap1\n      pop\n        /* \"#utility.yul\":16614:16980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17405   */\n    tag_226:\n        /* \"#utility.yul\":17152:17156   */\n      0x00\n        /* \"#utility.yul\":17190:17192   */\n      0x20\n        /* \"#utility.yul\":17179:17188   */\n      dup3\n        /* \"#utility.yul\":17175:17193   */\n      add\n        /* \"#utility.yul\":17167:17193   */\n      swap1\n      pop\n        /* \"#utility.yul\":17239:17248   */\n      dup2\n        /* \"#utility.yul\":17233:17237   */\n      dup2\n        /* \"#utility.yul\":17229:17249   */\n      sub\n        /* \"#utility.yul\":17225:17226   */\n      0x00\n        /* \"#utility.yul\":17214:17223   */\n      dup4\n        /* \"#utility.yul\":17210:17227   */\n      add\n        /* \"#utility.yul\":17203:17250   */\n      mstore\n        /* \"#utility.yul\":17267:17398   */\n      tag_546\n        /* \"#utility.yul\":17393:17397   */\n      dup2\n        /* \"#utility.yul\":17267:17398   */\n      tag_371\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17259:17398   */\n      swap1\n      pop\n        /* \"#utility.yul\":16986:17405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17411:17853   */\n    tag_249:\n        /* \"#utility.yul\":17560:17564   */\n      0x00\n        /* \"#utility.yul\":17598:17600   */\n      0x60\n        /* \"#utility.yul\":17587:17596   */\n      dup3\n        /* \"#utility.yul\":17583:17601   */\n      add\n        /* \"#utility.yul\":17575:17601   */\n      swap1\n      pop\n        /* \"#utility.yul\":17611:17682   */\n      tag_548\n        /* \"#utility.yul\":17679:17680   */\n      0x00\n        /* \"#utility.yul\":17668:17677   */\n      dup4\n        /* \"#utility.yul\":17664:17681   */\n      add\n        /* \"#utility.yul\":17655:17661   */\n      dup7\n        /* \"#utility.yul\":17611:17682   */\n      tag_349\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17692:17764   */\n      tag_549\n        /* \"#utility.yul\":17760:17762   */\n      0x20\n        /* \"#utility.yul\":17749:17758   */\n      dup4\n        /* \"#utility.yul\":17745:17763   */\n      add\n        /* \"#utility.yul\":17736:17742   */\n      dup6\n        /* \"#utility.yul\":17692:17764   */\n      tag_349\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17774:17846   */\n      tag_550\n        /* \"#utility.yul\":17842:17844   */\n      0x40\n        /* \"#utility.yul\":17831:17840   */\n      dup4\n        /* \"#utility.yul\":17827:17845   */\n      add\n        /* \"#utility.yul\":17818:17824   */\n      dup5\n        /* \"#utility.yul\":17774:17846   */\n      tag_346\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17411:17853   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17859:18029   */\n    tag_372:\n        /* \"#utility.yul\":17999:18021   */\n      0x55534454207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":17995:17996   */\n      0x00\n        /* \"#utility.yul\":17987:17993   */\n      dup3\n        /* \"#utility.yul\":17983:17997   */\n      add\n        /* \"#utility.yul\":17976:18022   */\n      mstore\n        /* \"#utility.yul\":17859:18029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18035:18401   */\n    tag_373:\n        /* \"#utility.yul\":18177:18180   */\n      0x00\n        /* \"#utility.yul\":18198:18265   */\n      tag_553\n        /* \"#utility.yul\":18262:18264   */\n      0x14\n        /* \"#utility.yul\":18257:18260   */\n      dup4\n        /* \"#utility.yul\":18198:18265   */\n      tag_330\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18191:18265   */\n      swap2\n      pop\n        /* \"#utility.yul\":18274:18367   */\n      tag_554\n        /* \"#utility.yul\":18363:18366   */\n      dup3\n        /* \"#utility.yul\":18274:18367   */\n      tag_372\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":18392:18394   */\n      0x20\n        /* \"#utility.yul\":18387:18390   */\n      dup3\n        /* \"#utility.yul\":18383:18395   */\n      add\n        /* \"#utility.yul\":18376:18395   */\n      swap1\n      pop\n        /* \"#utility.yul\":18035:18401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18407:18826   */\n    tag_255:\n        /* \"#utility.yul\":18573:18577   */\n      0x00\n        /* \"#utility.yul\":18611:18613   */\n      0x20\n        /* \"#utility.yul\":18600:18609   */\n      dup3\n        /* \"#utility.yul\":18596:18614   */\n      add\n        /* \"#utility.yul\":18588:18614   */\n      swap1\n      pop\n        /* \"#utility.yul\":18660:18669   */\n      dup2\n        /* \"#utility.yul\":18654:18658   */\n      dup2\n        /* \"#utility.yul\":18650:18670   */\n      sub\n        /* \"#utility.yul\":18646:18647   */\n      0x00\n        /* \"#utility.yul\":18635:18644   */\n      dup4\n        /* \"#utility.yul\":18631:18648   */\n      add\n        /* \"#utility.yul\":18624:18671   */\n      mstore\n        /* \"#utility.yul\":18688:18819   */\n      tag_556\n        /* \"#utility.yul\":18814:18818   */\n      dup2\n        /* \"#utility.yul\":18688:18819   */\n      tag_373\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18680:18819   */\n      swap1\n      pop\n        /* \"#utility.yul\":18407:18826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18832:19164   */\n    tag_258:\n        /* \"#utility.yul\":18953:18957   */\n      0x00\n        /* \"#utility.yul\":18991:18993   */\n      0x40\n        /* \"#utility.yul\":18980:18989   */\n      dup3\n        /* \"#utility.yul\":18976:18994   */\n      add\n        /* \"#utility.yul\":18968:18994   */\n      swap1\n      pop\n        /* \"#utility.yul\":19004:19075   */\n      tag_558\n        /* \"#utility.yul\":19072:19073   */\n      0x00\n        /* \"#utility.yul\":19061:19070   */\n      dup4\n        /* \"#utility.yul\":19057:19074   */\n      add\n        /* \"#utility.yul\":19048:19054   */\n      dup6\n        /* \"#utility.yul\":19004:19075   */\n      tag_346\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19085:19157   */\n      tag_559\n        /* \"#utility.yul\":19153:19155   */\n      0x20\n        /* \"#utility.yul\":19142:19151   */\n      dup4\n        /* \"#utility.yul\":19138:19156   */\n      add\n        /* \"#utility.yul\":19129:19135   */\n      dup5\n        /* \"#utility.yul\":19085:19157   */\n      tag_346\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":18832:19164   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19170:19313   */\n    tag_374:\n        /* \"#utility.yul\":19227:19232   */\n      0x00\n        /* \"#utility.yul\":19258:19264   */\n      dup2\n        /* \"#utility.yul\":19252:19265   */\n      mload\n        /* \"#utility.yul\":19243:19265   */\n      swap1\n      pop\n        /* \"#utility.yul\":19274:19307   */\n      tag_561\n        /* \"#utility.yul\":19301:19306   */\n      dup2\n        /* \"#utility.yul\":19274:19307   */\n      tag_342\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":19170:19313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19319:19670   */\n    tag_267:\n        /* \"#utility.yul\":19389:19395   */\n      0x00\n        /* \"#utility.yul\":19438:19440   */\n      0x20\n        /* \"#utility.yul\":19426:19435   */\n      dup3\n        /* \"#utility.yul\":19417:19424   */\n      dup5\n        /* \"#utility.yul\":19413:19436   */\n      sub\n        /* \"#utility.yul\":19409:19441   */\n      slt\n        /* \"#utility.yul\":19406:19525   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":19444:19523   */\n      tag_564\n      tag_335\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19406:19525   */\n    tag_563:\n        /* \"#utility.yul\":19564:19565   */\n      0x00\n        /* \"#utility.yul\":19589:19653   */\n      tag_565\n        /* \"#utility.yul\":19645:19652   */\n      dup5\n        /* \"#utility.yul\":19636:19642   */\n      dup3\n        /* \"#utility.yul\":19625:19634   */\n      dup6\n        /* \"#utility.yul\":19621:19643   */\n      add\n        /* \"#utility.yul\":19589:19653   */\n      tag_374\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19579:19653   */\n      swap2\n      pop\n        /* \"#utility.yul\":19535:19663   */\n      pop\n        /* \"#utility.yul\":19319:19670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19676:20118   */\n    tag_294:\n        /* \"#utility.yul\":19825:19829   */\n      0x00\n        /* \"#utility.yul\":19863:19865   */\n      0x60\n        /* \"#utility.yul\":19852:19861   */\n      dup3\n        /* \"#utility.yul\":19848:19866   */\n      add\n        /* \"#utility.yul\":19840:19866   */\n      swap1\n      pop\n        /* \"#utility.yul\":19876:19947   */\n      tag_567\n        /* \"#utility.yul\":19944:19945   */\n      0x00\n        /* \"#utility.yul\":19933:19942   */\n      dup4\n        /* \"#utility.yul\":19929:19946   */\n      add\n        /* \"#utility.yul\":19920:19926   */\n      dup7\n        /* \"#utility.yul\":19876:19947   */\n      tag_349\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19957:20029   */\n      tag_568\n        /* \"#utility.yul\":20025:20027   */\n      0x20\n        /* \"#utility.yul\":20014:20023   */\n      dup4\n        /* \"#utility.yul\":20010:20028   */\n      add\n        /* \"#utility.yul\":20001:20007   */\n      dup6\n        /* \"#utility.yul\":19957:20029   */\n      tag_346\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":20039:20111   */\n      tag_569\n        /* \"#utility.yul\":20107:20109   */\n      0x40\n        /* \"#utility.yul\":20096:20105   */\n      dup4\n        /* \"#utility.yul\":20092:20110   */\n      add\n        /* \"#utility.yul\":20083:20089   */\n      dup5\n        /* \"#utility.yul\":20039:20111   */\n      tag_346\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19676:20118   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20124:20315   */\n    tag_322:\n        /* \"#utility.yul\":20164:20167   */\n      0x00\n        /* \"#utility.yul\":20183:20203   */\n      tag_571\n        /* \"#utility.yul\":20201:20202   */\n      dup3\n        /* \"#utility.yul\":20183:20203   */\n      tag_341\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":20178:20203   */\n      swap2\n      pop\n        /* \"#utility.yul\":20217:20237   */\n      tag_572\n        /* \"#utility.yul\":20235:20236   */\n      dup4\n        /* \"#utility.yul\":20217:20237   */\n      tag_341\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":20212:20237   */\n      swap3\n      pop\n        /* \"#utility.yul\":20260:20261   */\n      dup3\n        /* \"#utility.yul\":20257:20258   */\n      dup3\n        /* \"#utility.yul\":20253:20262   */\n      add\n        /* \"#utility.yul\":20246:20262   */\n      swap1\n      pop\n        /* \"#utility.yul\":20281:20284   */\n      dup1\n        /* \"#utility.yul\":20278:20279   */\n      dup3\n        /* \"#utility.yul\":20275:20285   */\n      gt\n        /* \"#utility.yul\":20272:20308   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":20288:20306   */\n      tag_574\n      tag_360\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20272:20308   */\n    tag_573:\n        /* \"#utility.yul\":20124:20315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b79addcd1478486bc33ee821e7cf5d82098f0ea851e81f0e09658b23b6ff3ed364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1027": {
									"entryPoint": null,
									"id": 1027,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 827,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 632,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 965,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9123:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:1",
														"type": ""
													}
												],
												"src": "845:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:1"
															},
															"nodeType": "YulIf",
															"src": "981:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:1",
														"type": ""
													}
												],
												"src": "928:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:1",
														"type": ""
													}
												],
												"src": "1056:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:692:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:33:1"
															},
															"nodeType": "YulIf",
															"src": "1343:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1473:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1517:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1611:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1656:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1750:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1795:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1889:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1934:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1279:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1290:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1302:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1310:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1318:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"src": "1205:820:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2101:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2117:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2111:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2111:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2101:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2073:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2083:6:1",
														"type": ""
													}
												],
												"src": "2031:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2164:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2181:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2184:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2174:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2278:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2281:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2271:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2302:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2305:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2295:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2136:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2350:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2367:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2370:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2360:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2467:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2457:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2491:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2481:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2481:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2322:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2559:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2569:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2583:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2589:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2600:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2630:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2636:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2626:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2604:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2677:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2691:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2705:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2713:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2701:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2701:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2657:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:26:1"
															},
															"nodeType": "YulIf",
															"src": "2647:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2780:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2794:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2794:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2744:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2767:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2764:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2764:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2741:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:38:1"
															},
															"nodeType": "YulIf",
															"src": "2738:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2543:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2552:6:1",
														"type": ""
													}
												],
												"src": "2508:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2898:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2906:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2898:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2929:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2919:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2942:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2960:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2963:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2950:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2942:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2875:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2883:4:1",
														"type": ""
													}
												],
												"src": "2834:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3025:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3035:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3060:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3049:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3065:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3035:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3008:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3018:6:1",
														"type": ""
													}
												],
												"src": "2981:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3133:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3143:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3168:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3174:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3143:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3108:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3114:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3124:8:1",
														"type": ""
													}
												],
												"src": "3080:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3269:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3279:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "3300:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3312:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "3283:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3323:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3354:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3365:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3335:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3327:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3441:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3483:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3453:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "3441:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3501:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3525:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3521:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3501:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3540:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3553:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3564:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3574:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3560:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3550:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3230:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "3237:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "3249:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3262:6:1",
														"type": ""
													}
												],
												"src": "3193:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3624:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3634:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3641:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3634:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3610:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3620:3:1",
														"type": ""
													}
												],
												"src": "3592:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3728:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3786:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3768:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3768:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3759:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3759:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3741:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3728:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3698:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3708:9:1",
														"type": ""
													}
												],
												"src": "3658:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3853:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3863:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3870:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3863:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3839:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3849:3:1",
														"type": ""
													}
												],
												"src": "3806:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3963:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3973:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "4028:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3997:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3977:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4052:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "4092:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "4086:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4086:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4099:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "4131:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4107:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4107:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "4058:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4058:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3940:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3946:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3954:7:1",
														"type": ""
													}
												],
												"src": "3887:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4211:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4221:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4228:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4221:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4207:3:1",
														"type": ""
													}
												],
												"src": "4162:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4294:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4304:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4318:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "4308:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4403:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4359:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4359:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4280:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4286:6:1",
														"type": ""
													}
												],
												"src": "4241:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4486:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4553:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4597:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4604:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4567:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4567:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4567:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4506:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4503:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4503:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4518:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4520:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4533:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4540:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4529:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4529:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4520:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4500:2:1",
																"statements": []
															},
															"src": "4496:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4474:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4481:3:1",
														"type": ""
													}
												],
												"src": "4436:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4707:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4733:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4747:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4763:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4763:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4751:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4814:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4837:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4865:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4847:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4847:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4833:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4833:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4818:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5034:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5036:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "5051:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "5036:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "5018:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5030:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5015:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "5012:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "5103:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "5120:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "5148:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "5130:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5130:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5116:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5116:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "5074:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5074:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4724:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4721:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:11:1"
															},
															"nodeType": "YulIf",
															"src": "4718:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4683:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4690:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4695:10:1",
														"type": ""
													}
												],
												"src": "4628:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5240:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5250:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5275:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5281:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5250:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "5215:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5221:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5231:8:1",
														"type": ""
													}
												],
												"src": "5177:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5351:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5361:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5410:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5413:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5406:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5425:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5421:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5421:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "5377:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5365:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5438:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5452:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5458:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5438:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5328:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "5334:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5344:6:1",
														"type": ""
													}
												],
												"src": "5300:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5555:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5688:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5715:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5696:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5688:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5734:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5745:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5755:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5758:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5751:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5742:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5742:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5734:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5536:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5542:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5550:4:1",
														"type": ""
													}
												],
												"src": "5474:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5866:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5877:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5924:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5891:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5881:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6015:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5985:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5993:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5982:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5982:30:1"
															},
															"nodeType": "YulIf",
															"src": "5979:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6045:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "6091:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "6085:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6085:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "6059:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "6049:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6190:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "6196:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6204:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "6144:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6144:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6221:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6238:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "6225:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6249:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6262:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "6249:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6313:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6327:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6346:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6358:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6354:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6354:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6342:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6342:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "6331:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6378:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6424:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "6392:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6392:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "6382:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6442:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6451:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6446:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6510:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6535:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6553:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6558:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6549:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6549:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6543:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6543:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6528:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6528:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6528:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6587:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6601:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6609:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6597:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6597:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6587:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6628:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6645:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6656:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6641:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6641:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6628:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6476:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6479:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6473:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6473:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6488:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6490:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6499:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6502:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6495:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6495:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6490:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6469:3:1",
																					"statements": []
																				},
																				"src": "6465:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6709:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6727:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6754:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6759:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6750:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6750:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6744:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6731:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6794:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6821:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6836:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6844:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6832:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6832:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6802:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6802:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6787:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6787:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6787:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6692:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6701:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6689:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6689:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6686:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6885:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6899:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6907:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6895:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6895:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6911:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6891:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6891:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6878:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6878:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6878:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6306:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6311:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6941:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6955:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6968:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6959:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6992:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7010:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7029:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7034:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7025:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7025:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7019:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7019:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7010:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6985:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6982:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7079:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7138:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "7145:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "7085:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7085:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7072:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7072:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7072:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6933:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6286:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6294:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6283:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6283:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "6276:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5855:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5861:3:1",
														"type": ""
													}
												],
												"src": "5774:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7240:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7257:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7280:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7262:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7262:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7250:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7250:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7228:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7235:3:1",
														"type": ""
													}
												],
												"src": "7175:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7397:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7407:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7419:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7430:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7407:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7487:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7500:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7511:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7496:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7443:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7443:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7369:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7381:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7392:4:1",
														"type": ""
													}
												],
												"src": "7299:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7555:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7575:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7565:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7565:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7669:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7662:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7662:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7693:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7686:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7527:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7761:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7771:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7794:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7776:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7776:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7771:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7805:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7828:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7810:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7810:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7805:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7839:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7862:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7865:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7858:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7843:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7876:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7905:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7887:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7876:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8094:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8096:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8096:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8096:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8027:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8020:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8020:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8050:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8057:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8066:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8053:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8053:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8047:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8047:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8000:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7980:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7980:113:1"
															},
															"nodeType": "YulIf",
															"src": "7977:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7744:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7747:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7753:7:1",
														"type": ""
													}
												],
												"src": "7713:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8173:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8183:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8206:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8188:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8183:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8217:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8240:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8222:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8217:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8251:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8262:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8265:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8251:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8291:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8293:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8293:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8293:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8283:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8286:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8280:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:10:1"
															},
															"nodeType": "YulIf",
															"src": "8277:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8160:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8163:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8169:3:1",
														"type": ""
													}
												],
												"src": "8129:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8391:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8408:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8431:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8413:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8413:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8379:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8386:3:1",
														"type": ""
													}
												],
												"src": "8326:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8604:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8614:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8626:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8637:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8614:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8694:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8650:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8650:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8650:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8775:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8788:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8799:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8784:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8731:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8731:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8857:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8870:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8881:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8866:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8813:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8813:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8560:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8572:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8580:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8588:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8599:4:1",
														"type": ""
													}
												],
												"src": "8450:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9086:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9110:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9095:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9042:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:1",
														"type": ""
													}
												],
												"src": "8898:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a7640000600755670de0b6b3a764000060085534801562000028575f80fd5b50604051620030e3380380620030e383398181016040528101906200004e919062000686565b336040518060400160405280600781526020017f5354454d4d4552000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5354454d000000000000000000000000000000000000000000000000000000008152508160039081620000cc919062000950565b508060049081620000de919062000950565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000154575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200014b919062000a45565b60405180910390fd5b62000165816200027860201b60201c565b508360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200026e60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400008362000262919062000a8d565b6200033b60201b60201c565b5050505062000b78565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003ae575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003a5919062000a45565b60405180910390fd5b620003c15f8383620003c560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000419578060025f8282546200040c919062000ad7565b92505081905550620004ea565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620004a5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200049c9392919062000b22565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000533578060025f82825403925050819055506200057d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005dc919062000b5d565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200061882620005ed565b9050919050565b6200062a816200060c565b811462000635575f80fd5b50565b5f8151905062000648816200061f565b92915050565b5f819050919050565b62000662816200064e565b81146200066d575f80fd5b50565b5f81519050620006808162000657565b92915050565b5f805f8060808587031215620006a157620006a0620005e9565b5b5f620006b08782880162000638565b9450506020620006c38782880162000638565b9350506040620006d68782880162000638565b9250506060620006e98782880162000670565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200077157607f821691505b6020821081036200078757620007866200072c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620007ae565b620007f78683620007ae565b95508019841693508086168417925050509392505050565b5f819050919050565b5f62000838620008326200082c846200064e565b6200080f565b6200064e565b9050919050565b5f819050919050565b620008538362000818565b6200086b62000862826200083f565b848454620007ba565b825550505050565b5f90565b6200088162000873565b6200088e81848462000848565b505050565b5b81811015620008b557620008a95f8262000877565b60018101905062000894565b5050565b601f8211156200090457620008ce816200078d565b620008d9846200079f565b81016020851015620008e9578190505b62000901620008f8856200079f565b83018262000893565b50505b505050565b5f82821c905092915050565b5f620009265f198460080262000909565b1980831691505092915050565b5f62000940838362000915565b9150826002028217905092915050565b6200095b82620006f5565b67ffffffffffffffff811115620009775762000976620006ff565b5b62000983825462000759565b62000990828285620008b9565b5f60209050601f831160018114620009c6575f8415620009b1578287015190505b620009bd858262000933565b86555062000a2c565b601f198416620009d6866200078d565b5f5b82811015620009ff57848901518255600182019150602085019450602081019050620009d8565b8683101562000a1f578489015162000a1b601f89168262000915565b8355505b6001600288020188555050505b505050505050565b62000a3f816200060c565b82525050565b5f60208201905062000a5a5f83018462000a34565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000a99826200064e565b915062000aa6836200064e565b925082820262000ab6816200064e565b9150828204841483151762000ad05762000acf62000a60565b5b5092915050565b5f62000ae3826200064e565b915062000af0836200064e565b925082820190508082111562000b0b5762000b0a62000a60565b5b92915050565b62000b1c816200064e565b82525050565b5f60608201905062000b375f83018662000a34565b62000b46602083018562000b11565b62000b55604083018462000b11565b949350505050565b5f60208201905062000b725f83018462000b11565b92915050565b61255d8062000b865f395ff3fe608060405234801561000f575f80fd5b50600436106101a7575f3560e01c806385e436bf116100f7578063bb28555411610095578063f0f442601161006f578063f0f442601461049b578063f203787c146104b7578063f2fde38b146104d5578063fc37987b146104f1576101a7565b8063bb28555414610429578063c3f909d414610445578063dd62ed3e1461046b576101a7565b806395d89b41116100d157806395d89b41146103a15780639dc29fac146103bf578063a9059cbb146103db578063a98ad46c1461040b576101a7565b806385e436bf1461034b5780638da5cb5b146103675780638e0b017d14610385576101a7565b8063313ce5671161016457806361d027b31161013e57806361d027b3146102d55780636217229b146102f357806370a0823114610311578063715018a614610341576101a7565b8063313ce5671461027f57806340c10f191461029d5780635d91e3f8146102b9576101a7565b806306fdde03146101ab578063095ea7b3146101c95780630f7e730b146101f95780631481794e1461021557806318160ddd1461023157806323b872dd1461024f575b5f80fd5b6101b361050f565b6040516101c09190611b91565b60405180910390f35b6101e360048036038101906101de9190611c42565b61059f565b6040516101f09190611c9a565b60405180910390f35b610213600480360381019061020e9190611cb3565b6105c1565b005b61022f600480360381019061022a9190611c42565b61064e565b005b610239610783565b6040516102469190611ced565b60405180910390f35b61026960048036038101906102649190611d06565b61078c565b6040516102769190611c9a565b60405180910390f35b6102876107ba565b6040516102949190611d71565b60405180910390f35b6102b760048036038101906102b29190611c42565b6107c2565b005b6102d360048036038101906102ce9190611d8a565b610839565b005b6102dd610af3565b6040516102ea9190611dc4565b60405180910390f35b6102fb610b18565b6040516103089190611ced565b60405180910390f35b61032b60048036038101906103269190611cb3565b610b1e565b6040516103389190611ced565b60405180910390f35b610349610b63565b005b61036560048036038101906103609190611d8a565b610b76565b005b61036f610c4e565b60405161037c9190611dc4565b60405180910390f35b61039f600480360381019061039a9190611d8a565b610c76565b005b6103a9610d0a565b6040516103b69190611b91565b60405180910390f35b6103d960048036038101906103d49190611c42565b610d9a565b005b6103f560048036038101906103f09190611c42565b610e11565b6040516104029190611c9a565b60405180910390f35b610413610e33565b6040516104209190611e38565b60405180910390f35b610443600480360381019061043e9190611d8a565b610e58565b005b61044d61100e565b60405161046299989796959493929190611e51565b60405180910390f35b61048560048036038101906104809190611edc565b61117c565b6040516104929190611ced565b60405180910390f35b6104b560048036038101906104b09190611cb3565b6111fe565b005b6104bf61128c565b6040516104cc9190611dc4565b60405180910390f35b6104ef60048036038101906104ea9190611cb3565b6112b1565b005b6104f9611335565b6040516105069190611ced565b60405180910390f35b60606003805461051e90611f47565b80601f016020809104026020016040519081016040528092919081815260200182805461054a90611f47565b80156105955780601f1061056c57610100808354040283529160200191610595565b820191905f5260205f20905b81548152906001019060200180831161057857829003601f168201915b5050505050905090565b5f806105a961133b565b90506105b6818585611342565b600191505092915050565b6105c9611354565b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167e56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b60405160405180910390a250565b610656611354565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106b2929190611f77565b6020604051808303815f875af11580156106ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f29190611fc8565b610731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107289061203d565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b826040516107779190611ced565b60405180910390a25050565b5f600254905090565b5f8061079661133b565b90506107a38582856113db565b6107ae85858561146e565b60019150509392505050565b5f6012905090565b6107ca611354565b6107e782670de0b6b3a7640000836107e29190612088565b61155e565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe8260405161082d9190611ced565b60405180910390a25050565b5f811161087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087290612113565b60405180910390fd5b5f600854670de0b6b3a7640000836108939190612088565b61089d919061215e565b90505f670de0b6b3a7640000836108b4919061215e565b90505f600854826108c59190612088565b90505f8482116108d5575f6108e2565b84826108e1919061218e565b5b90506109103360095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168761146e565b5f8111801561096c57505f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156109bf576109be60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361146e565b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610a1b929190611f77565b6020604051808303815f875af1158015610a37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a5b9190611fc8565b610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a919061220b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420868684604051610ae493929190612229565b60405180910390a25050505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b6b611354565b610b745f6115dd565b565b610b7e611354565b670de0b6b3a7640000811015610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc0906122a8565b60405180910390fd5b600854811115610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590612310565b60405180910390fd5b806007819055507eedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb181604051610c439190611ced565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c7e611354565b670de0b6b3a7640000811015610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc09061239e565b60405180910390fd5b806008819055507fbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab81604051610cff9190611ced565b60405180910390a150565b606060048054610d1990611f47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590611f47565b8015610d905780601f10610d6757610100808354040283529160200191610d90565b820191905f5260205f20905b815481529060010190602001808311610d7357829003601f168201915b5050505050905090565b610da2611354565b610dbf82670de0b6b3a764000083610dba9190612088565b6116a0565b8173ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df782604051610e059190611ced565b60405180910390a25050565b5f80610e1b61133b565b9050610e2881858561146e565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9190612113565b60405180910390fd5b5f670de0b6b3a764000082610eaf9190612088565b905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f0f939291906123bc565b6020604051808303815f875af1158015610f2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4f9190611fc8565b610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f859061243b565b60405180910390fd5b610fba60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338361146e565b3373ffffffffffffffffffffffffffffffffffffffff167f59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb8383604051611002929190612459565b60405180910390a25050565b5f805f805f805f805f60075460085460095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661108b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b1e565b6110b5600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b1e565b6110be30610b1e565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111189190611dc4565b602060405180830381865afa158015611133573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111579190612494565b61115f610783565b985098509850985098509850985098509850909192939495969798565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611206611354565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f60860405160405180910390a250565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112b9611354565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611329575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113209190611dc4565b60405180910390fd5b611332816115dd565b50565b60075481565b5f33905090565b61134f838383600161171f565b505050565b61135c61133b565b73ffffffffffffffffffffffffffffffffffffffff1661137a610c4e565b73ffffffffffffffffffffffffffffffffffffffff16146113d95761139d61133b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113d09190611dc4565b60405180910390fd5b565b5f6113e6848461117c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114685781811015611459578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611450939291906124bf565b60405180910390fd5b61146784848484035f61171f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114de575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d59190611dc4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115459190611dc4565b60405180910390fd5b6115598383836118ee565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ce575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115c59190611dc4565b60405180910390fd5b6115d95f83836118ee565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611710575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117079190611dc4565b60405180910390fd5b61171b825f836118ee565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361178f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117869190611dc4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ff575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117f69190611dc4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156118e8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118df9190611ced565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361193e578060025f82825461193291906124f4565b92505081905550611a0c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156119c7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119be939291906124bf565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a53578060025f8282540392505081905550611a9d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611afa9190611ced565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b3e578082015181840152602081019050611b23565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b6382611b07565b611b6d8185611b11565b9350611b7d818560208601611b21565b611b8681611b49565b840191505092915050565b5f6020820190508181035f830152611ba98184611b59565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bde82611bb5565b9050919050565b611bee81611bd4565b8114611bf8575f80fd5b50565b5f81359050611c0981611be5565b92915050565b5f819050919050565b611c2181611c0f565b8114611c2b575f80fd5b50565b5f81359050611c3c81611c18565b92915050565b5f8060408385031215611c5857611c57611bb1565b5b5f611c6585828601611bfb565b9250506020611c7685828601611c2e565b9150509250929050565b5f8115159050919050565b611c9481611c80565b82525050565b5f602082019050611cad5f830184611c8b565b92915050565b5f60208284031215611cc857611cc7611bb1565b5b5f611cd584828501611bfb565b91505092915050565b611ce781611c0f565b82525050565b5f602082019050611d005f830184611cde565b92915050565b5f805f60608486031215611d1d57611d1c611bb1565b5b5f611d2a86828701611bfb565b9350506020611d3b86828701611bfb565b9250506040611d4c86828701611c2e565b9150509250925092565b5f60ff82169050919050565b611d6b81611d56565b82525050565b5f602082019050611d845f830184611d62565b92915050565b5f60208284031215611d9f57611d9e611bb1565b5b5f611dac84828501611c2e565b91505092915050565b611dbe81611bd4565b82525050565b5f602082019050611dd75f830184611db5565b92915050565b5f819050919050565b5f611e00611dfb611df684611bb5565b611ddd565b611bb5565b9050919050565b5f611e1182611de6565b9050919050565b5f611e2282611e07565b9050919050565b611e3281611e18565b82525050565b5f602082019050611e4b5f830184611e29565b92915050565b5f61012082019050611e655f83018c611cde565b611e72602083018b611cde565b611e7f604083018a611db5565b611e8c6060830189611db5565b611e996080830188611cde565b611ea660a0830187611cde565b611eb360c0830186611cde565b611ec060e0830185611cde565b611ece610100830184611cde565b9a9950505050505050505050565b5f8060408385031215611ef257611ef1611bb1565b5b5f611eff85828601611bfb565b9250506020611f1085828601611bfb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f5e57607f821691505b602082108103611f7157611f70611f1a565b5b50919050565b5f604082019050611f8a5f830185611db5565b611f976020830184611cde565b9392505050565b611fa781611c80565b8114611fb1575f80fd5b50565b5f81519050611fc281611f9e565b92915050565b5f60208284031215611fdd57611fdc611bb1565b5b5f611fea84828501611fb4565b91505092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f612027600f83611b11565b915061203282611ff3565b602082019050919050565b5f6020820190508181035f8301526120548161201b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61209282611c0f565b915061209d83611c0f565b92508282026120ab81611c0f565b915082820484148315176120c2576120c161205b565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6120fd601d83611b11565b9150612108826120c9565b602082019050919050565b5f6020820190508181035f83015261212a816120f1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61216882611c0f565b915061217383611c0f565b92508261218357612182612131565b5b828204905092915050565b5f61219882611c0f565b91506121a383611c0f565b92508282039050818111156121bb576121ba61205b565b5b92915050565b7f55534454207061796f7574206661696c656400000000000000000000000000005f82015250565b5f6121f5601283611b11565b9150612200826121c1565b602082019050919050565b5f6020820190508181035f830152612222816121e9565b9050919050565b5f60608201905061223c5f830186611cde565b6122496020830185611cde565b6122566040830184611cde565b949350505050565b7f4275792072617465206d757374206265203e3d2031205354454d0000000000005f82015250565b5f612292601a83611b11565b915061229d8261225e565b602082019050919050565b5f6020820190508181035f8301526122bf81612286565b9050919050565b7f4275792072617465206d757374206265203c3d2053656c6c20726174650000005f82015250565b5f6122fa601d83611b11565b9150612305826122c6565b602082019050919050565b5f6020820190508181035f830152612327816122ee565b9050919050565b7f53656c6c2072617465206d75737420626520e289a52031205354454d207065725f8201527f2055534454000000000000000000000000000000000000000000000000000000602082015250565b5f612388602583611b11565b91506123938261232e565b604082019050919050565b5f6020820190508181035f8301526123b58161237c565b9050919050565b5f6060820190506123cf5f830186611db5565b6123dc6020830185611db5565b6123e96040830184611cde565b949350505050565b7f55534454207472616e73666572206661696c65640000000000000000000000005f82015250565b5f612425601483611b11565b9150612430826123f1565b602082019050919050565b5f6020820190508181035f83015261245281612419565b9050919050565b5f60408201905061246c5f830185611cde565b6124796020830184611cde565b9392505050565b5f8151905061248e81611c18565b92915050565b5f602082840312156124a9576124a8611bb1565b5b5f6124b684828501612480565b91505092915050565b5f6060820190506124d25f830186611db5565b6124df6020830185611cde565b6124ec6040830184611cde565b949350505050565b5f6124fe82611c0f565b915061250983611c0f565b92508282019050808211156125215761252061205b565b5b9291505056fea2646970667358221220b79addcd1478486bc33ee821e7cf5d82098f0ea851e81f0e09658b23b6ff3ed364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x30E3 CODESIZE SUB DUP1 PUSH3 0x30E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x4E SWAP2 SWAP1 PUSH3 0x686 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354454D4D455200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354454D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCC SWAP2 SWAP1 PUSH3 0x950 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x950 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14B SWAP2 SWAP1 PUSH3 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x165 DUP2 PUSH3 0x278 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP4 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x26E PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP4 PUSH3 0x262 SWAP2 SWAP1 PUSH3 0xA8D JUMP JUMPDEST PUSH3 0x33B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0xB78 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3A5 SWAP2 SWAP1 PUSH3 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3C1 PUSH0 DUP4 DUP4 PUSH3 0x3C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x419 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x40C SWAP2 SWAP1 PUSH3 0xAD7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4EA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4A5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x49C SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x533 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x57D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5DC SWAP2 SWAP1 PUSH3 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x618 DUP3 PUSH3 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62A DUP2 PUSH3 0x60C JUMP JUMPDEST DUP2 EQ PUSH3 0x635 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x648 DUP2 PUSH3 0x61F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x662 DUP2 PUSH3 0x64E JUMP JUMPDEST DUP2 EQ PUSH3 0x66D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x680 DUP2 PUSH3 0x657 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x6A1 JUMPI PUSH3 0x6A0 PUSH3 0x5E9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x6B0 DUP8 DUP3 DUP9 ADD PUSH3 0x638 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x6C3 DUP8 DUP3 DUP9 ADD PUSH3 0x638 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x6D6 DUP8 DUP3 DUP9 ADD PUSH3 0x638 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x6E9 DUP8 DUP3 DUP9 ADD PUSH3 0x670 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x771 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x787 JUMPI PUSH3 0x786 PUSH3 0x72C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7EB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x7AE JUMP JUMPDEST PUSH3 0x7F7 DUP7 DUP4 PUSH3 0x7AE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x838 PUSH3 0x832 PUSH3 0x82C DUP5 PUSH3 0x64E JUMP JUMPDEST PUSH3 0x80F JUMP JUMPDEST PUSH3 0x64E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x853 DUP4 PUSH3 0x818 JUMP JUMPDEST PUSH3 0x86B PUSH3 0x862 DUP3 PUSH3 0x83F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x7BA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x881 PUSH3 0x873 JUMP JUMPDEST PUSH3 0x88E DUP2 DUP5 DUP5 PUSH3 0x848 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8B5 JUMPI PUSH3 0x8A9 PUSH0 DUP3 PUSH3 0x877 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x894 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x904 JUMPI PUSH3 0x8CE DUP2 PUSH3 0x78D JUMP JUMPDEST PUSH3 0x8D9 DUP5 PUSH3 0x79F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8E9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x901 PUSH3 0x8F8 DUP6 PUSH3 0x79F JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x893 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x926 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x909 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x940 DUP4 DUP4 PUSH3 0x915 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x95B DUP3 PUSH3 0x6F5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x977 JUMPI PUSH3 0x976 PUSH3 0x6FF JUMP JUMPDEST JUMPDEST PUSH3 0x983 DUP3 SLOAD PUSH3 0x759 JUMP JUMPDEST PUSH3 0x990 DUP3 DUP3 DUP6 PUSH3 0x8B9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9C6 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x9B1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x9BD DUP6 DUP3 PUSH3 0x933 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA2C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9D6 DUP7 PUSH3 0x78D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9FF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9D8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA1F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA1B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x915 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xA3F DUP2 PUSH3 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA5A PUSH0 DUP4 ADD DUP5 PUSH3 0xA34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xA99 DUP3 PUSH3 0x64E JUMP JUMPDEST SWAP2 POP PUSH3 0xAA6 DUP4 PUSH3 0x64E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xAB6 DUP2 PUSH3 0x64E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xAD0 JUMPI PUSH3 0xACF PUSH3 0xA60 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xAE3 DUP3 PUSH3 0x64E JUMP JUMPDEST SWAP2 POP PUSH3 0xAF0 DUP4 PUSH3 0x64E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB0B JUMPI PUSH3 0xB0A PUSH3 0xA60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB1C DUP2 PUSH3 0x64E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB37 PUSH0 DUP4 ADD DUP7 PUSH3 0xA34 JUMP JUMPDEST PUSH3 0xB46 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB11 JUMP JUMPDEST PUSH3 0xB55 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB11 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB72 PUSH0 DUP4 ADD DUP5 PUSH3 0xB11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255D DUP1 PUSH3 0xB86 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E436BF GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBB285554 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF0F44260 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xF203787C EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x4F1 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xBB285554 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x40B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x85E436BF EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x8E0B017D EQ PUSH2 0x385 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x61D027B3 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x341 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x5D91E3F8 EQ PUSH2 0x2B9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF7E730B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1481794E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36F PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44D PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BF PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5A9 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 DUP2 DUP6 DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x656 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B DUP3 PUSH1 0x40 MLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x796 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x7A3 DUP6 DUP3 DUP6 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x7AE DUP6 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP3 GT PUSH2 0x8D5 JUMPI PUSH0 PUSH2 0x8E2 JUMP JUMPDEST DUP5 DUP3 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x910 CALLER PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH2 0x146E JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x96C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x146E JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP3 SWAP2 SWAP1 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xB74 PUSH0 PUSH2 0x15DD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH31 0xEDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB DUP2 PUSH1 0x40 MLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD19 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD45 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA2 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xDBF DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x16A0 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE1B PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0xE28 DUP2 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE91 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF85 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBA PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x146E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1002 SWAP3 SWAP2 SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108B PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10B5 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10BE ADDRESS PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x115F PUSH2 0x783 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12B9 PUSH2 0x1354 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x15DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x134F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x171F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x135C PUSH2 0x133B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137A PUSH2 0xC4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13D9 JUMPI PUSH2 0x139D PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x13E6 DUP5 DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1450 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1467 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x171F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1559 DUP4 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 PUSH0 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1710 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171B DUP3 PUSH0 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x18E8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18DF SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x193E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A0C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19C7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A9D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B3E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B23 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1B6D DUP2 DUP6 PUSH2 0x1B11 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B7D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B86 DUP2 PUSH2 0x1B49 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA9 DUP2 DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C09 DUP2 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C21 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3C DUP2 PUSH2 0x1C18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C65 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C76 DUP6 DUP3 DUP7 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C94 DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAD PUSH0 DUP4 ADD DUP5 PUSH2 0x1C8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC7 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE7 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D00 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D1D JUMPI PUSH2 0x1D1C PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2A DUP7 DUP3 DUP8 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D3B DUP7 DUP3 DUP8 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D4C DUP7 DUP3 DUP8 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6B DUP2 PUSH2 0x1D56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D84 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D9F JUMPI PUSH2 0x1D9E PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAC DUP5 DUP3 DUP6 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E00 PUSH2 0x1DFB PUSH2 0x1DF6 DUP5 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1DDD JUMP JUMPDEST PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E11 DUP3 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E22 DUP3 PUSH2 0x1E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 DUP2 PUSH2 0x1E18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E4B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1E65 PUSH0 DUP4 ADD DUP13 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1E72 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1E7F PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1E8C PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1EA6 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1EB3 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1EC0 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1ECE PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EFF DUP6 DUP3 DUP7 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F10 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F71 JUMPI PUSH2 0x1F70 PUSH2 0x1F1A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F8A PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1F97 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FA7 DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC2 DUP2 PUSH2 0x1F9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FEA DUP5 DUP3 DUP6 ADD PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2027 PUSH1 0xF DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2032 DUP3 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2054 DUP2 PUSH2 0x201B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2092 DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x209D DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20AB DUP2 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x205B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20FD PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2108 DUP3 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x212A DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2168 DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2173 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2183 JUMPI PUSH2 0x2182 PUSH2 0x2131 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2198 DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x21A3 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21BB JUMPI PUSH2 0x21BA PUSH2 0x205B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534454207061796F7574206661696C65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F5 PUSH1 0x12 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP3 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2222 DUP2 PUSH2 0x21E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP7 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x2249 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x2256 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203E3D2031205354454D000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2292 PUSH1 0x1A DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x229D DUP3 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22BF DUP2 PUSH2 0x2286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203C3D2053656C6C2072617465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22FA PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2305 DUP3 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2327 DUP2 PUSH2 0x22EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C2072617465206D75737420626520E289A52031205354454D20706572 PUSH0 DUP3 ADD MSTORE PUSH32 0x2055534454000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2388 PUSH1 0x25 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2393 DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B5 DUP2 PUSH2 0x237C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23CF PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x23DC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x23E9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2425 PUSH1 0x14 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2430 DUP3 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2452 DUP2 PUSH2 0x2419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x246C PUSH0 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x2479 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x248E DUP2 PUSH2 0x1C18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A9 JUMPI PUSH2 0x24A8 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B6 DUP5 DUP3 DUP6 ADD PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24D2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x24DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x24EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24FE DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2509 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x205B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SWAP11 0xDD 0xCD EQ PUSH25 0x486BC33EE821E7CF5D82098F0EA851E81F0E09658B23B6FF3E 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "24917:4990:0:-:0;;;25016:4;24991:29;;25083:4;25057:30;;25791:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25968:10;12482:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12556:5;12548;:13;;;;;;:::i;:::-;;12581:7;12571;:17;;;;;;:::i;:::-;;12482:113;;23049:1;23025:26;;:12;:26;;;23021:95;;23102:1;23074:31;;;;;;;;;;;:::i;:::-;;;;;;;;23021:95;23125:32;23144:12;23125:18;;;:32;;:::i;:::-;22977:187;26009:17:::2;25990:9;;:37;;;;;;;;;;;;;;;;;;26048:9;26037:8;;:20;;;;;;;;;;;;;;;;;;26084:15;26067:14;;:32;;;;;;;;;;;;;;;;;;26109:37;26115:8;;;;;;;;;;;26141:4;26125:13;:20;;;;:::i;:::-;26109:5;;;:37;;:::i;:::-;25791:362:::0;;;;24917:4990;;24664:187;24737:16;24756:6;;;;;;;;;;;24737:25;;24781:8;24772:6;;:17;;;;;;;;;;;;;;;;;;24835:8;24804:40;;24825:8;24804:40;;;;;;;;;;;;24727:124;24664:187;:::o;18339:208::-;18428:1;18409:21;;:7;:21;;;18405:91;;18482:1;18453:32;;;;;;;;;;;:::i;:::-;;;;;;;;18405:91;18505:35;18521:1;18525:7;18534:5;18505:7;;;:35;;:::i;:::-;18339:208;;:::o;16889:1107::-;16994:1;16978:18;;:4;:18;;;16974:540;;17130:5;17114:12;;:21;;;;;;;:::i;:::-;;;;;;;;16974:540;;;17166:19;17188:9;:15;17198:4;17188:15;;;;;;;;;;;;;;;;17166:37;;17235:5;17221:11;:19;17217:115;;;17292:4;17298:11;17311:5;17267:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17217:115;17484:5;17470:11;:19;17452:9;:15;17462:4;17452:15;;;;;;;;;;;;;;;:37;;;;17152:362;16974:540;17542:1;17528:16;;:2;:16;;;17524:425;;17707:5;17691:12;;:21;;;;;;;;;;;17524:425;;;17919:5;17902:9;:13;17912:2;17902:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17524:425;17979:2;17964:25;;17973:4;17964:25;;;17983:5;17964:25;;;;;;:::i;:::-;;;;;;;;16889:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:99::-;2083:6;2117:5;2111:12;2101:22;;2031:99;;;:::o;2136:180::-;2184:77;2181:1;2174:88;2281:4;2278:1;2271:15;2305:4;2302:1;2295:15;2322:180;2370:77;2367:1;2360:88;2467:4;2464:1;2457:15;2491:4;2488:1;2481:15;2508:320;2552:6;2589:1;2583:4;2579:12;2569:22;;2636:1;2630:4;2626:12;2657:18;2647:81;;2713:4;2705:6;2701:17;2691:27;;2647:81;2775:2;2767:6;2764:14;2744:18;2741:38;2738:84;;2794:18;;:::i;:::-;2738:84;2559:269;2508:320;;;:::o;2834:141::-;2883:4;2906:3;2898:11;;2929:3;2926:1;2919:14;2963:4;2960:1;2950:18;2942:26;;2834:141;;;:::o;2981:93::-;3018:6;3065:2;3060;3053:5;3049:14;3045:23;3035:33;;2981:93;;;:::o;3080:107::-;3124:8;3174:5;3168:4;3164:16;3143:37;;3080:107;;;;:::o;3193:393::-;3262:6;3312:1;3300:10;3296:18;3335:97;3365:66;3354:9;3335:97;:::i;:::-;3453:39;3483:8;3472:9;3453:39;:::i;:::-;3441:51;;3525:4;3521:9;3514:5;3510:21;3501:30;;3574:4;3564:8;3560:19;3553:5;3550:30;3540:40;;3269:317;;3193:393;;;;;:::o;3592:60::-;3620:3;3641:5;3634:12;;3592:60;;;:::o;3658:142::-;3708:9;3741:53;3759:34;3768:24;3786:5;3768:24;:::i;:::-;3759:34;:::i;:::-;3741:53;:::i;:::-;3728:66;;3658:142;;;:::o;3806:75::-;3849:3;3870:5;3863:12;;3806:75;;;:::o;3887:269::-;3997:39;4028:7;3997:39;:::i;:::-;4058:91;4107:41;4131:16;4107:41;:::i;:::-;4099:6;4092:4;4086:11;4058:91;:::i;:::-;4052:4;4045:105;3963:193;3887:269;;;:::o;4162:73::-;4207:3;4162:73;:::o;4241:189::-;4318:32;;:::i;:::-;4359:65;4417:6;4409;4403:4;4359:65;:::i;:::-;4294:136;4241:189;;:::o;4436:186::-;4496:120;4513:3;4506:5;4503:14;4496:120;;;4567:39;4604:1;4597:5;4567:39;:::i;:::-;4540:1;4533:5;4529:13;4520:22;;4496:120;;;4436:186;;:::o;4628:543::-;4729:2;4724:3;4721:11;4718:446;;;4763:38;4795:5;4763:38;:::i;:::-;4847:29;4865:10;4847:29;:::i;:::-;4837:8;4833:44;5030:2;5018:10;5015:18;5012:49;;;5051:8;5036:23;;5012:49;5074:80;5130:22;5148:3;5130:22;:::i;:::-;5120:8;5116:37;5103:11;5074:80;:::i;:::-;4733:431;;4718:446;4628:543;;;:::o;5177:117::-;5231:8;5281:5;5275:4;5271:16;5250:37;;5177:117;;;;:::o;5300:169::-;5344:6;5377:51;5425:1;5421:6;5413:5;5410:1;5406:13;5377:51;:::i;:::-;5373:56;5458:4;5452;5448:15;5438:25;;5351:118;5300:169;;;;:::o;5474:295::-;5550:4;5696:29;5721:3;5715:4;5696:29;:::i;:::-;5688:37;;5758:3;5755:1;5751:11;5745:4;5742:21;5734:29;;5474:295;;;;:::o;5774:1395::-;5891:37;5924:3;5891:37;:::i;:::-;5993:18;5985:6;5982:30;5979:56;;;6015:18;;:::i;:::-;5979:56;6059:38;6091:4;6085:11;6059:38;:::i;:::-;6144:67;6204:6;6196;6190:4;6144:67;:::i;:::-;6238:1;6262:4;6249:17;;6294:2;6286:6;6283:14;6311:1;6306:618;;;;6968:1;6985:6;6982:77;;;7034:9;7029:3;7025:19;7019:26;7010:35;;6982:77;7085:67;7145:6;7138:5;7085:67;:::i;:::-;7079:4;7072:81;6941:222;6276:887;;6306:618;6358:4;6354:9;6346:6;6342:22;6392:37;6424:4;6392:37;:::i;:::-;6451:1;6465:208;6479:7;6476:1;6473:14;6465:208;;;6558:9;6553:3;6549:19;6543:26;6535:6;6528:42;6609:1;6601:6;6597:14;6587:24;;6656:2;6645:9;6641:18;6628:31;;6502:4;6499:1;6495:12;6490:17;;6465:208;;;6701:6;6692:7;6689:19;6686:179;;;6759:9;6754:3;6750:19;6744:26;6802:48;6844:4;6836:6;6832:17;6821:9;6802:48;:::i;:::-;6794:6;6787:64;6709:156;6686:179;6911:1;6907;6899:6;6895:14;6891:22;6885:4;6878:36;6313:611;;;6276:887;;5866:1303;;;5774:1395;;:::o;7175:118::-;7262:24;7280:5;7262:24;:::i;:::-;7257:3;7250:37;7175:118;;:::o;7299:222::-;7392:4;7430:2;7419:9;7415:18;7407:26;;7443:71;7511:1;7500:9;7496:17;7487:6;7443:71;:::i;:::-;7299:222;;;;:::o;7527:180::-;7575:77;7572:1;7565:88;7672:4;7669:1;7662:15;7696:4;7693:1;7686:15;7713:410;7753:7;7776:20;7794:1;7776:20;:::i;:::-;7771:25;;7810:20;7828:1;7810:20;:::i;:::-;7805:25;;7865:1;7862;7858:9;7887:30;7905:11;7887:30;:::i;:::-;7876:41;;8066:1;8057:7;8053:15;8050:1;8047:22;8027:1;8020:9;8000:83;7977:139;;8096:18;;:::i;:::-;7977:139;7761:362;7713:410;;;;:::o;8129:191::-;8169:3;8188:20;8206:1;8188:20;:::i;:::-;8183:25;;8222:20;8240:1;8222:20;:::i;:::-;8217:25;;8265:1;8262;8258:9;8251:16;;8286:3;8283:1;8280:10;8277:36;;;8293:18;;:::i;:::-;8277:36;8129:191;;;;:::o;8326:118::-;8413:24;8431:5;8413:24;:::i;:::-;8408:3;8401:37;8326:118;;:::o;8450:442::-;8599:4;8637:2;8626:9;8622:18;8614:26;;8650:71;8718:1;8707:9;8703:17;8694:6;8650:71;:::i;:::-;8731:72;8799:2;8788:9;8784:18;8775:6;8731:72;:::i;:::-;8813;8881:2;8870:9;8866:18;8857:6;8813:72;:::i;:::-;8450:442;;;;;;:::o;8898:222::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9042:71;9110:1;9099:9;9095:17;9086:6;9042:71;:::i;:::-;8898:222;;;;:::o;24917:4990:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 4930,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 5919,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 5792,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 4948,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 5470,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 4923,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 5083,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 5597,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 5230,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 6382,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 4476,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1439,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 2846,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1206": {
									"entryPoint": 3482,
									"id": 1206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyRate_927": {
									"entryPoint": 4917,
									"id": 927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyStem_1074": {
									"entryPoint": 3672,
									"id": 1074,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1978,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getConfig_1364": {
									"entryPoint": 4110,
									"id": 1364,
									"parameterSlots": 0,
									"returnSlots": 9
								},
								"@mint_1184": {
									"entryPoint": 1986,
									"id": 1184,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1295,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": 3150,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@profitTreasury_934": {
									"entryPoint": 4748,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_867": {
									"entryPoint": 2915,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellRate_930": {
									"entryPoint": 2840,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellStem_1162": {
									"entryPoint": 2105,
									"id": 1162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBuyRate_1236": {
									"entryPoint": 2934,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProfitTreasury_1315": {
									"entryPoint": 1473,
									"id": 1315,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellRate_1259": {
									"entryPoint": 3190,
									"id": 1259,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_1299": {
									"entryPoint": 4606,
									"id": 1299,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 3338,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1923,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1932,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 4785,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 3601,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_932": {
									"entryPoint": 2803,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtToken_924": {
									"entryPoint": 3635,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUSDT_1283": {
									"entryPoint": 1614,
									"id": 1283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925": {
									"entryPoint": 8179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4": {
									"entryPoint": 9201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20318:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3560:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:32:1"
															},
															"nodeType": "YulIf",
															"src": "3522:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3651:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3666:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3670:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3695:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3730:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3741:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3726:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3750:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3705:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3695:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:1",
														"type": ""
													}
												],
												"src": "3446:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3863:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3886:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3868:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:1",
														"type": ""
													}
												],
												"src": "3781:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4013:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4049:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3975:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3987:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3998:4:1",
														"type": ""
													}
												],
												"src": "3905:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4233:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:32:1"
															},
															"nodeType": "YulIf",
															"src": "4243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4372:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4416:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4451:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4462:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4447:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4447:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4426:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4499:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4514:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4518:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4544:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4554:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4554:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4544:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4627:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4656:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4672:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4187:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4198:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4210:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4218:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4226:6:1",
														"type": ""
													}
												],
												"src": "4133:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4801:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4811:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4783:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4793:7:1",
														"type": ""
													}
												],
												"src": "4758:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4911:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4933:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4933:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4921:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4899:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4906:3:1",
														"type": ""
													}
												],
												"src": "4850:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5062:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5072:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5172:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5157:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5108:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5034:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5046:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5057:4:1",
														"type": ""
													}
												],
												"src": "4968:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:1"
															},
															"nodeType": "YulIf",
															"src": "5264:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:1",
														"type": ""
													}
												],
												"src": "5188:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:1",
														"type": ""
													}
												],
												"src": "5523:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:1",
														"type": ""
													}
												],
												"src": "5647:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5907:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5917:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5924:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5917:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5893:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5903:3:1",
														"type": ""
													}
												],
												"src": "5875:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6001:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6011:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6069:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6051:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6051:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6042:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6042:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6024:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6011:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5981:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5991:9:1",
														"type": ""
													}
												],
												"src": "5941:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6149:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6159:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6203:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6172:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6159:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6129:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6139:9:1",
														"type": ""
													}
												],
												"src": "6089:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6304:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6348:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6317:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6304:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6274:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6284:9:1",
														"type": ""
													}
												],
												"src": "6221:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6444:79:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6461:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6510:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6466:43:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:50:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6454:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6454:63:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6432:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6439:3:1",
														"type": ""
													}
												],
												"src": "6366:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6640:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6650:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6662:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6673:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6650:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6743:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6756:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6752:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6686:56:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:84:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6686:84:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6612:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6624:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6635:4:1",
														"type": ""
													}
												],
												"src": "6529:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7105:786:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7115:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7127:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7138:3:1",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7115:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7196:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7209:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7152:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7152:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7152:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7290:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7301:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7286:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7286:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7233:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7233:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7359:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7383:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7315:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7315:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7315:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7441:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7454:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7465:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7397:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7397:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7397:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7547:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7532:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7479:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7479:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7630:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7562:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7562:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "7689:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7713:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7698:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7645:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7645:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7645:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "7772:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7785:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7796:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7781:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7728:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7728:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7728:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "7855:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:3:1",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7864:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7811:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7811:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7811:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7013:9:1",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "7025:6:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "7033:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7041:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7049:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7057:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7065:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7073:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7081:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7089:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7100:4:1",
														"type": ""
													}
												],
												"src": "6783:1108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7980:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8026:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8028:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8028:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8028:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8001:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8010:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7997:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7993:32:1"
															},
															"nodeType": "YulIf",
															"src": "7990:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8119:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8134:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8148:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8138:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8163:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8198:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8209:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8194:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8194:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8218:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8173:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8173:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8163:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8246:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8261:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8275:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8265:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8326:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8322:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8301:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7942:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7953:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7965:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7973:6:1",
														"type": ""
													}
												],
												"src": "7897:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8405:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8425:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8415:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8415:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8519:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8522:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8512:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8512:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8546:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8536:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8377:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8614:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8624:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8638:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8644:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8634:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8624:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8655:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8685:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8691:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8659:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8732:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8746:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8760:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8768:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8756:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8756:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8746:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8712:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:26:1"
															},
															"nodeType": "YulIf",
															"src": "8702:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8835:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8849:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8849:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8849:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8799:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8822:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8830:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8819:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8819:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8796:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:38:1"
															},
															"nodeType": "YulIf",
															"src": "8793:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8598:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8607:6:1",
														"type": ""
													}
												],
												"src": "8563:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9015:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9048:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9105:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9118:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9129:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9114:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9061:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9061:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9061:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9186:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9199:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9210:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9195:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9142:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9142:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9142:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8979:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8991:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8999:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9010:4:1",
														"type": ""
													}
												],
												"src": "8889:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9267:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9321:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9330:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9333:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9323:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9323:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9323:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9290:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9312:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9297:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9297:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9287:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9287:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9280:40:1"
															},
															"nodeType": "YulIf",
															"src": "9277:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9260:5:1",
														"type": ""
													}
												],
												"src": "9227:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9409:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9419:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9434:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9428:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9428:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9419:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9474:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9450:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9450:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9387:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9395:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9403:5:1",
														"type": ""
													}
												],
												"src": "9349:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9566:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9612:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9614:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9614:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9614:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9587:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9596:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9583:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9579:32:1"
															},
															"nodeType": "YulIf",
															"src": "9576:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9705:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9720:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9734:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9724:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9749:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9792:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9803:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9788:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9788:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9812:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9759:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9759:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9749:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9536:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9547:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9559:6:1",
														"type": ""
													}
												],
												"src": "9492:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9949:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9971:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9979:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9967:14:1"
																	},
																	{
																		"hexValue": "5769746864726177206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9983:17:1",
																		"type": "",
																		"value": "Withdraw failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9960:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9941:6:1",
														"type": ""
													}
												],
												"src": "9843:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10160:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10170:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10236:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10241:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10177:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10177:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10170:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10342:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																	"nodeType": "YulIdentifier",
																	"src": "10253:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10253:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10355:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10366:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10355:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10148:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10156:3:1",
														"type": ""
													}
												],
												"src": "10014:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10557:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10567:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10579:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10590:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10567:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10625:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10610:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10633:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10639:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10629:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10603:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10603:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10659:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10793:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10667:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10667:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10659:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10537:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10552:4:1",
														"type": ""
													}
												],
												"src": "10386:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10839:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10856:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10859:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10849:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10953:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10956:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10946:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10946:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10977:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10980:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10970:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10970:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10811:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11045:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11055:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11078:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11060:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11060:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11055:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11089:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11112:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11094:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11094:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11089:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11123:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11146:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11149:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11127:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11160:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11189:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11171:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11160:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11378:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11380:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11380:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11380:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11311:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11304:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11304:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11334:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11341:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11350:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11337:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11337:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11331:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11331:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11284:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11284:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11264:113:1"
															},
															"nodeType": "YulIf",
															"src": "11261:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11028:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11031:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11037:7:1",
														"type": ""
													}
												],
												"src": "10997:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11519:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11541:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11549:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11537:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11553:31:1",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11530:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11530:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11511:6:1",
														"type": ""
													}
												],
												"src": "11413:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11744:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11754:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11820:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11825:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11761:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11761:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11754:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11926:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "11837:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11837:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11837:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11939:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11950:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11955:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11946:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11946:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11939:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11732:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11740:3:1",
														"type": ""
													}
												],
												"src": "11598:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12141:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12151:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12163:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12174:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12159:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12159:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12151:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12198:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12209:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12194:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12217:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12223:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12213:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12187:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12243:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12377:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12251:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12251:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12243:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12121:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12136:4:1",
														"type": ""
													}
												],
												"src": "11970:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12423:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12443:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12433:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12433:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12537:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12540:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12530:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12561:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12564:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12554:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12554:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12395:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12623:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12633:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12656:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12638:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12638:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12633:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12667:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12690:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12672:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12672:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12667:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12714:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12716:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12716:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12716:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12711:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12704:9:1"
															},
															"nodeType": "YulIf",
															"src": "12701:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12746:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12755:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12758:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12751:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12751:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12746:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12612:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12615:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12621:1:1",
														"type": ""
													}
												],
												"src": "12581:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12817:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12827:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12850:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12832:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12832:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12827:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12861:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12884:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12866:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12866:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12861:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12895:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12907:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12910:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12903:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12903:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12895:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12937:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12939:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12939:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12939:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12928:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12934:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12925:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:11:1"
															},
															"nodeType": "YulIf",
															"src": "12922:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12803:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12806:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12812:4:1",
														"type": ""
													}
												],
												"src": "12772:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13078:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13100:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13108:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13096:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13096:14:1"
																	},
																	{
																		"hexValue": "55534454207061796f7574206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13112:20:1",
																		"type": "",
																		"value": "USDT payout failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13089:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13089:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13089:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13070:6:1",
														"type": ""
													}
												],
												"src": "12972:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13292:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13302:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13368:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13373:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13309:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13474:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																	"nodeType": "YulIdentifier",
																	"src": "13385:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13385:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13385:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13487:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13498:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13503:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13487:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13280:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13288:3:1",
														"type": ""
													}
												],
												"src": "13146:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13689:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13699:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13711:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13722:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13707:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13699:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13757:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13742:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13765:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13771:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13761:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13735:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13735:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13791:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13925:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13799:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13791:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13669:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13684:4:1",
														"type": ""
													}
												],
												"src": "13518:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14097:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14107:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14119:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14130:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14115:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14115:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14107:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14187:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14200:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14211:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14196:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14143:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14143:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14143:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14268:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14277:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14224:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14224:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14224:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14350:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14374:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14359:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14306:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14306:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14306:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14053:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14065:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14073:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14081:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14092:4:1",
														"type": ""
													}
												],
												"src": "13943:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14497:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14519:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14527:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14515:14:1"
																	},
																	{
																		"hexValue": "4275792072617465206d757374206265203e3d2031205354454d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14531:28:1",
																		"type": "",
																		"value": "Buy rate must be >= 1 STEM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14508:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14508:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14489:6:1",
														"type": ""
													}
												],
												"src": "14391:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14719:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14729:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14795:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14800:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14736:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14736:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14729:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14901:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																	"nodeType": "YulIdentifier",
																	"src": "14812:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14812:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14812:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14914:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14925:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14930:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14921:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14921:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14914:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14707:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14715:3:1",
														"type": ""
													}
												],
												"src": "14573:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15116:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15126:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15138:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15134:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15134:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15126:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15184:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15169:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15192:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15188:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15162:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15162:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15218:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15352:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15226:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15226:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15218:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15096:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15111:4:1",
														"type": ""
													}
												],
												"src": "14945:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15476:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15498:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15494:14:1"
																	},
																	{
																		"hexValue": "4275792072617465206d757374206265203c3d2053656c6c2072617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15510:31:1",
																		"type": "",
																		"value": "Buy rate must be <= Sell rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15487:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15487:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15468:6:1",
														"type": ""
													}
												],
												"src": "15370:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15701:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15711:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15777:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15782:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15718:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15718:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15711:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15883:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																	"nodeType": "YulIdentifier",
																	"src": "15794:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15794:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15896:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15907:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15912:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15903:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15903:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15896:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15689:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15697:3:1",
														"type": ""
													}
												],
												"src": "15555:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16098:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16108:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16120:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16131:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16116:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16116:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16108:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16155:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16166:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16174:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16180:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16170:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16144:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16144:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16200:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16334:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16208:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16208:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16200:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16078:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16093:4:1",
														"type": ""
													}
												],
												"src": "15927:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16458:150:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16480:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16488:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16476:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16492:66:1",
																		"type": "",
																		"value": "0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16469:90:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16469:90:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16580:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16588:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16576:15:1"
																	},
																	{
																		"hexValue": "2055534454",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16593:7:1",
																		"type": "",
																		"value": " USDT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16569:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16569:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16450:6:1",
														"type": ""
													}
												],
												"src": "16352:256:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16760:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16770:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16836:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16841:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16777:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16777:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16770:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16942:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																	"nodeType": "YulIdentifier",
																	"src": "16853:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16853:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16853:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16955:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16966:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16971:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16962:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16962:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16955:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16748:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16756:3:1",
														"type": ""
													}
												],
												"src": "16614:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17157:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17167:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17179:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17190:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17175:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17167:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17225:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17210:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17233:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17229:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17203:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17203:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17259:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17393:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17267:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17267:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17259:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17137:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17152:4:1",
														"type": ""
													}
												],
												"src": "16986:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17565:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17575:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17587:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17598:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17583:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17583:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17575:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17655:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17679:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17664:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17611:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17611:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17611:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17736:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17749:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17760:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17745:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17692:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17692:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17692:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17818:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17831:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17842:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17827:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17774:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17774:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17774:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17521:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17533:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17541:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17549:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17560:4:1",
														"type": ""
													}
												],
												"src": "17411:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17965:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17987:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17995:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17983:14:1"
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17999:22:1",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17976:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17976:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17957:6:1",
														"type": ""
													}
												],
												"src": "17859:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18181:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18191:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18257:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18262:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18198:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18198:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18191:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18363:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																	"nodeType": "YulIdentifier",
																	"src": "18274:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18274:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18274:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18376:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18387:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18392:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18383:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18376:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18169:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18177:3:1",
														"type": ""
													}
												],
												"src": "18035:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18578:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18588:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18611:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18596:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18588:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18635:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18646:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18631:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18654:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18660:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18650:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18624:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18624:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18680:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18814:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18688:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18688:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18680:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18558:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18573:4:1",
														"type": ""
													}
												],
												"src": "18407:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18958:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18968:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18980:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18991:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18976:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18976:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18968:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19048:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19072:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19057:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19004:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19004:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19004:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19129:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19142:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19153:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19138:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19085:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19085:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19085:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18922:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18934:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18942:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18953:4:1",
														"type": ""
													}
												],
												"src": "18832:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19233:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19243:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19258:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19252:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19252:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19243:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19301:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19274:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19274:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19274:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19211:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19219:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19227:5:1",
														"type": ""
													}
												],
												"src": "19170:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19396:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19442:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19444:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19444:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19444:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19417:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19426:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19413:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19438:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19409:32:1"
															},
															"nodeType": "YulIf",
															"src": "19406:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "19535:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19550:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19564:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19554:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19579:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19625:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19636:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19621:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19621:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19645:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19589:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19589:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19579:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19389:6:1",
														"type": ""
													}
												],
												"src": "19319:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19830:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19840:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19852:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19863:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19848:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19848:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19840:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19920:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19933:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19944:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19929:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19876:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19876:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19876:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20001:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20010:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19957:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19957:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19957:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20083:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20107:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20092:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20039:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20039:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20039:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19786:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19798:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19806:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19814:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19825:4:1",
														"type": ""
													}
												],
												"src": "19676:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20168:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20178:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20201:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20183:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20183:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20178:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20212:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20235:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20217:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20217:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20212:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20246:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20257:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20260:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20253:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20253:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20246:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20286:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20288:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20288:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20288:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20278:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "20281:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20275:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20275:10:1"
															},
															"nodeType": "YulIf",
															"src": "20272:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20155:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20158:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20164:3:1",
														"type": ""
													}
												],
												"src": "20124:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT payout failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy rate must be >= 1 STEM\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy rate must be <= Sell rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28(memPtr) {\n\n        mstore(add(memPtr, 0), 0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572)\n\n        mstore(add(memPtr, 32), \" USDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a7575f3560e01c806385e436bf116100f7578063bb28555411610095578063f0f442601161006f578063f0f442601461049b578063f203787c146104b7578063f2fde38b146104d5578063fc37987b146104f1576101a7565b8063bb28555414610429578063c3f909d414610445578063dd62ed3e1461046b576101a7565b806395d89b41116100d157806395d89b41146103a15780639dc29fac146103bf578063a9059cbb146103db578063a98ad46c1461040b576101a7565b806385e436bf1461034b5780638da5cb5b146103675780638e0b017d14610385576101a7565b8063313ce5671161016457806361d027b31161013e57806361d027b3146102d55780636217229b146102f357806370a0823114610311578063715018a614610341576101a7565b8063313ce5671461027f57806340c10f191461029d5780635d91e3f8146102b9576101a7565b806306fdde03146101ab578063095ea7b3146101c95780630f7e730b146101f95780631481794e1461021557806318160ddd1461023157806323b872dd1461024f575b5f80fd5b6101b361050f565b6040516101c09190611b91565b60405180910390f35b6101e360048036038101906101de9190611c42565b61059f565b6040516101f09190611c9a565b60405180910390f35b610213600480360381019061020e9190611cb3565b6105c1565b005b61022f600480360381019061022a9190611c42565b61064e565b005b610239610783565b6040516102469190611ced565b60405180910390f35b61026960048036038101906102649190611d06565b61078c565b6040516102769190611c9a565b60405180910390f35b6102876107ba565b6040516102949190611d71565b60405180910390f35b6102b760048036038101906102b29190611c42565b6107c2565b005b6102d360048036038101906102ce9190611d8a565b610839565b005b6102dd610af3565b6040516102ea9190611dc4565b60405180910390f35b6102fb610b18565b6040516103089190611ced565b60405180910390f35b61032b60048036038101906103269190611cb3565b610b1e565b6040516103389190611ced565b60405180910390f35b610349610b63565b005b61036560048036038101906103609190611d8a565b610b76565b005b61036f610c4e565b60405161037c9190611dc4565b60405180910390f35b61039f600480360381019061039a9190611d8a565b610c76565b005b6103a9610d0a565b6040516103b69190611b91565b60405180910390f35b6103d960048036038101906103d49190611c42565b610d9a565b005b6103f560048036038101906103f09190611c42565b610e11565b6040516104029190611c9a565b60405180910390f35b610413610e33565b6040516104209190611e38565b60405180910390f35b610443600480360381019061043e9190611d8a565b610e58565b005b61044d61100e565b60405161046299989796959493929190611e51565b60405180910390f35b61048560048036038101906104809190611edc565b61117c565b6040516104929190611ced565b60405180910390f35b6104b560048036038101906104b09190611cb3565b6111fe565b005b6104bf61128c565b6040516104cc9190611dc4565b60405180910390f35b6104ef60048036038101906104ea9190611cb3565b6112b1565b005b6104f9611335565b6040516105069190611ced565b60405180910390f35b60606003805461051e90611f47565b80601f016020809104026020016040519081016040528092919081815260200182805461054a90611f47565b80156105955780601f1061056c57610100808354040283529160200191610595565b820191905f5260205f20905b81548152906001019060200180831161057857829003601f168201915b5050505050905090565b5f806105a961133b565b90506105b6818585611342565b600191505092915050565b6105c9611354565b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167e56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b60405160405180910390a250565b610656611354565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106b2929190611f77565b6020604051808303815f875af11580156106ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f29190611fc8565b610731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107289061203d565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b826040516107779190611ced565b60405180910390a25050565b5f600254905090565b5f8061079661133b565b90506107a38582856113db565b6107ae85858561146e565b60019150509392505050565b5f6012905090565b6107ca611354565b6107e782670de0b6b3a7640000836107e29190612088565b61155e565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe8260405161082d9190611ced565b60405180910390a25050565b5f811161087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087290612113565b60405180910390fd5b5f600854670de0b6b3a7640000836108939190612088565b61089d919061215e565b90505f670de0b6b3a7640000836108b4919061215e565b90505f600854826108c59190612088565b90505f8482116108d5575f6108e2565b84826108e1919061218e565b5b90506109103360095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168761146e565b5f8111801561096c57505f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156109bf576109be60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361146e565b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610a1b929190611f77565b6020604051808303815f875af1158015610a37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a5b9190611fc8565b610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a919061220b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420868684604051610ae493929190612229565b60405180910390a25050505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b6b611354565b610b745f6115dd565b565b610b7e611354565b670de0b6b3a7640000811015610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc0906122a8565b60405180910390fd5b600854811115610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590612310565b60405180910390fd5b806007819055507eedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb181604051610c439190611ced565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c7e611354565b670de0b6b3a7640000811015610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc09061239e565b60405180910390fd5b806008819055507fbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab81604051610cff9190611ced565b60405180910390a150565b606060048054610d1990611f47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590611f47565b8015610d905780601f10610d6757610100808354040283529160200191610d90565b820191905f5260205f20905b815481529060010190602001808311610d7357829003601f168201915b5050505050905090565b610da2611354565b610dbf82670de0b6b3a764000083610dba9190612088565b6116a0565b8173ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df782604051610e059190611ced565b60405180910390a25050565b5f80610e1b61133b565b9050610e2881858561146e565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9190612113565b60405180910390fd5b5f670de0b6b3a764000082610eaf9190612088565b905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f0f939291906123bc565b6020604051808303815f875af1158015610f2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4f9190611fc8565b610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f859061243b565b60405180910390fd5b610fba60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338361146e565b3373ffffffffffffffffffffffffffffffffffffffff167f59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb8383604051611002929190612459565b60405180910390a25050565b5f805f805f805f805f60075460085460095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661108b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b1e565b6110b5600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b1e565b6110be30610b1e565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111189190611dc4565b602060405180830381865afa158015611133573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111579190612494565b61115f610783565b985098509850985098509850985098509850909192939495969798565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611206611354565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f60860405160405180910390a250565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112b9611354565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611329575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113209190611dc4565b60405180910390fd5b611332816115dd565b50565b60075481565b5f33905090565b61134f838383600161171f565b505050565b61135c61133b565b73ffffffffffffffffffffffffffffffffffffffff1661137a610c4e565b73ffffffffffffffffffffffffffffffffffffffff16146113d95761139d61133b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113d09190611dc4565b60405180910390fd5b565b5f6113e6848461117c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114685781811015611459578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611450939291906124bf565b60405180910390fd5b61146784848484035f61171f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114de575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d59190611dc4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115459190611dc4565b60405180910390fd5b6115598383836118ee565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ce575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115c59190611dc4565b60405180910390fd5b6115d95f83836118ee565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611710575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117079190611dc4565b60405180910390fd5b61171b825f836118ee565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361178f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117869190611dc4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ff575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117f69190611dc4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156118e8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118df9190611ced565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361193e578060025f82825461193291906124f4565b92505081905550611a0c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156119c7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119be939291906124bf565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a53578060025f8282540392505081905550611a9d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611afa9190611ced565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b3e578082015181840152602081019050611b23565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b6382611b07565b611b6d8185611b11565b9350611b7d818560208601611b21565b611b8681611b49565b840191505092915050565b5f6020820190508181035f830152611ba98184611b59565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bde82611bb5565b9050919050565b611bee81611bd4565b8114611bf8575f80fd5b50565b5f81359050611c0981611be5565b92915050565b5f819050919050565b611c2181611c0f565b8114611c2b575f80fd5b50565b5f81359050611c3c81611c18565b92915050565b5f8060408385031215611c5857611c57611bb1565b5b5f611c6585828601611bfb565b9250506020611c7685828601611c2e565b9150509250929050565b5f8115159050919050565b611c9481611c80565b82525050565b5f602082019050611cad5f830184611c8b565b92915050565b5f60208284031215611cc857611cc7611bb1565b5b5f611cd584828501611bfb565b91505092915050565b611ce781611c0f565b82525050565b5f602082019050611d005f830184611cde565b92915050565b5f805f60608486031215611d1d57611d1c611bb1565b5b5f611d2a86828701611bfb565b9350506020611d3b86828701611bfb565b9250506040611d4c86828701611c2e565b9150509250925092565b5f60ff82169050919050565b611d6b81611d56565b82525050565b5f602082019050611d845f830184611d62565b92915050565b5f60208284031215611d9f57611d9e611bb1565b5b5f611dac84828501611c2e565b91505092915050565b611dbe81611bd4565b82525050565b5f602082019050611dd75f830184611db5565b92915050565b5f819050919050565b5f611e00611dfb611df684611bb5565b611ddd565b611bb5565b9050919050565b5f611e1182611de6565b9050919050565b5f611e2282611e07565b9050919050565b611e3281611e18565b82525050565b5f602082019050611e4b5f830184611e29565b92915050565b5f61012082019050611e655f83018c611cde565b611e72602083018b611cde565b611e7f604083018a611db5565b611e8c6060830189611db5565b611e996080830188611cde565b611ea660a0830187611cde565b611eb360c0830186611cde565b611ec060e0830185611cde565b611ece610100830184611cde565b9a9950505050505050505050565b5f8060408385031215611ef257611ef1611bb1565b5b5f611eff85828601611bfb565b9250506020611f1085828601611bfb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f5e57607f821691505b602082108103611f7157611f70611f1a565b5b50919050565b5f604082019050611f8a5f830185611db5565b611f976020830184611cde565b9392505050565b611fa781611c80565b8114611fb1575f80fd5b50565b5f81519050611fc281611f9e565b92915050565b5f60208284031215611fdd57611fdc611bb1565b5b5f611fea84828501611fb4565b91505092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f612027600f83611b11565b915061203282611ff3565b602082019050919050565b5f6020820190508181035f8301526120548161201b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61209282611c0f565b915061209d83611c0f565b92508282026120ab81611c0f565b915082820484148315176120c2576120c161205b565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6120fd601d83611b11565b9150612108826120c9565b602082019050919050565b5f6020820190508181035f83015261212a816120f1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61216882611c0f565b915061217383611c0f565b92508261218357612182612131565b5b828204905092915050565b5f61219882611c0f565b91506121a383611c0f565b92508282039050818111156121bb576121ba61205b565b5b92915050565b7f55534454207061796f7574206661696c656400000000000000000000000000005f82015250565b5f6121f5601283611b11565b9150612200826121c1565b602082019050919050565b5f6020820190508181035f830152612222816121e9565b9050919050565b5f60608201905061223c5f830186611cde565b6122496020830185611cde565b6122566040830184611cde565b949350505050565b7f4275792072617465206d757374206265203e3d2031205354454d0000000000005f82015250565b5f612292601a83611b11565b915061229d8261225e565b602082019050919050565b5f6020820190508181035f8301526122bf81612286565b9050919050565b7f4275792072617465206d757374206265203c3d2053656c6c20726174650000005f82015250565b5f6122fa601d83611b11565b9150612305826122c6565b602082019050919050565b5f6020820190508181035f830152612327816122ee565b9050919050565b7f53656c6c2072617465206d75737420626520e289a52031205354454d207065725f8201527f2055534454000000000000000000000000000000000000000000000000000000602082015250565b5f612388602583611b11565b91506123938261232e565b604082019050919050565b5f6020820190508181035f8301526123b58161237c565b9050919050565b5f6060820190506123cf5f830186611db5565b6123dc6020830185611db5565b6123e96040830184611cde565b949350505050565b7f55534454207472616e73666572206661696c65640000000000000000000000005f82015250565b5f612425601483611b11565b9150612430826123f1565b602082019050919050565b5f6020820190508181035f83015261245281612419565b9050919050565b5f60408201905061246c5f830185611cde565b6124796020830184611cde565b9392505050565b5f8151905061248e81611c18565b92915050565b5f602082840312156124a9576124a8611bb1565b5b5f6124b684828501612480565b91505092915050565b5f6060820190506124d25f830186611db5565b6124df6020830185611cde565b6124ec6040830184611cde565b949350505050565b5f6124fe82611c0f565b915061250983611c0f565b92508282019050808211156125215761252061205b565b5b9291505056fea2646970667358221220b79addcd1478486bc33ee821e7cf5d82098f0ea851e81f0e09658b23b6ff3ed364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E436BF GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBB285554 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF0F44260 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xF203787C EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x4F1 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xBB285554 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x40B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x85E436BF EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x8E0B017D EQ PUSH2 0x385 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x61D027B3 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x341 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x5D91E3F8 EQ PUSH2 0x2B9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF7E730B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1481794E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36F PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44D PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BF PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5A9 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 DUP2 DUP6 DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x656 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B DUP3 PUSH1 0x40 MLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x796 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x7A3 DUP6 DUP3 DUP6 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x7AE DUP6 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP3 GT PUSH2 0x8D5 JUMPI PUSH0 PUSH2 0x8E2 JUMP JUMPDEST DUP5 DUP3 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x910 CALLER PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH2 0x146E JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x96C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x146E JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP3 SWAP2 SWAP1 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xB74 PUSH0 PUSH2 0x15DD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH31 0xEDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB DUP2 PUSH1 0x40 MLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD19 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD45 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA2 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xDBF DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x16A0 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE1B PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0xE28 DUP2 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE91 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF85 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBA PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x146E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1002 SWAP3 SWAP2 SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108B PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10B5 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10BE ADDRESS PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x115F PUSH2 0x783 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12B9 PUSH2 0x1354 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x15DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x134F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x171F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x135C PUSH2 0x133B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137A PUSH2 0xC4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13D9 JUMPI PUSH2 0x139D PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x13E6 DUP5 DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1450 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1467 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x171F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1559 DUP4 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 PUSH0 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1710 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171B DUP3 PUSH0 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x18E8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18DF SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x193E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A0C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19C7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A9D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B3E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B23 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1B6D DUP2 DUP6 PUSH2 0x1B11 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B7D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B86 DUP2 PUSH2 0x1B49 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA9 DUP2 DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C09 DUP2 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C21 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3C DUP2 PUSH2 0x1C18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C65 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C76 DUP6 DUP3 DUP7 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C94 DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAD PUSH0 DUP4 ADD DUP5 PUSH2 0x1C8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC7 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE7 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D00 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D1D JUMPI PUSH2 0x1D1C PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2A DUP7 DUP3 DUP8 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D3B DUP7 DUP3 DUP8 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D4C DUP7 DUP3 DUP8 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6B DUP2 PUSH2 0x1D56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D84 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D9F JUMPI PUSH2 0x1D9E PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAC DUP5 DUP3 DUP6 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E00 PUSH2 0x1DFB PUSH2 0x1DF6 DUP5 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1DDD JUMP JUMPDEST PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E11 DUP3 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E22 DUP3 PUSH2 0x1E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 DUP2 PUSH2 0x1E18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E4B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1E65 PUSH0 DUP4 ADD DUP13 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1E72 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1E7F PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1E8C PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1EA6 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1EB3 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1EC0 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1ECE PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EFF DUP6 DUP3 DUP7 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F10 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F71 JUMPI PUSH2 0x1F70 PUSH2 0x1F1A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F8A PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x1F97 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FA7 DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC2 DUP2 PUSH2 0x1F9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FEA DUP5 DUP3 DUP6 ADD PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2027 PUSH1 0xF DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2032 DUP3 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2054 DUP2 PUSH2 0x201B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2092 DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x209D DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20AB DUP2 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x205B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20FD PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2108 DUP3 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x212A DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2168 DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2173 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2183 JUMPI PUSH2 0x2182 PUSH2 0x2131 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2198 DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x21A3 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21BB JUMPI PUSH2 0x21BA PUSH2 0x205B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534454207061796F7574206661696C65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F5 PUSH1 0x12 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP3 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2222 DUP2 PUSH2 0x21E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP7 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x2249 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x2256 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203E3D2031205354454D000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2292 PUSH1 0x1A DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x229D DUP3 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22BF DUP2 PUSH2 0x2286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203C3D2053656C6C2072617465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22FA PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2305 DUP3 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2327 DUP2 PUSH2 0x22EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C2072617465206D75737420626520E289A52031205354454D20706572 PUSH0 DUP3 ADD MSTORE PUSH32 0x2055534454000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2388 PUSH1 0x25 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2393 DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B5 DUP2 PUSH2 0x237C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23CF PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x23DC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x23E9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2425 PUSH1 0x14 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2430 DUP3 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2452 DUP2 PUSH2 0x2419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x246C PUSH0 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x2479 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x248E DUP2 PUSH2 0x1C18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A9 JUMPI PUSH2 0x24A8 PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B6 DUP5 DUP3 DUP6 ADD PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24D2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x24DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x24EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24FE DUP3 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2509 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x205B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SWAP11 0xDD 0xCD EQ PUSH25 0x486BC33EE821E7CF5D82098F0EA851E81F0E09658B23B6FF3E 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "24917:4990:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12660:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14879:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29006:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28577:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13730:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15657:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13588:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27634:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26636:963;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25130:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25057:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13885:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24045:101;;;:::i;:::-;;27992:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23390:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28325:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12862:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27804:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14196:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24961:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26215:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29199:706;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;14432:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28819:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25159:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24295:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24991:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12660:89;12705:13;12737:5;12730:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12660:89;:::o;14879:186::-;14952:4;14968:13;14984:12;:10;:12::i;:::-;14968:28;;15006:31;15015:5;15022:7;15031:5;15006:8;:31::i;:::-;15054:4;15047:11;;;14879:186;;;;:::o;29006:155::-;23283:13;:11;:13::i;:::-;29098:9:::1;29081:14;;:26;;;;;;;;;;;;;;;;;;29144:9;29122:32;;;;;;;;;;;;29006:155:::0;:::o;28577:184::-;23283:13;:11;:13::i;:::-;28664:9:::1;;;;;;;;;;;:18;;;28683:2;28687:6;28664:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28656:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;28743:2;28729:25;;;28747:6;28729:25;;;;;;:::i;:::-;;;;;;;;28577:184:::0;;:::o;13730:97::-;13782:7;13808:12;;13801:19;;13730:97;:::o;15657:244::-;15744:4;15760:15;15778:12;:10;:12::i;:::-;15760:30;;15800:37;15816:4;15822:7;15831:5;15800:15;:37::i;:::-;15847:26;15857:4;15863:2;15867:5;15847:9;:26::i;:::-;15890:4;15883:11;;;15657:244;;;;;:::o;13588:82::-;13637:5;13661:2;13654:9;;13588:82;:::o;27634:135::-;23283:13;:11;:13::i;:::-;27705:24:::1;27711:2;27724:4;27715:6;:13;;;;:::i;:::-;27705:5;:24::i;:::-;27751:2;27744:18;;;27755:6;27744:18;;;;;;:::i;:::-;;;;;;;;27634:135:::0;;:::o;26636:963::-;26714:1;26701:10;:14;26693:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;26811:18;26854:8;;26846:4;26833:10;:17;;;;:::i;:::-;26832:30;;;;:::i;:::-;26811:51;;26969:22;27007:4;26994:10;:17;;;;:::i;:::-;26969:42;;27021:21;27062:8;;27045:14;:25;;;;:::i;:::-;27021:49;;27080:19;27118:10;27102:13;:26;:59;;27160:1;27102:59;;;27147:10;27131:13;:26;;;;:::i;:::-;27102:59;27080:81;;27258:43;27268:10;27280:8;;;;;;;;;;;27290:10;27258:9;:43::i;:::-;27329:1;27315:11;:15;:47;;;;;27360:1;27334:28;;:14;;;;;;;;;;;:28;;;;27315:47;27311:126;;;27378:48;27388:8;;;;;;;;;;;27398:14;;;;;;;;;;;27414:11;27378:9;:48::i;:::-;27311:126;27455:9;;;;;;;;;;;:18;;;27474:10;27486;27455:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27447:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;27544:10;27535:57;;;27556:10;27568;27580:11;27535:57;;;;;;;;:::i;:::-;;;;;;;;26683:916;;;;26636:963;:::o;25130:23::-;;;;;;;;;;;;;:::o;25057:30::-;;;;:::o;13885:116::-;13950:7;13976:9;:18;13986:7;13976:18;;;;;;;;;;;;;;;;13969:25;;13885:116;;;:::o;24045:101::-;23283:13;:11;:13::i;:::-;24109:30:::1;24136:1;24109:18;:30::i;:::-;24045:101::o:0;27992:263::-;23283:13;:11;:13::i;:::-;28077:4:::1;28066:7;:15;;28058:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;28141:8;;28130:7;:19;;28122:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;28203:7;28193;:17;;;;28225:23;28240:7;28225:23;;;;;;:::i;:::-;;;;;;;;27992:263:::0;:::o;23390:85::-;23436:7;23462:6;;;;;;;;;;;23455:13;;23390:85;:::o;28325:213::-;23283:13;:11;:13::i;:::-;28411:4:::1;28400:7;:15;;28392:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;28485:7;28474:8;:18;;;;28507:24;28523:7;28507:24;;;;;;:::i;:::-;;;;;;;;28325:213:::0;:::o;12862:93::-;12909:13;12941:7;12934:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12862:93;:::o;27804:141::-;23283:13;:11;:13::i;:::-;27877:26:::1;27883:4;27898;27889:6;:13;;;;:::i;:::-;27877:5;:26::i;:::-;27925:4;27918:20;;;27931:6;27918:20;;;;;;:::i;:::-;;;;;;;;27804:141:::0;;:::o;14196:178::-;14265:4;14281:13;14297:12;:10;:12::i;:::-;14281:28;;14319:27;14329:5;14336:2;14340:5;14319:9;:27::i;:::-;14363:4;14356:11;;;14196:178;;;;:::o;24961:23::-;;;;;;;;;;;;;:::o;26215:384::-;26292:1;26279:10;:14;26271:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;26338:18;26372:4;26359:10;:17;;;;:::i;:::-;26338:38;;26394:9;;;;;;;;;;;:22;;;26417:10;26437:4;26444:10;26394:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26386:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;26491:43;26501:8;;;;;;;;;;;26511:10;26523;26491:9;:43::i;:::-;26557:10;26549:43;;;26569:10;26581;26549:43;;;;;;;:::i;:::-;;;;;;;;26261:338;26215:384;:::o;29199:706::-;29252:16;29278:17;29305;29332:23;29365:27;29402:25;29437:27;29474;29511:23;29584:7;;29609:8;;29635;;;;;;;;;;;29661:14;;;;;;;;;;;29693:19;29703:8;;;;;;;;;;;29693:9;:19::i;:::-;29730:25;29740:14;;;;;;;;;;;29730:9;:25::i;:::-;29773:24;29791:4;29773:9;:24::i;:::-;29815:9;;;;;;;;;;;:19;;;29843:4;29815:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29867:13;:11;:13::i;:::-;29559:335;;;;;;;;;;;;;;;;;;29199:706;;;;;;;;;:::o;14432:140::-;14512:7;14538:11;:18;14550:5;14538:18;;;;;;;;;;;;;;;:27;14557:7;14538:27;;;;;;;;;;;;;;;;14531:34;;14432:140;;;;:::o;28819:137::-;23283:13;:11;:13::i;:::-;28899:9:::1;28888:8;;:20;;;;;;;;;;;;;;;;;;28939:9;28923:26;;;;;;;;;;;;28819:137:::0;:::o;25159:29::-;;;;;;;;;;;;;:::o;24295:215::-;23283:13;:11;:13::i;:::-;24399:1:::1;24379:22;;:8;:22;;::::0;24375:91:::1;;24452:1;24424:31;;;;;;;;;;;:::i;:::-;;;;;;;;24375:91;24475:28;24494:8;24475:18;:28::i;:::-;24295:215:::0;:::o;24991:29::-;;;;:::o;4208:96::-;4261:7;4287:10;4280:17;;4208:96;:::o;19607:128::-;19691:37;19700:5;19707:7;19716:5;19723:4;19691:8;:37::i;:::-;19607:128;;;:::o;23548:162::-;23618:12;:10;:12::i;:::-;23607:23;;:7;:5;:7::i;:::-;:23;;;23603:101;;23680:12;:10;:12::i;:::-;23653:40;;;;;;;;;;;:::i;:::-;;;;;;;;23603:101;23548:162::o;21296:476::-;21395:24;21422:25;21432:5;21439:7;21422:9;:25::i;:::-;21395:52;;21480:17;21461:16;:36;21457:309;;;21536:5;21517:16;:24;21513:130;;;21595:7;21604:16;21622:5;21568:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21513:130;21684:57;21693:5;21700:7;21728:5;21709:16;:24;21735:5;21684:8;:57::i;:::-;21457:309;21385:387;21296:476;;;:::o;16274:300::-;16373:1;16357:18;;:4;:18;;;16353:86;;16425:1;16398:30;;;;;;;;;;;:::i;:::-;;;;;;;;16353:86;16466:1;16452:16;;:2;:16;;;16448:86;;16520:1;16491:32;;;;;;;;;;;:::i;:::-;;;;;;;;16448:86;16543:24;16551:4;16557:2;16561:5;16543:7;:24::i;:::-;16274:300;;;:::o;18339:208::-;18428:1;18409:21;;:7;:21;;;18405:91;;18482:1;18453:32;;;;;;;;;;;:::i;:::-;;;;;;;;18405:91;18505:35;18521:1;18525:7;18534:5;18505:7;:35::i;:::-;18339:208;;:::o;24664:187::-;24737:16;24756:6;;;;;;;;;;;24737:25;;24781:8;24772:6;;:17;;;;;;;;;;;;;;;;;;24835:8;24804:40;;24825:8;24804:40;;;;;;;;;;;;24727:124;24664:187;:::o;18865:206::-;18954:1;18935:21;;:7;:21;;;18931:89;;19006:1;18979:30;;;;;;;;;;;:::i;:::-;;;;;;;;18931:89;19029:35;19037:7;19054:1;19058:5;19029:7;:35::i;:::-;18865:206;;:::o;20582:432::-;20711:1;20694:19;;:5;:19;;;20690:89;;20765:1;20736:32;;;;;;;;;;;:::i;:::-;;;;;;;;20690:89;20811:1;20792:21;;:7;:21;;;20788:90;;20864:1;20836:31;;;;;;;;;;;:::i;:::-;;;;;;;;20788:90;20917:5;20887:11;:18;20899:5;20887:18;;;;;;;;;;;;;;;:27;20906:7;20887:27;;;;;;;;;;;;;;;:35;;;;20936:9;20932:76;;;20982:7;20966:31;;20975:5;20966:31;;;20991:5;20966:31;;;;;;:::i;:::-;;;;;;;;20932:76;20582:432;;;;:::o;16889:1107::-;16994:1;16978:18;;:4;:18;;;16974:540;;17130:5;17114:12;;:21;;;;;;;:::i;:::-;;;;;;;;16974:540;;;17166:19;17188:9;:15;17198:4;17188:15;;;;;;;;;;;;;;;;17166:37;;17235:5;17221:11;:19;17217:115;;;17292:4;17298:11;17311:5;17267:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17217:115;17484:5;17470:11;:19;17452:9;:15;17462:4;17452:15;;;;;;;;;;;;;;;:37;;;;17152:362;16974:540;17542:1;17528:16;;:2;:16;;;17524:425;;17707:5;17691:12;;:21;;;;;;;;;;;17524:425;;;17919:5;17902:9;:13;17912:2;17902:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17524:425;17979:2;17964:25;;17973:4;17964:25;;;17983:5;17964:25;;;;;;:::i;:::-;;;;;;;;16889:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:329::-;3505:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:119;;;3560:79;;:::i;:::-;3522:119;3680:1;3705:53;3750:7;3741:6;3730:9;3726:22;3705:53;:::i;:::-;3695:63;;3651:117;3446:329;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:222::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;3905:222;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:329::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:60::-;5903:3;5924:5;5917:12;;5875:60;;;:::o;5941:142::-;5991:9;6024:53;6042:34;6051:24;6069:5;6051:24;:::i;:::-;6042:34;:::i;:::-;6024:53;:::i;:::-;6011:66;;5941:142;;;:::o;6089:126::-;6139:9;6172:37;6203:5;6172:37;:::i;:::-;6159:50;;6089:126;;;:::o;6221:139::-;6284:9;6317:37;6348:5;6317:37;:::i;:::-;6304:50;;6221:139;;;:::o;6366:157::-;6466:50;6510:5;6466:50;:::i;:::-;6461:3;6454:63;6366:157;;:::o;6529:248::-;6635:4;6673:2;6662:9;6658:18;6650:26;;6686:84;6767:1;6756:9;6752:17;6743:6;6686:84;:::i;:::-;6529:248;;;;:::o;6783:1108::-;7100:4;7138:3;7127:9;7123:19;7115:27;;7152:71;7220:1;7209:9;7205:17;7196:6;7152:71;:::i;:::-;7233:72;7301:2;7290:9;7286:18;7277:6;7233:72;:::i;:::-;7315;7383:2;7372:9;7368:18;7359:6;7315:72;:::i;:::-;7397;7465:2;7454:9;7450:18;7441:6;7397:72;:::i;:::-;7479:73;7547:3;7536:9;7532:19;7523:6;7479:73;:::i;:::-;7562;7630:3;7619:9;7615:19;7606:6;7562:73;:::i;:::-;7645;7713:3;7702:9;7698:19;7689:6;7645:73;:::i;:::-;7728;7796:3;7785:9;7781:19;7772:6;7728:73;:::i;:::-;7811;7879:3;7868:9;7864:19;7855:6;7811:73;:::i;:::-;6783:1108;;;;;;;;;;;;:::o;7897:474::-;7965:6;7973;8022:2;8010:9;8001:7;7997:23;7993:32;7990:119;;;8028:79;;:::i;:::-;7990:119;8148:1;8173:53;8218:7;8209:6;8198:9;8194:22;8173:53;:::i;:::-;8163:63;;8119:117;8275:2;8301:53;8346:7;8337:6;8326:9;8322:22;8301:53;:::i;:::-;8291:63;;8246:118;7897:474;;;;;:::o;8377:180::-;8425:77;8422:1;8415:88;8522:4;8519:1;8512:15;8546:4;8543:1;8536:15;8563:320;8607:6;8644:1;8638:4;8634:12;8624:22;;8691:1;8685:4;8681:12;8712:18;8702:81;;8768:4;8760:6;8756:17;8746:27;;8702:81;8830:2;8822:6;8819:14;8799:18;8796:38;8793:84;;8849:18;;:::i;:::-;8793:84;8614:269;8563:320;;;:::o;8889:332::-;9010:4;9048:2;9037:9;9033:18;9025:26;;9061:71;9129:1;9118:9;9114:17;9105:6;9061:71;:::i;:::-;9142:72;9210:2;9199:9;9195:18;9186:6;9142:72;:::i;:::-;8889:332;;;;;:::o;9227:116::-;9297:21;9312:5;9297:21;:::i;:::-;9290:5;9287:32;9277:60;;9333:1;9330;9323:12;9277:60;9227:116;:::o;9349:137::-;9403:5;9434:6;9428:13;9419:22;;9450:30;9474:5;9450:30;:::i;:::-;9349:137;;;;:::o;9492:345::-;9559:6;9608:2;9596:9;9587:7;9583:23;9579:32;9576:119;;;9614:79;;:::i;:::-;9576:119;9734:1;9759:61;9812:7;9803:6;9792:9;9788:22;9759:61;:::i;:::-;9749:71;;9705:125;9492:345;;;;:::o;9843:165::-;9983:17;9979:1;9971:6;9967:14;9960:41;9843:165;:::o;10014:366::-;10156:3;10177:67;10241:2;10236:3;10177:67;:::i;:::-;10170:74;;10253:93;10342:3;10253:93;:::i;:::-;10371:2;10366:3;10362:12;10355:19;;10014:366;;;:::o;10386:419::-;10552:4;10590:2;10579:9;10575:18;10567:26;;10639:9;10633:4;10629:20;10625:1;10614:9;10610:17;10603:47;10667:131;10793:4;10667:131;:::i;:::-;10659:139;;10386:419;;;:::o;10811:180::-;10859:77;10856:1;10849:88;10956:4;10953:1;10946:15;10980:4;10977:1;10970:15;10997:410;11037:7;11060:20;11078:1;11060:20;:::i;:::-;11055:25;;11094:20;11112:1;11094:20;:::i;:::-;11089:25;;11149:1;11146;11142:9;11171:30;11189:11;11171:30;:::i;:::-;11160:41;;11350:1;11341:7;11337:15;11334:1;11331:22;11311:1;11304:9;11284:83;11261:139;;11380:18;;:::i;:::-;11261:139;11045:362;10997:410;;;;:::o;11413:179::-;11553:31;11549:1;11541:6;11537:14;11530:55;11413:179;:::o;11598:366::-;11740:3;11761:67;11825:2;11820:3;11761:67;:::i;:::-;11754:74;;11837:93;11926:3;11837:93;:::i;:::-;11955:2;11950:3;11946:12;11939:19;;11598:366;;;:::o;11970:419::-;12136:4;12174:2;12163:9;12159:18;12151:26;;12223:9;12217:4;12213:20;12209:1;12198:9;12194:17;12187:47;12251:131;12377:4;12251:131;:::i;:::-;12243:139;;11970:419;;;:::o;12395:180::-;12443:77;12440:1;12433:88;12540:4;12537:1;12530:15;12564:4;12561:1;12554:15;12581:185;12621:1;12638:20;12656:1;12638:20;:::i;:::-;12633:25;;12672:20;12690:1;12672:20;:::i;:::-;12667:25;;12711:1;12701:35;;12716:18;;:::i;:::-;12701:35;12758:1;12755;12751:9;12746:14;;12581:185;;;;:::o;12772:194::-;12812:4;12832:20;12850:1;12832:20;:::i;:::-;12827:25;;12866:20;12884:1;12866:20;:::i;:::-;12861:25;;12910:1;12907;12903:9;12895:17;;12934:1;12928:4;12925:11;12922:37;;;12939:18;;:::i;:::-;12922:37;12772:194;;;;:::o;12972:168::-;13112:20;13108:1;13100:6;13096:14;13089:44;12972:168;:::o;13146:366::-;13288:3;13309:67;13373:2;13368:3;13309:67;:::i;:::-;13302:74;;13385:93;13474:3;13385:93;:::i;:::-;13503:2;13498:3;13494:12;13487:19;;13146:366;;;:::o;13518:419::-;13684:4;13722:2;13711:9;13707:18;13699:26;;13771:9;13765:4;13761:20;13757:1;13746:9;13742:17;13735:47;13799:131;13925:4;13799:131;:::i;:::-;13791:139;;13518:419;;;:::o;13943:442::-;14092:4;14130:2;14119:9;14115:18;14107:26;;14143:71;14211:1;14200:9;14196:17;14187:6;14143:71;:::i;:::-;14224:72;14292:2;14281:9;14277:18;14268:6;14224:72;:::i;:::-;14306;14374:2;14363:9;14359:18;14350:6;14306:72;:::i;:::-;13943:442;;;;;;:::o;14391:176::-;14531:28;14527:1;14519:6;14515:14;14508:52;14391:176;:::o;14573:366::-;14715:3;14736:67;14800:2;14795:3;14736:67;:::i;:::-;14729:74;;14812:93;14901:3;14812:93;:::i;:::-;14930:2;14925:3;14921:12;14914:19;;14573:366;;;:::o;14945:419::-;15111:4;15149:2;15138:9;15134:18;15126:26;;15198:9;15192:4;15188:20;15184:1;15173:9;15169:17;15162:47;15226:131;15352:4;15226:131;:::i;:::-;15218:139;;14945:419;;;:::o;15370:179::-;15510:31;15506:1;15498:6;15494:14;15487:55;15370:179;:::o;15555:366::-;15697:3;15718:67;15782:2;15777:3;15718:67;:::i;:::-;15711:74;;15794:93;15883:3;15794:93;:::i;:::-;15912:2;15907:3;15903:12;15896:19;;15555:366;;;:::o;15927:419::-;16093:4;16131:2;16120:9;16116:18;16108:26;;16180:9;16174:4;16170:20;16166:1;16155:9;16151:17;16144:47;16208:131;16334:4;16208:131;:::i;:::-;16200:139;;15927:419;;;:::o;16352:256::-;16492:66;16488:1;16480:6;16476:14;16469:90;16593:7;16588:2;16580:6;16576:15;16569:32;16352:256;:::o;16614:366::-;16756:3;16777:67;16841:2;16836:3;16777:67;:::i;:::-;16770:74;;16853:93;16942:3;16853:93;:::i;:::-;16971:2;16966:3;16962:12;16955:19;;16614:366;;;:::o;16986:419::-;17152:4;17190:2;17179:9;17175:18;17167:26;;17239:9;17233:4;17229:20;17225:1;17214:9;17210:17;17203:47;17267:131;17393:4;17267:131;:::i;:::-;17259:139;;16986:419;;;:::o;17411:442::-;17560:4;17598:2;17587:9;17583:18;17575:26;;17611:71;17679:1;17668:9;17664:17;17655:6;17611:71;:::i;:::-;17692:72;17760:2;17749:9;17745:18;17736:6;17692:72;:::i;:::-;17774;17842:2;17831:9;17827:18;17818:6;17774:72;:::i;:::-;17411:442;;;;;;:::o;17859:170::-;17999:22;17995:1;17987:6;17983:14;17976:46;17859:170;:::o;18035:366::-;18177:3;18198:67;18262:2;18257:3;18198:67;:::i;:::-;18191:74;;18274:93;18363:3;18274:93;:::i;:::-;18392:2;18387:3;18383:12;18376:19;;18035:366;;;:::o;18407:419::-;18573:4;18611:2;18600:9;18596:18;18588:26;;18660:9;18654:4;18650:20;18646:1;18635:9;18631:17;18624:47;18688:131;18814:4;18688:131;:::i;:::-;18680:139;;18407:419;;;:::o;18832:332::-;18953:4;18991:2;18980:9;18976:18;18968:26;;19004:71;19072:1;19061:9;19057:17;19048:6;19004:71;:::i;:::-;19085:72;19153:2;19142:9;19138:18;19129:6;19085:72;:::i;:::-;18832:332;;;;;:::o;19170:143::-;19227:5;19258:6;19252:13;19243:22;;19274:33;19301:5;19274:33;:::i;:::-;19170:143;;;;:::o;19319:351::-;19389:6;19438:2;19426:9;19417:7;19413:23;19409:32;19406:119;;;19444:79;;:::i;:::-;19406:119;19564:1;19589:64;19645:7;19636:6;19625:9;19621:22;19589:64;:::i;:::-;19579:74;;19535:128;19319:351;;;;:::o;19676:442::-;19825:4;19863:2;19852:9;19848:18;19840:26;;19876:71;19944:1;19933:9;19929:17;19920:6;19876:71;:::i;:::-;19957:72;20025:2;20014:9;20010:18;20001:6;19957:72;:::i;:::-;20039;20107:2;20096:9;20092:18;20083:6;20039:72;:::i;:::-;19676:442;;;;;;:::o;20124:191::-;20164:3;20183:20;20201:1;20183:20;:::i;:::-;20178:25;;20217:20;20235:1;20217:20;:::i;:::-;20212:25;;20260:1;20257;20253:9;20246:16;;20281:3;20278:1;20275:10;20272:36;;;20288:18;;:::i;:::-;20272:36;20124:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1913000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(address,uint256)": "infinite",
								"buyRate()": "2535",
								"buyStem(uint256)": "infinite",
								"decimals()": "384",
								"getConfig()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2583",
								"profitTreasury()": "2574",
								"renounceOwnership()": "infinite",
								"sellRate()": "2492",
								"sellStem(uint256)": "infinite",
								"setBuyRate(uint256)": "infinite",
								"setProfitTreasury(address)": "infinite",
								"setSellRate(uint256)": "infinite",
								"setTreasury(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2553",
								"usdtToken()": "infinite",
								"withdrawUSDT(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25020,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 24991,
									"end": 25020,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24991,
									"end": 25020,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25083,
									"end": 25087,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 25057,
									"end": 25087,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25057,
									"end": 25087,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25791,
									"end": 26153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25968,
									"end": 25978,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "5354454D4D455200000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "PUSH",
									"source": 0,
									"value": "5354454D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12556,
									"end": 12561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12553,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12548,
									"end": 12561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12548,
									"end": 12561,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12581,
									"end": 12588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12578,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12571,
									"end": 12588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12482,
									"end": 12595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23049,
									"end": 23050,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23025,
									"end": 23051,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23025,
									"end": 23051,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23025,
									"end": 23037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23025,
									"end": 23051,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23025,
									"end": 23051,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23025,
									"end": 23051,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23021,
									"end": 23116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23021,
									"end": 23116,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23102,
									"end": 23103,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23074,
									"end": 23105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23074,
									"end": 23105,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23021,
									"end": 23116,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23021,
									"end": 23116,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23125,
									"end": 23157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23144,
									"end": 23156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23125,
									"end": 23143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23125,
									"end": 23143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23125,
									"end": 23143,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23125,
									"end": 23157,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23125,
									"end": 23157,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23125,
									"end": 23157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23125,
									"end": 23157,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23125,
									"end": 23157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22977,
									"end": 23164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26009,
									"end": 26026,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 25999,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25990,
									"end": 25999,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25990,
									"end": 26027,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26048,
									"end": 26057,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26045,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 26037,
									"end": 26045,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26037,
									"end": 26057,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26084,
									"end": 26099,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26081,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 26067,
									"end": 26081,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26067,
									"end": 26099,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26109,
									"end": 26146,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26115,
									"end": 26123,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26141,
									"end": 26145,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 26125,
									"end": 26138,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26125,
									"end": 26145,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26125,
									"end": 26145,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26125,
									"end": 26145,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26125,
									"end": 26145,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26125,
									"end": 26145,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26125,
									"end": 26145,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26125,
									"end": 26145,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26109,
									"end": 26114,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26109,
									"end": 26114,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26109,
									"end": 26114,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26109,
									"end": 26146,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26109,
									"end": 26146,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 26109,
									"end": 26146,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26109,
									"end": 26146,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26109,
									"end": 26146,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 26153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24664,
									"end": 24851,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24664,
									"end": 24851,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24737,
									"end": 24753,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24756,
									"end": 24762,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24737,
									"end": 24762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24737,
									"end": 24762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24781,
									"end": 24789,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24778,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24772,
									"end": 24778,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24772,
									"end": 24789,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24835,
									"end": 24843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24825,
									"end": 24833,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24844,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24727,
									"end": 24851,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24664,
									"end": 24851,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24664,
									"end": 24851,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18339,
									"end": 18547,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18339,
									"end": 18547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18428,
									"end": 18429,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18409,
									"end": 18430,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18409,
									"end": 18430,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18409,
									"end": 18416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18409,
									"end": 18430,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18409,
									"end": 18430,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18409,
									"end": 18430,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18405,
									"end": 18496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18405,
									"end": 18496,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18482,
									"end": 18483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18453,
									"end": 18485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18485,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18405,
									"end": 18496,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18405,
									"end": 18496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18505,
									"end": 18540,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18521,
									"end": 18522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18525,
									"end": 18532,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18534,
									"end": 18539,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18505,
									"end": 18512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18505,
									"end": 18512,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18505,
									"end": 18512,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18505,
									"end": 18540,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18505,
									"end": 18540,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18505,
									"end": 18540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18505,
									"end": 18540,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18505,
									"end": 18540,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18339,
									"end": 18547,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18339,
									"end": 18547,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18339,
									"end": 18547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16889,
									"end": 17996,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16889,
									"end": 17996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 16995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16978,
									"end": 16996,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16978,
									"end": 16996,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16978,
									"end": 16982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16978,
									"end": 16996,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16978,
									"end": 16996,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16978,
									"end": 16996,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17130,
									"end": 17135,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17126,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17114,
									"end": 17126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17114,
									"end": 17135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17166,
									"end": 17185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17188,
									"end": 17197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17198,
									"end": 17202,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17188,
									"end": 17203,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17166,
									"end": 17203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17166,
									"end": 17203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17235,
									"end": 17240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17221,
									"end": 17232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17221,
									"end": 17240,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17332,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17217,
									"end": 17332,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17292,
									"end": 17296,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17298,
									"end": 17309,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17311,
									"end": 17316,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17267,
									"end": 17317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17317,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17332,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17217,
									"end": 17332,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17484,
									"end": 17489,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17470,
									"end": 17481,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17470,
									"end": 17489,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17466,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17452,
									"end": 17467,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17489,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17489,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17452,
									"end": 17489,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17152,
									"end": 17514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16974,
									"end": 17514,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17542,
									"end": 17543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17528,
									"end": 17544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17528,
									"end": 17544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17528,
									"end": 17530,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17528,
									"end": 17544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17528,
									"end": 17544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17528,
									"end": 17544,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17707,
									"end": 17712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17703,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17691,
									"end": 17703,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17691,
									"end": 17712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17919,
									"end": 17924,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17912,
									"end": 17914,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17915,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17902,
									"end": 17924,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17524,
									"end": 17949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 17981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17973,
									"end": 17977,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17983,
									"end": 17988,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17964,
									"end": 17989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17989,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16889,
									"end": 17996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16889,
									"end": 17996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16889,
									"end": 17996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16889,
									"end": 17996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2117,
									"end": 2122,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2123,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2123,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2136,
									"end": 2316,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2136,
									"end": 2316,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2184,
									"end": 2261,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2181,
									"end": 2182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2174,
									"end": 2262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2278,
									"end": 2279,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2271,
									"end": 2286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2309,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2302,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2295,
									"end": 2310,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2502,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2322,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2370,
									"end": 2447,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2367,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2360,
									"end": 2448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2471,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2464,
									"end": 2465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2457,
									"end": 2472,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2491,
									"end": 2495,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2488,
									"end": 2489,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2481,
									"end": 2496,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2590,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2583,
									"end": 2587,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2591,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2591,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2637,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2630,
									"end": 2634,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2638,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2657,
									"end": 2675,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2713,
									"end": 2717,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2718,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2691,
									"end": 2718,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2691,
									"end": 2718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2775,
									"end": 2777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 2773,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2764,
									"end": 2778,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2744,
									"end": 2762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2741,
									"end": 2779,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2794,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2559,
									"end": 2828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2887,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2898,
									"end": 2909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2898,
									"end": 2909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2932,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2926,
									"end": 2927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2919,
									"end": 2933,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2963,
									"end": 2967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2960,
									"end": 2961,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2950,
									"end": 2968,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 2968,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 2968,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3065,
									"end": 3067,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3060,
									"end": 3062,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3053,
									"end": 3058,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3045,
									"end": 3068,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3124,
									"end": 3132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3174,
									"end": 3179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3168,
									"end": 3172,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3164,
									"end": 3180,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3262,
									"end": 3268,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3312,
									"end": 3313,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3300,
									"end": 3310,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3314,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3365,
									"end": 3431,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3354,
									"end": 3363,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3335,
									"end": 3432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3483,
									"end": 3491,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3453,
									"end": 3492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3441,
									"end": 3492,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 3441,
									"end": 3492,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3525,
									"end": 3529,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3521,
									"end": 3530,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3514,
									"end": 3519,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3510,
									"end": 3531,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3501,
									"end": 3531,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3501,
									"end": 3531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3574,
									"end": 3578,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3564,
									"end": 3572,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3550,
									"end": 3580,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3580,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3580,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3269,
									"end": 3586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3269,
									"end": 3586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3620,
									"end": 3623,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3641,
									"end": 3646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3634,
									"end": 3646,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3634,
									"end": 3646,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3652,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3786,
									"end": 3791,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3768,
									"end": 3792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3759,
									"end": 3793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3741,
									"end": 3794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3728,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3728,
									"end": 3794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3800,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3849,
									"end": 3852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3870,
									"end": 3875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3863,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3863,
									"end": 3875,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4028,
									"end": 4035,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3997,
									"end": 4036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4131,
									"end": 4147,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4107,
									"end": 4148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4099,
									"end": 4105,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4092,
									"end": 4096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4086,
									"end": 4097,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 4058,
									"end": 4149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4056,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4150,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3963,
									"end": 4156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 4156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4235,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 4162,
									"end": 4235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4207,
									"end": 4210,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 4318,
									"end": 4350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4417,
									"end": 4423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4409,
									"end": 4415,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4403,
									"end": 4407,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 4359,
									"end": 4424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4294,
									"end": 4430,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4241,
									"end": 4430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4513,
									"end": 4516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4506,
									"end": 4511,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4503,
									"end": 4517,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4604,
									"end": 4605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4597,
									"end": 4602,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4567,
									"end": 4606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4540,
									"end": 4541,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4533,
									"end": 4538,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4542,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4520,
									"end": 4542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4520,
									"end": 4542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4436,
									"end": 4622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4729,
									"end": 4731,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4724,
									"end": 4727,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4721,
									"end": 4732,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4795,
									"end": 4800,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 4763,
									"end": 4801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4865,
									"end": 4875,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 4847,
									"end": 4876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4833,
									"end": 4877,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5030,
									"end": 5032,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5018,
									"end": 5028,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5051,
									"end": 5059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5036,
									"end": 5059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5036,
									"end": 5059,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 5148,
									"end": 5151,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5130,
									"end": 5152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 5128,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5116,
									"end": 5153,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5103,
									"end": 5114,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 5074,
									"end": 5154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4733,
									"end": 5164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4733,
									"end": 5164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4628,
									"end": 5171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5231,
									"end": 5239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5275,
									"end": 5279,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5287,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5250,
									"end": 5287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5250,
									"end": 5287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5344,
									"end": 5350,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5425,
									"end": 5426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5427,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5413,
									"end": 5418,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5410,
									"end": 5411,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5406,
									"end": 5419,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 5377,
									"end": 5428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5373,
									"end": 5429,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5458,
									"end": 5462,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5452,
									"end": 5456,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5448,
									"end": 5463,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5438,
									"end": 5463,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5438,
									"end": 5463,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5351,
									"end": 5469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5554,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5721,
									"end": 5724,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5715,
									"end": 5719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 5696,
									"end": 5725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5688,
									"end": 5725,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5688,
									"end": 5725,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5758,
									"end": 5761,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5755,
									"end": 5756,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5751,
									"end": 5762,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5745,
									"end": 5749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5742,
									"end": 5763,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5734,
									"end": 5763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5734,
									"end": 5763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 5924,
									"end": 5927,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5891,
									"end": 5928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5993,
									"end": 6011,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5985,
									"end": 5991,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5982,
									"end": 6012,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6015,
									"end": 6033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6091,
									"end": 6095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6085,
									"end": 6096,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6059,
									"end": 6097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6196,
									"end": 6202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6190,
									"end": 6194,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 6144,
									"end": 6211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6238,
									"end": 6239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6262,
									"end": 6266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6249,
									"end": 6266,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6266,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6294,
									"end": 6296,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6286,
									"end": 6292,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6297,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6311,
									"end": 6312,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6985,
									"end": 6991,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7034,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7029,
									"end": 7032,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7025,
									"end": 7044,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7019,
									"end": 7045,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7145,
									"end": 7151,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7138,
									"end": 7143,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 7085,
									"end": 7152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7153,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6941,
									"end": 7163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6354,
									"end": 6363,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6352,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6342,
									"end": 6364,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 6424,
									"end": 6428,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6392,
									"end": 6429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6451,
									"end": 6452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6479,
									"end": 6486,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6477,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6473,
									"end": 6487,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6558,
									"end": 6567,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6556,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6549,
									"end": 6568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6543,
									"end": 6569,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6541,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6528,
									"end": 6570,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6609,
									"end": 6610,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6601,
									"end": 6607,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6597,
									"end": 6611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6587,
									"end": 6611,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6587,
									"end": 6611,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6656,
									"end": 6658,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6645,
									"end": 6654,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6659,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6659,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6659,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6502,
									"end": 6506,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6499,
									"end": 6500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6495,
									"end": 6507,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6490,
									"end": 6507,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6490,
									"end": 6507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6701,
									"end": 6707,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6692,
									"end": 6699,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6689,
									"end": 6708,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6759,
									"end": 6768,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6754,
									"end": 6757,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6769,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6744,
									"end": 6770,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6836,
									"end": 6842,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6832,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 6802,
									"end": 6850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6794,
									"end": 6800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6787,
									"end": 6851,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6709,
									"end": 6865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6912,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6907,
									"end": 6908,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6899,
									"end": 6905,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6895,
									"end": 6909,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6891,
									"end": 6913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6885,
									"end": 6889,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6878,
									"end": 6914,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6313,
									"end": 6924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6313,
									"end": 6924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6313,
									"end": 6924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5866,
									"end": 7169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5866,
									"end": 7169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5866,
									"end": 7169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 7169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7280,
									"end": 7285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7262,
									"end": 7286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7257,
									"end": 7260,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7250,
									"end": 7287,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7175,
									"end": 7293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7392,
									"end": 7396,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7430,
									"end": 7432,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7419,
									"end": 7428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7415,
									"end": 7433,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7407,
									"end": 7433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7407,
									"end": 7433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7500,
									"end": 7509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7496,
									"end": 7513,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 7493,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 7443,
									"end": 7514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7299,
									"end": 7521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7707,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 7527,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7575,
									"end": 7652,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7565,
									"end": 7653,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7672,
									"end": 7676,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7669,
									"end": 7670,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7662,
									"end": 7677,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7700,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7693,
									"end": 7694,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7686,
									"end": 7701,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 8123,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7713,
									"end": 8123,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7753,
									"end": 7760,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7776,
									"end": 7796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7776,
									"end": 7796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 7776,
									"end": 7796,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7776,
									"end": 7796,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7776,
									"end": 7796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7771,
									"end": 7796,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7771,
									"end": 7796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7828,
									"end": 7829,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 7810,
									"end": 7830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7830,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7810,
									"end": 7830,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7805,
									"end": 7830,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7805,
									"end": 7830,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7865,
									"end": 7866,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7862,
									"end": 7863,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7858,
									"end": 7867,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7905,
									"end": 7916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 7887,
									"end": 7917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7887,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7876,
									"end": 7917,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7876,
									"end": 7917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8066,
									"end": 8067,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8057,
									"end": 8064,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8053,
									"end": 8068,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8050,
									"end": 8051,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8069,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8027,
									"end": 8028,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8020,
									"end": 8029,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8000,
									"end": 8083,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7977,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 7977,
									"end": 8116,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8096,
									"end": 8114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8096,
									"end": 8114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 8096,
									"end": 8114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8096,
									"end": 8114,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8096,
									"end": 8114,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7977,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 7977,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7761,
									"end": 8123,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 8123,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 8123,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 8123,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 8123,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 8123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8320,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 8129,
									"end": 8320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8169,
									"end": 8172,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8188,
									"end": 8208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8188,
									"end": 8208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 8188,
									"end": 8208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8188,
									"end": 8208,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 8188,
									"end": 8208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8183,
									"end": 8208,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8183,
									"end": 8208,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8222,
									"end": 8242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8222,
									"end": 8242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 8222,
									"end": 8242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8222,
									"end": 8242,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8222,
									"end": 8242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8217,
									"end": 8242,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8217,
									"end": 8242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8265,
									"end": 8266,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8262,
									"end": 8263,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8258,
									"end": 8267,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8251,
									"end": 8267,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8251,
									"end": 8267,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8286,
									"end": 8289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8283,
									"end": 8284,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8280,
									"end": 8290,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8277,
									"end": 8313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8277,
									"end": 8313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8277,
									"end": 8313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8293,
									"end": 8311,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8293,
									"end": 8311,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 8293,
									"end": 8311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8293,
									"end": 8311,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8293,
									"end": 8311,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8277,
									"end": 8313,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8277,
									"end": 8313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8320,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8320,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8326,
									"end": 8444,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 8326,
									"end": 8444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8413,
									"end": 8437,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8431,
									"end": 8436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8413,
									"end": 8437,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 8413,
									"end": 8437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8413,
									"end": 8437,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8413,
									"end": 8437,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8408,
									"end": 8411,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8401,
									"end": 8438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8326,
									"end": 8444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8326,
									"end": 8444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8326,
									"end": 8444,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8599,
									"end": 8603,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8637,
									"end": 8639,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 8626,
									"end": 8635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8622,
									"end": 8640,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8650,
									"end": 8721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8718,
									"end": 8719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8707,
									"end": 8716,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8703,
									"end": 8720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8694,
									"end": 8700,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8650,
									"end": 8721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8650,
									"end": 8721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8650,
									"end": 8721,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8650,
									"end": 8721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8799,
									"end": 8801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8788,
									"end": 8797,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8784,
									"end": 8802,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8775,
									"end": 8781,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 8731,
									"end": 8803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8803,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8731,
									"end": 8803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8813,
									"end": 8885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8881,
									"end": 8883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8870,
									"end": 8879,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8866,
									"end": 8884,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8857,
									"end": 8863,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8813,
									"end": 8885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 8813,
									"end": 8885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8813,
									"end": 8885,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8813,
									"end": 8885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8450,
									"end": 8892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 9120,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8898,
									"end": 9120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9029,
									"end": 9031,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9018,
									"end": 9027,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9014,
									"end": 9032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9006,
									"end": 9032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9006,
									"end": 9032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9042,
									"end": 9113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 9110,
									"end": 9111,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9099,
									"end": 9108,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9095,
									"end": 9112,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9086,
									"end": 9092,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9042,
									"end": 9113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 9042,
									"end": 9113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9042,
									"end": 9113,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 9042,
									"end": 9113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 9120,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 9120,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 9120,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 9120,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 9120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24917,
									"end": 29907,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b79addcd1478486bc33ee821e7cf5d82098f0ea851e81f0e09658b23b6ff3ed364736f6c63430008140033",
									".code": [
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "85E436BF"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "BB285554"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "F0F44260"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "F0F44260"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "F203787C"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "FC37987B"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "BB285554"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "C3F909D4"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "A98AD46C"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "85E436BF"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "8E0B017D"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "6217229B"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "5D91E3F8"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "F7E730B"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "1481794E"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 29907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12660,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12660,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14879,
											"end": 15065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14879,
											"end": 15065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14879,
											"end": 15065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29006,
											"end": 29161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29006,
											"end": 29161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 28577,
											"end": 28761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28577,
											"end": 28761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13730,
											"end": 13827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13730,
											"end": 13827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15657,
											"end": 15901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15657,
											"end": 15901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15657,
											"end": 15901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13588,
											"end": 13670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13588,
											"end": 13670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 27634,
											"end": 27769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 27634,
											"end": 27769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26636,
											"end": 27599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26636,
											"end": 27599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25130,
											"end": 25153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 25130,
											"end": 25153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25057,
											"end": 25087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25057,
											"end": 25087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13885,
											"end": 14001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13885,
											"end": 14001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13885,
											"end": 14001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24045,
											"end": 24146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27992,
											"end": 28255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27992,
											"end": 28255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23390,
											"end": 23475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23390,
											"end": 23475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28325,
											"end": 28538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28325,
											"end": 28538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12862,
											"end": 12955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12862,
											"end": 12955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 27804,
											"end": 27945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27804,
											"end": 27945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14196,
											"end": 14374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14196,
											"end": 14374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14196,
											"end": 14374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24961,
											"end": 24984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24961,
											"end": 24984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26215,
											"end": 26599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 26215,
											"end": 26599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29199,
											"end": 29905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29199,
											"end": 29905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14432,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14432,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14432,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28819,
											"end": 28956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28819,
											"end": 28956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25159,
											"end": 25188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 25159,
											"end": 25188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24295,
											"end": 24510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24295,
											"end": 24510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24991,
											"end": 25020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 24991,
											"end": 25020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12737,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12730,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12730,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14984,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 14984,
											"end": 14996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 14996,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14984,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15015,
											"end": 15020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15031,
											"end": 15036,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15006,
											"end": 15037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15037,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15006,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15054,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15047,
											"end": 15058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15047,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14879,
											"end": 15065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29098,
											"end": 29107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29081,
											"end": 29095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29144,
											"end": 29153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B"
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29122,
											"end": 29154,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29006,
											"end": 29161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28664,
											"end": 28673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28664,
											"end": 28682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28683,
											"end": 28685,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28687,
											"end": 28693,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28664,
											"end": 28694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28664,
											"end": 28694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28664,
											"end": 28694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28664,
											"end": 28694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28656,
											"end": 28714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28656,
											"end": 28714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28743,
											"end": 28745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B"
										},
										{
											"begin": 28747,
											"end": 28753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28729,
											"end": 28754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28754,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28577,
											"end": 28761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13808,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13808,
											"end": 13820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13801,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13801,
											"end": 13820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15744,
											"end": 15748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15760,
											"end": 15775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15778,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 15778,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15778,
											"end": 15790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15778,
											"end": 15790,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 15778,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15760,
											"end": 15790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15760,
											"end": 15790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15800,
											"end": 15837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 15816,
											"end": 15820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15822,
											"end": 15829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15836,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15800,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 15800,
											"end": 15837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15800,
											"end": 15837,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 15800,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15847,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 15857,
											"end": 15861,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15863,
											"end": 15865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15872,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15847,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15847,
											"end": 15873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15847,
											"end": 15873,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 15847,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15883,
											"end": 15894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15883,
											"end": 15894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15883,
											"end": 15894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15657,
											"end": 15901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13663,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13654,
											"end": 13663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13654,
											"end": 13663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27705,
											"end": 27729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 27711,
											"end": 27713,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27724,
											"end": 27728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 27715,
											"end": 27721,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 27715,
											"end": 27728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 27715,
											"end": 27728,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 27715,
											"end": 27728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27705,
											"end": 27710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27705,
											"end": 27729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27705,
											"end": 27729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 27705,
											"end": 27729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27751,
											"end": 27753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 27755,
											"end": 27761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27744,
											"end": 27762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27762,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27634,
											"end": 27769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26714,
											"end": 26715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26701,
											"end": 26711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26701,
											"end": 26715,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 26693,
											"end": 26749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26693,
											"end": 26749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26811,
											"end": 26829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26854,
											"end": 26862,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26854,
											"end": 26862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26850,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 26833,
											"end": 26843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 26833,
											"end": 26850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 26833,
											"end": 26850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26832,
											"end": 26862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26832,
											"end": 26862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26832,
											"end": 26862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26832,
											"end": 26862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26832,
											"end": 26862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26832,
											"end": 26862,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26832,
											"end": 26862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26811,
											"end": 26862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26811,
											"end": 26862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26969,
											"end": 26991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27007,
											"end": 27011,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 26994,
											"end": 27004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26994,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26994,
											"end": 27011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26994,
											"end": 27011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26994,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26994,
											"end": 27011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26994,
											"end": 27011,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26994,
											"end": 27011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26969,
											"end": 27011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26969,
											"end": 27011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27021,
											"end": 27042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27062,
											"end": 27070,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27062,
											"end": 27070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 27045,
											"end": 27070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 27045,
											"end": 27070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27070,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 27045,
											"end": 27070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27021,
											"end": 27070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27021,
											"end": 27070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27118,
											"end": 27128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27102,
											"end": 27115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27102,
											"end": 27128,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27160,
											"end": 27161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27147,
											"end": 27157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 27131,
											"end": 27157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 27131,
											"end": 27157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27157,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 27131,
											"end": 27157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 27102,
											"end": 27161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27258,
											"end": 27301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 27268,
											"end": 27278,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27280,
											"end": 27288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27300,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27258,
											"end": 27267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27258,
											"end": 27301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27258,
											"end": 27301,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 27258,
											"end": 27301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27329,
											"end": 27330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27315,
											"end": 27326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27315,
											"end": 27330,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27334,
											"end": 27362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27334,
											"end": 27362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27334,
											"end": 27348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27334,
											"end": 27362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27362,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27334,
											"end": 27362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 27315,
											"end": 27362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27311,
											"end": 27437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27311,
											"end": 27437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27311,
											"end": 27437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27378,
											"end": 27426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27388,
											"end": 27396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27398,
											"end": 27412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27414,
											"end": 27425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27378,
											"end": 27387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27378,
											"end": 27426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27378,
											"end": 27426,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 27378,
											"end": 27426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27311,
											"end": 27437,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27311,
											"end": 27437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27455,
											"end": 27473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27473,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 27474,
											"end": 27484,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27486,
											"end": 27496,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 27455,
											"end": 27497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27455,
											"end": 27497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 27455,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 27447,
											"end": 27520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27544,
											"end": 27554,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "PUSH",
											"source": 0,
											"value": "91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420"
										},
										{
											"begin": 27556,
											"end": 27566,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27568,
											"end": 27578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27580,
											"end": 27591,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 27535,
											"end": 27592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27592,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 26683,
											"end": 27599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26683,
											"end": 27599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26683,
											"end": 27599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26683,
											"end": 27599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 27599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13950,
											"end": 13957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13976,
											"end": 13985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13986,
											"end": 13993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 14001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24045,
											"end": 24146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 24136,
											"end": 24137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 24109,
											"end": 24139,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 24109,
											"end": 24139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24045,
											"end": 24146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28077,
											"end": 28081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 28066,
											"end": 28073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28081,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28081,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 28058,
											"end": 28112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 28058,
											"end": 28112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28141,
											"end": 28149,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28130,
											"end": 28137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28130,
											"end": 28149,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28130,
											"end": 28149,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 28122,
											"end": 28183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 28122,
											"end": 28183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28203,
											"end": 28210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28193,
											"end": 28200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28193,
											"end": 28210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28193,
											"end": 28210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28193,
											"end": 28210,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28193,
											"end": 28210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "EDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1"
										},
										{
											"begin": 28240,
											"end": 28247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28225,
											"end": 28248,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28248,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23462,
											"end": 23468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23455,
											"end": 23468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23455,
											"end": 23468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23390,
											"end": 23475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 28400,
											"end": 28407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28415,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28415,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 28392,
											"end": 28464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 28392,
											"end": 28464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28485,
											"end": 28492,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28474,
											"end": 28482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28474,
											"end": 28492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28474,
											"end": 28492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28474,
											"end": 28492,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28474,
											"end": 28492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "BD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB"
										},
										{
											"begin": 28523,
											"end": 28530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28507,
											"end": 28531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28507,
											"end": 28531,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12941,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12934,
											"end": 12948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12934,
											"end": 12948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27883,
											"end": 27887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27898,
											"end": 27902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 27889,
											"end": 27895,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27889,
											"end": 27902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 27889,
											"end": 27902,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27889,
											"end": 27902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27889,
											"end": 27902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 27889,
											"end": 27902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27889,
											"end": 27902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 27889,
											"end": 27902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 27877,
											"end": 27903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27877,
											"end": 27903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 27929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7"
										},
										{
											"begin": 27931,
											"end": 27937,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27918,
											"end": 27938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27938,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14281,
											"end": 14294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 14297,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 14297,
											"end": 14309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 14329,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14345,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14319,
											"end": 14346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14346,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 14319,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14356,
											"end": 14367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26292,
											"end": 26293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26279,
											"end": 26289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26293,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 26271,
											"end": 26327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26271,
											"end": 26327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26372,
											"end": 26376,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 26359,
											"end": 26369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26359,
											"end": 26376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 26359,
											"end": 26376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26376,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26359,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26394,
											"end": 26403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26394,
											"end": 26416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26416,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 26417,
											"end": 26427,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26437,
											"end": 26441,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 26394,
											"end": 26455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 26394,
											"end": 26455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 26394,
											"end": 26455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 26386,
											"end": 26480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 26386,
											"end": 26480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26491,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26501,
											"end": 26509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26521,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26491,
											"end": 26500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 26491,
											"end": 26534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26491,
											"end": 26534,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 26491,
											"end": 26534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26557,
											"end": 26567,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB"
										},
										{
											"begin": 26569,
											"end": 26579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 26591,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 26549,
											"end": 26592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26592,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 26261,
											"end": 26599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29278,
											"end": 29295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29305,
											"end": 29322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29332,
											"end": 29355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29365,
											"end": 29392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29402,
											"end": 29427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29474,
											"end": 29501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29511,
											"end": 29534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29584,
											"end": 29591,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29584,
											"end": 29591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29609,
											"end": 29617,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29609,
											"end": 29617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29635,
											"end": 29643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29661,
											"end": 29675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29693,
											"end": 29712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29703,
											"end": 29711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29693,
											"end": 29702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29693,
											"end": 29712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29693,
											"end": 29712,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 29693,
											"end": 29712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29740,
											"end": 29754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29730,
											"end": 29755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29755,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29730,
											"end": 29755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29773,
											"end": 29797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 29791,
											"end": 29795,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29773,
											"end": 29782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29773,
											"end": 29797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29773,
											"end": 29797,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 29773,
											"end": 29797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29815,
											"end": 29824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29815,
											"end": 29834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29834,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29843,
											"end": 29847,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29815,
											"end": 29849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 29815,
											"end": 29849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 29815,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29867,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 29867,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29867,
											"end": 29880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29867,
											"end": 29880,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 29867,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14549,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14531,
											"end": 14565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14531,
											"end": 14565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28908,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28888,
											"end": 28896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28908,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28939,
											"end": 28948,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608"
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28923,
											"end": 28949,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 23283,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23283,
											"end": 23296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24399,
											"end": 24400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24379,
											"end": 24401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24379,
											"end": 24401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24379,
											"end": 24387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24379,
											"end": 24401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24379,
											"end": 24401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24379,
											"end": 24401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 24375,
											"end": 24466,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24452,
											"end": 24453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24424,
											"end": 24455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24455,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 24375,
											"end": 24466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24475,
											"end": 24503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 24494,
											"end": 24502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24475,
											"end": 24493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 24475,
											"end": 24503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24475,
											"end": 24503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 24475,
											"end": 24503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24295,
											"end": 24510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24991,
											"end": 25020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4304,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4208,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19607,
											"end": 19735,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19607,
											"end": 19735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19691,
											"end": 19728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 19700,
											"end": 19705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19723,
											"end": 19727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19691,
											"end": 19699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 19691,
											"end": 19728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19691,
											"end": 19728,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 19691,
											"end": 19728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19607,
											"end": 19735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19607,
											"end": 19735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19607,
											"end": 19735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19607,
											"end": 19735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23710,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23548,
											"end": 23710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 23618,
											"end": 23628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23618,
											"end": 23630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23630,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 23618,
											"end": 23630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23607,
											"end": 23630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 23607,
											"end": 23612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23607,
											"end": 23614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23614,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 23607,
											"end": 23614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23607,
											"end": 23630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23630,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 23603,
											"end": 23704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 23680,
											"end": 23690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23680,
											"end": 23692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23692,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 23680,
											"end": 23692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23653,
											"end": 23693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23704,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 23603,
											"end": 23704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21772,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21296,
											"end": 21772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21422,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 21432,
											"end": 21437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21439,
											"end": 21446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21422,
											"end": 21431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21422,
											"end": 21447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21422,
											"end": 21447,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 21422,
											"end": 21447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21480,
											"end": 21497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21461,
											"end": 21477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21461,
											"end": 21497,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21457,
											"end": 21766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21457,
											"end": 21766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 21457,
											"end": 21766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21536,
											"end": 21541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 21533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 21541,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 21513,
											"end": 21643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21595,
											"end": 21602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 21568,
											"end": 21628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21643,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 21513,
											"end": 21643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21684,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 21693,
											"end": 21698,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21700,
											"end": 21707,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21709,
											"end": 21725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21709,
											"end": 21733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21735,
											"end": 21740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21684,
											"end": 21692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21684,
											"end": 21741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21684,
											"end": 21741,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 21684,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21457,
											"end": 21766,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 21457,
											"end": 21766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21385,
											"end": 21772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16574,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16274,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16353,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16353,
											"end": 16439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 16398,
											"end": 16428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16353,
											"end": 16439,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16353,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16452,
											"end": 16468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16452,
											"end": 16468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16452,
											"end": 16454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16452,
											"end": 16468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16452,
											"end": 16468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16452,
											"end": 16468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 16448,
											"end": 16534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 16491,
											"end": 16523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16534,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 16448,
											"end": 16534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 16551,
											"end": 16555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16557,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 16543,
											"end": 16567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16567,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 16543,
											"end": 16567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18547,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18339,
											"end": 18547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18409,
											"end": 18430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18409,
											"end": 18430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18409,
											"end": 18430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18405,
											"end": 18496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 18405,
											"end": 18496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18482,
											"end": 18483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18453,
											"end": 18485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18405,
											"end": 18496,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 18405,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18505,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18521,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18525,
											"end": 18532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18505,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 18505,
											"end": 18540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18505,
											"end": 18540,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18505,
											"end": 18540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24851,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 24664,
											"end": 24851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24756,
											"end": 24762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24778,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24772,
											"end": 24778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24772,
											"end": 24789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24835,
											"end": 24843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24825,
											"end": 24833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24844,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24727,
											"end": 24851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18865,
											"end": 19071,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 18865,
											"end": 19071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18954,
											"end": 18955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18935,
											"end": 18956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18935,
											"end": 18956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18935,
											"end": 18942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18935,
											"end": 18956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18935,
											"end": 18956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18935,
											"end": 18956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 19020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 18931,
											"end": 19020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19006,
											"end": 19007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18979,
											"end": 19009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 19020,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 18931,
											"end": 19020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19029,
											"end": 19064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 19037,
											"end": 19044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19054,
											"end": 19055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19058,
											"end": 19063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19029,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 19029,
											"end": 19064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19029,
											"end": 19064,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 19029,
											"end": 19064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18865,
											"end": 19071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18865,
											"end": 19071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18865,
											"end": 19071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 21014,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20582,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20711,
											"end": 20712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20694,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20694,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20694,
											"end": 20699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20694,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20694,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20694,
											"end": 20713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20690,
											"end": 20779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 20690,
											"end": 20779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20765,
											"end": 20766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20736,
											"end": 20768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20768,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20690,
											"end": 20779,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 20690,
											"end": 20779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20792,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20792,
											"end": 20813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20792,
											"end": 20799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20792,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20792,
											"end": 20813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20792,
											"end": 20813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20788,
											"end": 20878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20788,
											"end": 20878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20864,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20836,
											"end": 20867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20788,
											"end": 20878,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20788,
											"end": 20878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 20922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20898,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20899,
											"end": 20904,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20913,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20922,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 21008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20932,
											"end": 21008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20982,
											"end": 20989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20975,
											"end": 20980,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20966,
											"end": 20997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 21008,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20932,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 21014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 21014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 21014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 21014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 21014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 17996,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 16889,
											"end": 17996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 16995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 16982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 16996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17126,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17114,
											"end": 17126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 17114,
											"end": 17135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17166,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17198,
											"end": 17202,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17166,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17166,
											"end": 17203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17235,
											"end": 17240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17240,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 17217,
											"end": 17332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17311,
											"end": 17316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 17267,
											"end": 17317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17332,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 17217,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17470,
											"end": 17481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17470,
											"end": 17489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17466,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17489,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17152,
											"end": 17514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 16974,
											"end": 17514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17542,
											"end": 17543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17528,
											"end": 17544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17528,
											"end": 17544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17528,
											"end": 17530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17528,
											"end": 17544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17528,
											"end": 17544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17528,
											"end": 17544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17707,
											"end": 17712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17703,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17691,
											"end": 17703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17912,
											"end": 17914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 17524,
											"end": 17949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 17981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17983,
											"end": 17988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17964,
											"end": 17989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17989,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 17996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 17996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 17996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 17996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 3560,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3705,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 3868,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 4049,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4281,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4426,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4554,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 4933,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 5108,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6069,
											"end": 6074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 6051,
											"end": 6075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6042,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 6024,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6203,
											"end": 6208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6172,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6360,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6221,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6317,
											"end": 6354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6354,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6317,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6523,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6366,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 6510,
											"end": 6515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6466,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6516,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 6466,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6777,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6529,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6662,
											"end": 6671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 6767,
											"end": 6768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6752,
											"end": 6769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6686,
											"end": 6770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6770,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 6686,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7141,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7218,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7152,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 7152,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 7301,
											"end": 7303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7290,
											"end": 7299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7283,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7233,
											"end": 7305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7305,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 7233,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 7383,
											"end": 7385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7365,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7315,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7387,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 7315,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7465,
											"end": 7467,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7454,
											"end": 7463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7397,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7469,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7397,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 7547,
											"end": 7550,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7479,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7552,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 7479,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7630,
											"end": 7633,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7606,
											"end": 7612,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7562,
											"end": 7635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7635,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7562,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7713,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7702,
											"end": 7711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7645,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7718,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7645,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7728,
											"end": 7801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7801,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7728,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 7879,
											"end": 7882,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7868,
											"end": 7877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7811,
											"end": 7884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7884,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 7811,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 7891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8010,
											"end": 8019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8001,
											"end": 8008,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7993,
											"end": 8025,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 7990,
											"end": 8109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 8028,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 8028,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8107,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 8028,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8109,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 7990,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 8218,
											"end": 8225,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8209,
											"end": 8215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8207,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 8173,
											"end": 8226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8226,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 8173,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 8346,
											"end": 8353,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8322,
											"end": 8344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 8301,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8354,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 8301,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8377,
											"end": 8557,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8377,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8425,
											"end": 8502,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8519,
											"end": 8520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8512,
											"end": 8527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8883,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8563,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8646,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8712,
											"end": 8730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8702,
											"end": 8783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8783,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8702,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8830,
											"end": 8832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8833,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 8834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8793,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 8793,
											"end": 8877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8849,
											"end": 8867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8793,
											"end": 8877,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 8793,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 9129,
											"end": 9130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9114,
											"end": 9131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 9061,
											"end": 9132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9132,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 9061,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 9210,
											"end": 9212,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 9142,
											"end": 9214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9214,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 9142,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 9221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9343,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9227,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 9312,
											"end": 9317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 9297,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9287,
											"end": 9319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 9277,
											"end": 9337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9337,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 9277,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9486,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 9349,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 9474,
											"end": 9479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9450,
											"end": 9480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9480,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 9450,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9486,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9837,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9492,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9608,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9596,
											"end": 9605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9611,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9695,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 9576,
											"end": 9695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 9614,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9614,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9693,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 9614,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9695,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 9576,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 9759,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9820,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 9759,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10008,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 9843,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "5769746864726177206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 9977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9960,
											"end": 10001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 10241,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 10236,
											"end": 10239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 10177,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 10342,
											"end": 10345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10253,
											"end": 10346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10793,
											"end": 10797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 10667,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10811,
											"end": 10991,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 10811,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10859,
											"end": 10936,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10960,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10953,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10946,
											"end": 10961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 10984,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10977,
											"end": 10978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10970,
											"end": 10985,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11407,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10997,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 11060,
											"end": 11080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 11112,
											"end": 11113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 11094,
											"end": 11114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11114,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 11094,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11142,
											"end": 11151,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11171,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 11189,
											"end": 11200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11171,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 11171,
											"end": 11201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11171,
											"end": 11201,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 11171,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11337,
											"end": 11352,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11353,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11304,
											"end": 11313,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11367,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 11261,
											"end": 11400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 11380,
											"end": 11398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11400,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 11261,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11407,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11592,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 11413,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 11549,
											"end": 11550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11964,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 11598,
											"end": 11964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11761,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 11825,
											"end": 11827,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 11820,
											"end": 11823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11761,
											"end": 11828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11828,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 11761,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11754,
											"end": 11828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11754,
											"end": 11828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11837,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 11926,
											"end": 11929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11837,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 11837,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11837,
											"end": 11930,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 11837,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 11957,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11950,
											"end": 11953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11946,
											"end": 11958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11939,
											"end": 11958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11939,
											"end": 11958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 12389,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11970,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12136,
											"end": 12140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12174,
											"end": 12176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12223,
											"end": 12232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12213,
											"end": 12233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12198,
											"end": 12207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12194,
											"end": 12211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12187,
											"end": 12234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12251,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12251,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 12251,
											"end": 12382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12251,
											"end": 12382,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 12251,
											"end": 12382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 12389,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 12389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 12389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 12389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12395,
											"end": 12575,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 12395,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12440,
											"end": 12441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12433,
											"end": 12521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12544,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12537,
											"end": 12538,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12530,
											"end": 12545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12564,
											"end": 12568,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12561,
											"end": 12562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12766,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 12581,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 12656,
											"end": 12657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12638,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12638,
											"end": 12658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12638,
											"end": 12658,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 12638,
											"end": 12658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12633,
											"end": 12658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12633,
											"end": 12658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 12690,
											"end": 12691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12672,
											"end": 12692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12692,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 12672,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12711,
											"end": 12712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 12701,
											"end": 12736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 12716,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12736,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 12701,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 12759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 12756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12760,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12966,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12772,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12832,
											"end": 12852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 12850,
											"end": 12851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12832,
											"end": 12852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12832,
											"end": 12852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12832,
											"end": 12852,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 12832,
											"end": 12852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12866,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 12884,
											"end": 12885,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12866,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12866,
											"end": 12886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12866,
											"end": 12886,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 12866,
											"end": 12886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12861,
											"end": 12886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12861,
											"end": 12886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12910,
											"end": 12911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 12908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 12935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12925,
											"end": 12936,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12959,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 12922,
											"end": 12959,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 12939,
											"end": 12957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12959,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 12922,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 12972,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13112,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "55534454207061796F7574206661696C65640000000000000000000000000000"
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13100,
											"end": 13106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13096,
											"end": 13110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13512,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 13146,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13288,
											"end": 13291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 13373,
											"end": 13375,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 13368,
											"end": 13371,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 13309,
											"end": 13376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13376,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 13309,
											"end": 13376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13474,
											"end": 13477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 13385,
											"end": 13478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13478,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13385,
											"end": 13478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13503,
											"end": 13505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13498,
											"end": 13501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13487,
											"end": 13506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13487,
											"end": 13506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13937,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 13518,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13724,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13711,
											"end": 13720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13771,
											"end": 13780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13765,
											"end": 13769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13746,
											"end": 13755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13742,
											"end": 13759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13799,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 13925,
											"end": 13929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13799,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 13799,
											"end": 13930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13799,
											"end": 13930,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 13799,
											"end": 13930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14092,
											"end": 14096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14130,
											"end": 14132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14119,
											"end": 14128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14115,
											"end": 14133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14211,
											"end": 14212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14200,
											"end": 14209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14196,
											"end": 14213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14187,
											"end": 14193,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14143,
											"end": 14214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14214,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14143,
											"end": 14214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14224,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14292,
											"end": 14294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14268,
											"end": 14274,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14224,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14224,
											"end": 14296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14224,
											"end": 14296,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14224,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14374,
											"end": 14376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14363,
											"end": 14372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14350,
											"end": 14356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14306,
											"end": 14378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14378,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14306,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14391,
											"end": 14567,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 14391,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14559,
											"name": "PUSH",
											"source": 1,
											"value": "4275792072617465206D757374206265203E3D2031205354454D000000000000"
										},
										{
											"begin": 14527,
											"end": 14528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14519,
											"end": 14525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14515,
											"end": 14529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14391,
											"end": 14567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14391,
											"end": 14567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14573,
											"end": 14939,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 14573,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 14718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14736,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 14800,
											"end": 14802,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 14795,
											"end": 14798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 14736,
											"end": 14803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14803,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 14736,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14729,
											"end": 14803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14729,
											"end": 14803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 14901,
											"end": 14904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 14812,
											"end": 14905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14905,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 14812,
											"end": 14905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14930,
											"end": 14932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14925,
											"end": 14928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14914,
											"end": 14933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14914,
											"end": 14933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14573,
											"end": 14939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14573,
											"end": 14939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14573,
											"end": 14939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14573,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 15364,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14945,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15111,
											"end": 15115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15149,
											"end": 15151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15138,
											"end": 15147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15134,
											"end": 15152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15126,
											"end": 15152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15126,
											"end": 15152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15198,
											"end": 15207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15184,
											"end": 15185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15169,
											"end": 15186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15162,
											"end": 15209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15226,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 15352,
											"end": 15356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15226,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 15226,
											"end": 15357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15226,
											"end": 15357,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 15226,
											"end": 15357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15218,
											"end": 15357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15218,
											"end": 15357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 15364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 15364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 15364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 15364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15549,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 15370,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15510,
											"end": 15541,
											"name": "PUSH",
											"source": 1,
											"value": "4275792072617465206D757374206265203C3D2053656C6C2072617465000000"
										},
										{
											"begin": 15506,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15498,
											"end": 15504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15494,
											"end": 15508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15487,
											"end": 15542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15921,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 15555,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15718,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 15782,
											"end": 15784,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 15777,
											"end": 15780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 15718,
											"end": 15785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 15718,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15711,
											"end": 15785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15711,
											"end": 15785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 15883,
											"end": 15886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 15794,
											"end": 15887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15887,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 15794,
											"end": 15887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15912,
											"end": 15914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15907,
											"end": 15910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15903,
											"end": 15915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15896,
											"end": 15915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15896,
											"end": 15915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15927,
											"end": 16346,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15927,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16093,
											"end": 16097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16131,
											"end": 16133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16120,
											"end": 16129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16116,
											"end": 16134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16108,
											"end": 16134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16108,
											"end": 16134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16174,
											"end": 16178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16170,
											"end": 16190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16166,
											"end": 16167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16155,
											"end": 16164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16144,
											"end": 16191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16208,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 16334,
											"end": 16338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16208,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 16208,
											"end": 16339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16208,
											"end": 16339,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 16208,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15927,
											"end": 16346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15927,
											"end": 16346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15927,
											"end": 16346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15927,
											"end": 16346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16608,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 16352,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16492,
											"end": 16558,
											"name": "PUSH",
											"source": 1,
											"value": "53656C6C2072617465206D75737420626520E289A52031205354454D20706572"
										},
										{
											"begin": 16488,
											"end": 16489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16480,
											"end": 16486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16476,
											"end": 16490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16469,
											"end": 16559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16593,
											"end": 16600,
											"name": "PUSH",
											"source": 1,
											"value": "2055534454000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16588,
											"end": 16590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16580,
											"end": 16586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16576,
											"end": 16591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16569,
											"end": 16601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16980,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 16614,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16756,
											"end": 16759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16777,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 16841,
											"end": 16843,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 16836,
											"end": 16839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16777,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 16777,
											"end": 16844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16777,
											"end": 16844,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 16777,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 16942,
											"end": 16945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 16853,
											"end": 16946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16946,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 16853,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16971,
											"end": 16973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16966,
											"end": 16969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16962,
											"end": 16974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16955,
											"end": 16974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16955,
											"end": 16974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16986,
											"end": 17405,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 16986,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17152,
											"end": 17156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17190,
											"end": 17192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17179,
											"end": 17188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17167,
											"end": 17193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17167,
											"end": 17193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17239,
											"end": 17248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17233,
											"end": 17237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17229,
											"end": 17249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17225,
											"end": 17226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17214,
											"end": 17223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17210,
											"end": 17227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17203,
											"end": 17250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17267,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 17393,
											"end": 17397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17267,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 17267,
											"end": 17398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17267,
											"end": 17398,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 17267,
											"end": 17398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16986,
											"end": 17405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16986,
											"end": 17405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16986,
											"end": 17405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16986,
											"end": 17405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17560,
											"end": 17564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17598,
											"end": 17600,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17587,
											"end": 17596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17583,
											"end": 17601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17575,
											"end": 17601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17575,
											"end": 17601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17611,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 17679,
											"end": 17680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17668,
											"end": 17677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17664,
											"end": 17681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17655,
											"end": 17661,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17611,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 17611,
											"end": 17682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17611,
											"end": 17682,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 17611,
											"end": 17682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17760,
											"end": 17762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17749,
											"end": 17758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17745,
											"end": 17763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17736,
											"end": 17742,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 17692,
											"end": 17764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17764,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17692,
											"end": 17764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17842,
											"end": 17844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17831,
											"end": 17840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 17774,
											"end": 17846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17846,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17774,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17859,
											"end": 18029,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 17859,
											"end": 18029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18021,
											"name": "PUSH",
											"source": 1,
											"value": "55534454207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 17995,
											"end": 17996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17987,
											"end": 17993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 17997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17976,
											"end": 18022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17859,
											"end": 18029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17859,
											"end": 18029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18177,
											"end": 18180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 18262,
											"end": 18264,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 18257,
											"end": 18260,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 18198,
											"end": 18265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18191,
											"end": 18265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18191,
											"end": 18265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 18363,
											"end": 18366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 18274,
											"end": 18367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18392,
											"end": 18394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18387,
											"end": 18390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18383,
											"end": 18395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18573,
											"end": 18577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18611,
											"end": 18613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18600,
											"end": 18609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18596,
											"end": 18614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18588,
											"end": 18614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18588,
											"end": 18614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18660,
											"end": 18669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18654,
											"end": 18658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18650,
											"end": 18670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18646,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18635,
											"end": 18644,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18624,
											"end": 18671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18814,
											"end": 18818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 18688,
											"end": 18819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18680,
											"end": 18819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18680,
											"end": 18819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18407,
											"end": 18826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18953,
											"end": 18957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18991,
											"end": 18993,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18980,
											"end": 18989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18976,
											"end": 18994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18968,
											"end": 18994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18968,
											"end": 18994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 19072,
											"end": 19073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19061,
											"end": 19070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19048,
											"end": 19054,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 19004,
											"end": 19075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19085,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 19153,
											"end": 19155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19142,
											"end": 19151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19138,
											"end": 19156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19129,
											"end": 19135,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19085,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 19085,
											"end": 19157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19085,
											"end": 19157,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 19085,
											"end": 19157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 19164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19170,
											"end": 19313,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 19170,
											"end": 19313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19227,
											"end": 19232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19258,
											"end": 19264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19252,
											"end": 19265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19243,
											"end": 19265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19243,
											"end": 19265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19274,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 19301,
											"end": 19306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19274,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 19274,
											"end": 19307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19274,
											"end": 19307,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 19274,
											"end": 19307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19170,
											"end": 19313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19170,
											"end": 19313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19170,
											"end": 19313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19170,
											"end": 19313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19170,
											"end": 19313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19319,
											"end": 19670,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 19319,
											"end": 19670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19389,
											"end": 19395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19438,
											"end": 19440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19426,
											"end": 19435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19417,
											"end": 19424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19413,
											"end": 19436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19409,
											"end": 19441,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 19406,
											"end": 19525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19406,
											"end": 19525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 19406,
											"end": 19525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 19444,
											"end": 19523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 19444,
											"end": 19523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19523,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 19444,
											"end": 19523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19406,
											"end": 19525,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 19406,
											"end": 19525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19564,
											"end": 19565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19589,
											"end": 19653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 19645,
											"end": 19652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19636,
											"end": 19642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19625,
											"end": 19634,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19621,
											"end": 19643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19589,
											"end": 19653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 19589,
											"end": 19653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19589,
											"end": 19653,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 19589,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19579,
											"end": 19653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19579,
											"end": 19653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19535,
											"end": 19663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19319,
											"end": 19670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19319,
											"end": 19670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19319,
											"end": 19670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19319,
											"end": 19670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19319,
											"end": 19670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19825,
											"end": 19829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19863,
											"end": 19865,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19852,
											"end": 19861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19848,
											"end": 19866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19840,
											"end": 19866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19840,
											"end": 19866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 19944,
											"end": 19945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19933,
											"end": 19942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19929,
											"end": 19946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19920,
											"end": 19926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 19876,
											"end": 19947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 20025,
											"end": 20027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20014,
											"end": 20023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20007,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 19957,
											"end": 20029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 20107,
											"end": 20109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20092,
											"end": 20110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20083,
											"end": 20089,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 20039,
											"end": 20111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20315,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 20124,
											"end": 20315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20164,
											"end": 20167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20183,
											"end": 20203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 20201,
											"end": 20202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20183,
											"end": 20203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 20183,
											"end": 20203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20183,
											"end": 20203,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 20183,
											"end": 20203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20178,
											"end": 20203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20178,
											"end": 20203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 20235,
											"end": 20236,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 20217,
											"end": 20237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20212,
											"end": 20237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20212,
											"end": 20237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20260,
											"end": 20261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20257,
											"end": 20258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20253,
											"end": 20262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20246,
											"end": 20262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20246,
											"end": 20262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20281,
											"end": 20284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20278,
											"end": 20279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20275,
											"end": 20285,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20272,
											"end": 20308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20272,
											"end": 20308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 20272,
											"end": 20308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 20288,
											"end": 20306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20272,
											"end": 20308,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 20272,
											"end": 20308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20124,
											"end": 20315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/STEMMER_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"buyRate()": "fc37987b",
							"buyStem(uint256)": "bb285554",
							"decimals()": "313ce567",
							"getConfig()": "c3f909d4",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"profitTreasury()": "f203787c",
							"renounceOwnership()": "715018a6",
							"sellRate()": "6217229b",
							"sellStem(uint256)": "5d91e3f8",
							"setBuyRate(uint256)": "85e436bf",
							"setProfitTreasury(address)": "0f7e730b",
							"setSellRate(uint256)": "8e0b017d",
							"setTreasury(address)": "f0f44260",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"usdtToken()": "a98ad46c",
							"withdrawUSDT(address,uint256)": "1481794e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profitTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyRate\",\"type\":\"uint256\"}],\"name\":\"BuyRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"}],\"name\":\"BuyStem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProfitTreasury\",\"type\":\"address\"}],\"name\":\"ProfitTreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellRate\",\"type\":\"uint256\"}],\"name\":\"SellRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitStems\",\"type\":\"uint256\"}],\"name\":\"SellStem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDTWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyStem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profitTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"treasuryStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractUsdtBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStemSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"}],\"name\":\"sellStem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setBuyRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setProfitTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setSellRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER_flattened.sol\":\"STEMToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/STEMMER_flattened.sol\":{\"keccak256\":\"0x0ae656c5bec6661d474f7910941717753e927f96f481649799efd4a7759d23cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6b6c6acaeb7d93003f37e31a873d8af2e37d2ee0efff2641b5a86965acbb6c\",\"dweb:/ipfs/QmYGoXpubKd8ubPjuMGY2TNC3BGAukVCW1vvq7BcTN31zp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 924,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "usdtToken",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 927,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "buyRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 930,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "sellRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 932,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "treasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 934,
								"contract": "contracts/STEMMER_flattened.sol:STEMToken",
								"label": "profitTreasury",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/STEMMER_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/STEMMER_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						],
						"STEMToken": [
							1365
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "164:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "272:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "285:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "463:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:57:0"
									},
									"src": "448:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "685:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "717:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:63:0"
									},
									"src": "679:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "763:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "842:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:9:0"
									},
									"scope": 77,
									"src": "833:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "894:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:9:0"
									},
									"scope": 77,
									"src": "970:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1044:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1271:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:6:0"
									},
									"scope": 77,
									"src": "1262:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1337:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1615:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1624:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:0"
									},
									"scope": 77,
									"src": "1606:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1695:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2376:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:6:0"
									},
									"scope": 77,
									"src": "2367:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2446:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2757:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2804:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:6:0"
									},
									"scope": 77,
									"src": "2748:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1366,
							"src": "262:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3009:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3152:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3152:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3152:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3036:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3134:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3165:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3233:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3263:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:15:0"
									},
									"scope": 100,
									"src": "3224:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3284:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3354:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3386:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:15:0"
									},
									"scope": 100,
									"src": "3345:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3407:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3486:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3520:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3520:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:7:0"
									},
									"scope": 100,
									"src": "3477:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1366,
							"src": "3124:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3653:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3679:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4194:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4270:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4287:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4291:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4287:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4280:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4217:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4227:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4260:9:0"
									},
									"scope": 129,
									"src": "4208:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4377:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4394:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4398:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4394:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4387:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4319:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4327:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4361:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:16:0"
									},
									"scope": 129,
									"src": "4310:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4487:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4504:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4497:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4424:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4444:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:0"
									},
									"scope": 129,
									"src": "4415:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1366,
							"src": "4176:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4661:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4687:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4839:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4858:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5178:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5211:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5203:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:49:0"
									},
									"src": "5172:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5258:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5421:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5448:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:16:0"
									},
									"src": "5415:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5462:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5632:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5652:18:0"
									},
									"src": "5626:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5677:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6033:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6085:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6077:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:52:0"
									},
									"src": "6027:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6118:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6303:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6332:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6324:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:18:0"
									},
									"src": "6297:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6348:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6554:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6573:17:0"
									},
									"src": "6548:43:0"
								}
							],
							"scope": 1366,
							"src": "4829:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6595:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6749:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6769:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6999:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7026:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7018:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:15:0"
									},
									"src": "6993:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7039:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7182:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7204:17:0"
									},
									"src": "7176:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7228:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7528:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7590:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7582:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7548:48:0"
									},
									"src": "7522:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7603:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7766:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7785:16:0"
									},
									"src": "7760:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7808:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7978:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8008:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8000:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7999:18:0"
									},
									"src": "7972:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8024:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8282:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8317:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8309:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8308:35:0"
									},
									"src": "8276:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8350:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8535:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8565:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8557:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:18:0"
									},
									"src": "8529:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8581:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8789:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8819:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8811:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8810:18:0"
									},
									"src": "8783:46:0"
								}
							],
							"scope": 1366,
							"src": "6739:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8833:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8989:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9010:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9382:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9458:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9408:66:0"
									},
									"src": "9376:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9481:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9644:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9664:16:0"
									},
									"src": "9638:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9687:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9857:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9879:18:0"
									},
									"src": "9851:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9904:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10171:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10200:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10199:33:0"
									},
									"src": "10165:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10239:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10424:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10446:18:0"
									},
									"src": "10418:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10471:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10679:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10710:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10702:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10701:18:0"
									},
									"src": "10673:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10726:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11017:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11051:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11043:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11070:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11062:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11042:41:0"
									},
									"src": "11011:73:0"
								}
							],
							"scope": 1366,
							"src": "8979:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11218:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12033:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12033:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12033:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12042:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12042:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12042:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12050:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12050:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12050:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12066:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12066:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12066:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11248:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12024:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12129:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12085:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12101:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12093:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12085:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12112:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12217:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12145:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12161:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12153:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12145:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12188:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12180:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12172:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12199:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12251:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12235:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12285:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12270:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12270:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12311:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12296:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12538:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12548:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12556:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12548:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12548:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12571:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12571:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12325:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12494:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12529:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12515:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12493:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12538:0:0"
									},
									"scope": 771,
									"src": "12482:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12720:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12737:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12730:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12601:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12669:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12673:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12705:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12705:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12704:15:0"
									},
									"scope": 771,
									"src": "12660:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12924:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12934:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12755:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12871:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12877:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12909:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12908:15:0"
									},
									"scope": 771,
									"src": "12862:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13644:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13661:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13654:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12961:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13597:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13605:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13637:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13637:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13636:7:0"
									},
									"scope": 771,
									"src": "13588:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13791:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13808:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13801:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13676:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13750:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13782:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13781:9:0"
									},
									"scope": 771,
									"src": "13730:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13959:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13976:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13976:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13969:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13833:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13894:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13912:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13903:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13949:9:0"
									},
									"scope": 771,
									"src": "13885:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14271:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14289:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14281:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14281:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14297:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14297:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14281:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14329:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14336:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14319:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14319:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14356:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14007:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14205:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14214:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14213:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14264:6:0"
									},
									"scope": 771,
									"src": "14196:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14521:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14538:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14538:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14538:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14531:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14380:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14441:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14459:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14450:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14512:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14511:9:0"
									},
									"scope": 771,
									"src": "14432:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14958:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14976:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14968:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14968:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14984:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14984:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14968:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15031:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15006:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15006:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15006:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15047:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14578:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14888:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14904:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14896:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14921:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14913:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14895:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14952:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14951:6:0"
									},
									"scope": 771,
									"src": "14879:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15750:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15768:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15760:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15760:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15778:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15778:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15760:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15816:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15831:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15800:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15800:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15800:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15847:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15847:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15847:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15883:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15071:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15666:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15701:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15693:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15713:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15705:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15678:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15744:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15744:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15743:6:0"
									},
									"scope": 771,
									"src": "15657:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16343:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16357:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16373:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16365:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16365:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16357:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16353:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16377:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16417:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16417:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16417:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16398:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16398:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16391:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16452:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16466:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16458:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16458:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16452:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16448:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16470:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16520:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16512:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16512:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16512:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16491:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16491:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16484:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16551:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16557:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16561:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16543:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16543:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15907:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16283:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16301:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16293:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16315:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16307:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16327:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16319:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16292:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16343:0:0"
									},
									"scope": 771,
									"src": "16274:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16964:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16978:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16994:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16986:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16986:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16978:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17152:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17174:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17166:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17166:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17188:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17198:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17188:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17166:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17221:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17235:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17221:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17217:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17242:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17292:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17298:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17311:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17267:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17267:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17260:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17345:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17452:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17462:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17452:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17470:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17484:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17470:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17452:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17452:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16974:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16998:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17114:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17130:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17114:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17114:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17528:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17534:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17534:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17528:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17743:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17757:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17902:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17912:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17902:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17919:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17902:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17902:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17524:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17546:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17560:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17691:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17707:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17691:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17691:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17979:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17983:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17964:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17964:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17959:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16580:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16898:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16906:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16928:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16920:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16940:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16905:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16964:0:0"
									},
									"scope": 771,
									"src": "16889:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18395:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18420:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18420:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18409:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18405:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18432:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18482:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18474:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18474:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18474:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18453:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18453:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18446:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18521:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18513:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18513:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18534:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18505:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18505:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18505:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18002:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18348:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18379:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18371:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18353:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18395:0:0"
									},
									"scope": 771,
									"src": "18339:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18921:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18954:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18946:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18946:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18935:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18931:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18958:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19006:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18998:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18998:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18998:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18979:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18979:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18972:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19054:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19046:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19046:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19046:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19058:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19029:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19029:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18553:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18874:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18888:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18880:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18905:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18897:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18879:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18921:0:0"
									},
									"scope": 771,
									"src": "18865:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19681:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19700:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19716:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19723:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19691:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19691:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19691:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19077:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19616:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19665:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19657:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19624:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19681:0:0"
									},
									"scope": 771,
									"src": "19607:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20680:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20694:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20703:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20703:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20703:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20694:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20690:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20715:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20765:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20757:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20757:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20757:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20736:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20736:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20729:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20792:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20811:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20803:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20803:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20792:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20788:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20815:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20864:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20856:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20856:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20856:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20836:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20836:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20829:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20887:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20899:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20887:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20887:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20917:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20887:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20887:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20936:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20932:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20947:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20975:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20982:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20991:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20966:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20966:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20961:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19741:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20591:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20623:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20615:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20640:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20632:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20652:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20647:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20599:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20680:0:0"
									},
									"scope": 771,
									"src": "20582:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21385:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21403:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21395:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21422:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21422:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21395:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21461:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21485:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21485:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21480:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21480:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21494:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21480:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21461:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21457:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21499:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21517:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21536:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21517:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21513:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21543:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21595:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21604:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21622:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21568:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21568:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21561:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21656:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21693:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21700:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21709:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21728:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21709:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21735:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21684:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21684:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21684:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21020:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21305:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21336:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21361:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21320:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21385:0:0"
									},
									"scope": 771,
									"src": "21296:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1366,
							"src": "12006:9768:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21900:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22444:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22444:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22444:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21927:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22433:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22474:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22458:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22458:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22487:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22583:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22609:17:0"
									},
									"src": "22577:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22633:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22726:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22754:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22746:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22745:15:0"
									},
									"src": "22720:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22773:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22810:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22794:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22841:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22825:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22793:57:0"
									},
									"src": "22767:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23011:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23025:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23049:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23041:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23041:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23025:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23021:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23053:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23102:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23094:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23094:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23094:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23074:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23074:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23067:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23144:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23125:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23125:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23125:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22857:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "22997:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "22989:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22988:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23011:0:0"
									},
									"scope": 916,
									"src": "22977:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23273:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23283:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23283:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23283:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23306:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23170:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23261:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23270:2:0"
									},
									"src": "23252:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23445:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23455:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23320:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23399:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23404:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23435:9:0"
									},
									"scope": 916,
									"src": "23390:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23593:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23607:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23607:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23618:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23618:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23607:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23603:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23632:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23680:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23680:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23653:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23653:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23646:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23481:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23557:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23568:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23593:0:0"
									},
									"scope": 916,
									"src": "23548:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24099:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24128:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24128:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24128:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24109:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24109:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24109:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23716:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24089:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24089:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24089:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24054:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24071:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24099:0:0"
									},
									"scope": 916,
									"src": "24045:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24365:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24379:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24399:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24391:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24391:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24379:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24375:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24403:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24452:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24444:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24444:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24444:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24424:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24424:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24417:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24494:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24475:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24475:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24475:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24152:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24355:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24355:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24355:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24304:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24330:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24322:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24321:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24365:0:0"
									},
									"scope": 916,
									"src": "24295:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24727:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24745:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24737:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24737:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24756:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24737:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24772:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24781:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24772:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24772:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24835:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24804:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24804:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24799:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24516:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24673:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24700:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24692:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24691:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24727:0:0"
									},
									"scope": 916,
									"src": "24664:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1366,
							"src": "22415:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "24888:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 918,
										"name": "ERC20",
										"nameLocations": [
											"24939:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "24939:5:0"
									},
									"id": 919,
									"nodeType": "InheritanceSpecifier",
									"src": "24939:5:0"
								},
								{
									"baseName": {
										"id": 920,
										"name": "Ownable",
										"nameLocations": [
											"24946:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "24946:7:0"
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "24946:7:0"
								}
							],
							"canonicalName": "STEMToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1365,
							"linearizedBaseContracts": [
								1365,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "STEMToken",
							"nameLocation": "24926:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 924,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "24975:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "24961:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 923,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 922,
											"name": "IERC20",
											"nameLocations": [
												"24961:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "24961:6:0"
										},
										"referencedDeclaration": 77,
										"src": "24961:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc37987b",
									"id": 927,
									"mutability": "mutable",
									"name": "buyRate",
									"nameLocation": "25006:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "24991:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 925,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24991:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 926,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25016:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6217229b",
									"id": 930,
									"mutability": "mutable",
									"name": "sellRate",
									"nameLocation": "25072:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "25057:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25057:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25083:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 932,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "25145:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "25130:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 931,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25130:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f203787c",
									"id": 934,
									"mutability": "mutable",
									"name": "profitTreasury",
									"nameLocation": "25174:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "25159:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 933,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25159:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb",
									"id": 942,
									"name": "BuyStem",
									"nameLocation": "25220:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "25244:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "25228:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "25259:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "25251:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "25279:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "25271:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25227:63:0"
									},
									"src": "25214:77:0"
								},
								{
									"anonymous": false,
									"eventSelector": "91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420",
									"id": 952,
									"name": "SellStem",
									"nameLocation": "25302:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "25327:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25311:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "25343:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25335:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "25363:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25355:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "profitStems",
												"nameLocation": "25383:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25375:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25310:85:0"
									},
									"src": "25296:100:0"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 958,
									"name": "Minted",
									"nameLocation": "25407:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25430:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "25414:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "25434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25413:36:0"
									},
									"src": "25401:49:0"
								},
								{
									"anonymous": false,
									"eventSelector": "696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7",
									"id": 964,
									"name": "Burned",
									"nameLocation": "25461:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "25468:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25498:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "25490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25467:38:0"
									},
									"src": "25455:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab",
									"id": 968,
									"name": "SellRateUpdated",
									"nameLocation": "25517:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSellRate",
												"nameLocation": "25541:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "25533:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25532:21:0"
									},
									"src": "25511:43:0"
								},
								{
									"anonymous": false,
									"eventSelector": "00edd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb1",
									"id": 972,
									"name": "BuyRateUpdated",
									"nameLocation": "25565:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBuyRate",
												"nameLocation": "25588:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "25580:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25579:20:0"
									},
									"src": "25559:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608",
									"id": 976,
									"name": "TreasuryChanged",
									"nameLocation": "25611:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "25643:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "25627:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25626:29:0"
									},
									"src": "25605:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0056d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b",
									"id": 980,
									"name": "ProfitTreasuryChanged",
									"nameLocation": "25667:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "newProfitTreasury",
												"nameLocation": "25705:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "25689:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25688:35:0"
									},
									"src": "25661:63:0"
								},
								{
									"anonymous": false,
									"eventSelector": "b0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b",
									"id": 986,
									"name": "USDTWithdrawn",
									"nameLocation": "25735:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25765:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "25749:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25777:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "25769:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25748:36:0"
									},
									"src": "25729:56:0"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "25980:173:0",
										"statements": [
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1005,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "25990:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1007,
																"name": "_usdtTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "26009:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1006,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "26002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26002:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "25990:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "25990:37:0"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1011,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "26037:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1012,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "26048:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26037:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "26037:20:0"
											},
											{
												"expression": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "26067:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1016,
														"name": "_profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "26084:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26067:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "26067:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1020,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "26115:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "26125:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26141:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "26125:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26109:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26109:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "26109:37:0"
											}
										]
									},
									"id": 1027,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5354454d4d4552",
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25941:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ffd31affea26a94d12a3a0b27565e7f22ab7d240d197d7eeaca998aec54d116a",
														"typeString": "literal_string \"STEMMER\""
													},
													"value": "STEMMER"
												},
												{
													"hexValue": "5354454d",
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25952:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8a41c0f2575200c6620e0e981e04ebdbd20c94c08716ef02ff08a4b28fc2f53e",
														"typeString": "literal_string \"STEM\""
													},
													"value": "STEM"
												}
											],
											"id": 999,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 996,
												"name": "ERC20",
												"nameLocations": [
													"25935:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "25935:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25935:24:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1001,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "25968:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "25972:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "25968:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1003,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1000,
												"name": "Ownable",
												"nameLocations": [
													"25960:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "25960:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25960:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "_usdtTokenAddress",
												"nameLocation": "25820:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25812:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "25855:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25847:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_profitTreasury",
												"nameLocation": "25882:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25874:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "25915:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25907:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25802:132:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25980:0:0"
									},
									"scope": 1365,
									"src": "25791:362:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "26261:338:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "usdtAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "26279:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26292:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26279:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26295:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26271:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "26271:56:0"
											},
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "stemAmount",
														"nameLocation": "26346:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "26338:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1039,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "usdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "26359:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26372:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "26359:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26338:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1048,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26417:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26421:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26417:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1052,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26437:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMToken_$1365",
																				"typeString": "contract STEMToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMToken_$1365",
																				"typeString": "contract STEMToken"
																			}
																		],
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26429:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1050,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26429:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26429:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1054,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "26444:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1046,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "26394:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26404:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "26394:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26394:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26457:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26386:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "26386:94:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "26501:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1061,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26511:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26515:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26511:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "26523:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "26491:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26491:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "26491:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26557:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26561:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26557:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "26569:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1070,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "26581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "BuyStem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "26549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26549:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "EmitStatement",
												"src": "26544:48:0"
											}
										]
									},
									"functionSelector": "bb285554",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyStem",
									"nameLocation": "26224:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "26240:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "26232:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26231:20:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26261:0:0"
									},
									"scope": 1365,
									"src": "26215:384:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "26683:916:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1080,
																"name": "stemAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "26701:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26714:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26701:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26717:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26693:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "26693:56:0"
											},
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "usdtAmount",
														"nameLocation": "26819:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "26811:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1088,
																	"name": "stemAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "26833:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26846:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "26833:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1091,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "26832:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1092,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "26854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26832:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26811:51:0"
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "fairUsdtAmount",
														"nameLocation": "26977:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "26969:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1095,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "stemAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "26994:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27007:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "26994:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26969:42:0"
											},
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "expectedStems",
														"nameLocation": "27029:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "27021:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "fairUsdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "27045:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1104,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "27062:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27045:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27021:49:0"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "profitStems",
														"nameLocation": "27088:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "27080:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "expectedStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "27102:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1110,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "27118:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27102:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27160:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27102:59:0",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1112,
															"name": "expectedStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "27131:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1113,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "27147:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27131:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27080:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1119,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27272:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "27280:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "27290:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "27258:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27258:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "27258:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1125,
															"name": "profitStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "27315:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27315:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1128,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "27334:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27360:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27352:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27352:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27352:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "27334:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27315:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "27311:126:0",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "27364:73:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1136,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "27388:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "profitTreasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "27398:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1138,
																		"name": "profitStems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "27414:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1135,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "27378:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27378:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1140,
															"nodeType": "ExpressionStatement",
															"src": "27378:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1146,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27474:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27478:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27474:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1148,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "27486:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1144,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "27455:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27465:8:0",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "27455:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27455:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207061796f7574206661696c6564",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27499:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																"typeString": "literal_string \"USDT payout failed\""
															},
															"value": "USDT payout failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																"typeString": "literal_string \"USDT payout failed\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27447:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "27447:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27544:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27548:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27544:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "27556:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1157,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "27568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1158,
															"name": "profitStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "27580:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1153,
														"name": "SellStem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "27535:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27535:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "EmitStatement",
												"src": "27530:62:0"
											}
										]
									},
									"functionSelector": "5d91e3f8",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellStem",
									"nameLocation": "26645:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "26662:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "26654:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26653:20:0"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26683:0:0"
									},
									"scope": 1365,
									"src": "26636:963:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "27695:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "27711:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1173,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "27715:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27724:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "27715:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1171,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "27705:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27705:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "27705:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1179,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "27751:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "27755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "27744:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27744:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "EmitStatement",
												"src": "27739:23:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "onlyOwner",
												"nameLocations": [
													"27685:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "27685:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27685:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "27643:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27656:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "27648:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27668:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "27660:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27647:28:0"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27695:0:0"
									},
									"scope": 1365,
									"src": "27634:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "27867:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "27883:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1195,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "27889:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27898:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "27889:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "27877:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27877:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "27877:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1201,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "27925:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "27931:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "27918:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27918:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "EmitStatement",
												"src": "27913:25:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1190,
												"name": "onlyOwner",
												"nameLocations": [
													"27857:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "27857:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27857:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "27813:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "27818:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27840:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "27832:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27817:30:0"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27867:0:0"
									},
									"scope": 1365,
									"src": "27804:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "28048:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1214,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "28066:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28077:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "28066:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792072617465206d757374206265203e3d2031205354454d",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28083:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																"typeString": "literal_string \"Buy rate must be >= 1 STEM\""
															},
															"value": "Buy rate must be >= 1 STEM"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																"typeString": "literal_string \"Buy rate must be >= 1 STEM\""
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28058:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "28058:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1221,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "28130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1222,
																"name": "sellRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "28141:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28130:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792072617465206d757374206265203c3d2053656c6c2072617465",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28151:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																"typeString": "literal_string \"Buy rate must be <= Sell rate\""
															},
															"value": "Buy rate must be <= Sell rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																"typeString": "literal_string \"Buy rate must be <= Sell rate\""
															}
														],
														"id": 1220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28122:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "28122:61:0"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "buyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "28193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1228,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "28203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28193:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "28193:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1232,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "28240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "BuyRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "28225:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28225:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "EmitStatement",
												"src": "28220:28:0"
											}
										]
									},
									"functionSelector": "85e436bf",
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1210,
												"name": "onlyOwner",
												"nameLocations": [
													"28038:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "28038:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28038:9:0"
										}
									],
									"name": "setBuyRate",
									"nameLocation": "28001:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "28020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "28012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28011:17:0"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28048:0:0"
									},
									"scope": 1365,
									"src": "27992:263:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "28382:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "28400:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28411:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "28400:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "unicodeString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28417:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																"typeString": "literal_string hex\"53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454\""
															},
															"value": "Sell rate must be ≥ 1 STEM per USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																"typeString": "literal_string hex\"53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454\""
															}
														],
														"id": 1243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28392:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "28392:72:0"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "28474:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1251,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "28485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28474:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "28474:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1255,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "28523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "SellRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "28507:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28507:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "EmitStatement",
												"src": "28502:29:0"
											}
										]
									},
									"functionSelector": "8e0b017d",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1240,
												"name": "onlyOwner",
												"nameLocations": [
													"28372:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "28372:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28372:9:0"
										}
									],
									"name": "setSellRate",
									"nameLocation": "28334:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "28354:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "28346:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28345:17:0"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28382:0:0"
									},
									"scope": 1365,
									"src": "28325:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "28646:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1271,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "28683:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1272,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "28687:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1269,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "28664:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28674:8:0",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "28664:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28664:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177206661696c6564",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28696:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															},
															"value": "Withdraw failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28656:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28656:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "28656:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1278,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "28743:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "28747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1277,
														"name": "USDTWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "28729:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28729:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "EmitStatement",
												"src": "28724:30:0"
											}
										]
									},
									"functionSelector": "1481794e",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "onlyOwner",
												"nameLocations": [
													"28636:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "28636:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28636:9:0"
										}
									],
									"name": "withdrawUSDT",
									"nameLocation": "28586:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28607:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "28599:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "28611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28598:28:0"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28646:0:0"
									},
									"scope": 1365,
									"src": "28577:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "28878:78:0",
										"statements": [
											{
												"expression": {
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1290,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "28888:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1291,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "28899:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28888:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "28888:20:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1295,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "28939:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1294,
														"name": "TreasuryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "28923:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28923:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "EmitStatement",
												"src": "28918:31:0"
											}
										]
									},
									"functionSelector": "f0f44260",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "onlyOwner",
												"nameLocations": [
													"28868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "28868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28868:9:0"
										}
									],
									"name": "setTreasury",
									"nameLocation": "28828:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "28848:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "28840:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28839:19:0"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28878:0:0"
									},
									"scope": 1365,
									"src": "28819:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "29071:90:0",
										"statements": [
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1306,
														"name": "profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "29081:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "29098:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29081:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "29081:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1311,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "29144:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1310,
														"name": "ProfitTreasuryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "29122:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29122:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "EmitStatement",
												"src": "29117:37:0"
											}
										]
									},
									"functionSelector": "0f7e730b",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyOwner",
												"nameLocations": [
													"29061:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "29061:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29061:9:0"
										}
									],
									"name": "setProfitTreasury",
									"nameLocation": "29015:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "29041:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "29033:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29032:19:0"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29071:0:0"
									},
									"scope": 1365,
									"src": "29006:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "29545:360:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1336,
															"name": "buyRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "29584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1337,
															"name": "sellRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "29609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1338,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "29635:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1339,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "29661:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1341,
																	"name": "treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "29703:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1340,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "29693:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29693:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1344,
																	"name": "profitTreasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "29740:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1343,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "29730:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29730:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1349,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "29791:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMToken_$1365",
																				"typeString": "contract STEMToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMToken_$1365",
																				"typeString": "contract STEMToken"
																			}
																		],
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29783:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1347,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "29783:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29783:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1346,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "29773:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29773:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1356,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "29843:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMToken_$1365",
																				"typeString": "contract STEMToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMToken_$1365",
																				"typeString": "contract STEMToken"
																			}
																		],
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29835:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1354,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "29835:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29835:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1352,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "29815:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29825:9:0",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "29815:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29815:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1359,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "29867:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29867:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1361,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29566:328:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,address,address,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1362,
												"nodeType": "Return",
												"src": "29559:335:0"
											}
										]
									},
									"functionSelector": "c3f909d4",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConfig",
									"nameLocation": "29208:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29217:2:0"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_buyRate",
												"nameLocation": "29260:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29252:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_sellRate",
												"nameLocation": "29286:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29278:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "29313:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29305:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "_profitTreasury",
												"nameLocation": "29340:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29332:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "treasuryStemBalance",
												"nameLocation": "29373:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29365:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "profitStemBalance",
												"nameLocation": "29410:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29402:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "contractStemBalance",
												"nameLocation": "29445:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29437:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "contractUsdtBalance",
												"nameLocation": "29482:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29474:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "totalStemSupply",
												"nameLocation": "29519:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "29511:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29242:302:0"
									},
									"scope": 1365,
									"src": "29199:706:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1366,
							"src": "24917:4990:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793,
								942,
								952,
								958,
								964,
								968,
								972,
								976,
								980,
								986
							]
						}
					],
					"src": "164:29744:0"
				},
				"id": 0
			}
		}
	}
}