{
	"id": "ce0e9f576a42b54e034e0e87ded7ca76",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/STEMMER.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // For USDT\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract STEMMER is ERC20, Ownable {\n\n    IERC20 public usdtToken;\n\n    uint256 public buyRate = 1e18;      // Fixed: 1 USDT = 1 STEM\n    uint256 public sellRate = 1e18;     // Dynamic: ≥ 1 STEM per USDT\n\n    address public treasury;\n    address public profitTreasury;\n\n    // 🔧 NEW STATE VARIABLES\n    uint256 public profitThreshold;\n    uint256 public accumulatedProfit;\n\n    // 📢 Events\n    event BuyStem(address indexed buyer, uint256 usdtAmount, uint256 stemAmount);\n    event SellStem(address indexed seller, uint256 stemAmount, uint256 usdtAmount, uint256 profitStems);\n    event Minted(address indexed to, uint256 amount);\n    event Burned(address indexed from, uint256 amount);\n    event SellRateUpdated(uint256 newSellRate);\n    event BuyRateUpdated(uint256 newBuyRate);\n    event TreasuryChanged(address indexed newTreasury);\n    event ProfitTreasuryChanged(address indexed newProfitTreasury);\n    event USDTWithdrawn(address indexed to, uint256 amount);\n    event ProfitThresholdUpdated(uint256 newThreshold);\n    event AccumulatedProfitWithdrawn(uint256 amount);\n\n    constructor(\n        address _usdtTokenAddress,\n        address _treasury,\n        address _profitTreasury,\n        uint256 initialSupply,\n        uint256 _profitThreshold\n    ) ERC20(\"STEMMER\", \"STEM\") Ownable(msg.sender) {\n        usdtToken = IERC20(_usdtTokenAddress);\n        treasury = _treasury;\n        profitTreasury = _profitTreasury;\n        profitThreshold = _profitThreshold;\n        _mint(treasury, initialSupply * 1e18);\n    }\n\n    // 🔁 Buy STEM with USDT (always 1 USDT = 1 STEM)\n    function buyStem(uint256 usdtAmount) external {\n        require(usdtAmount > 0, \"Amount must be greater than 0\");\n\n        uint256 stemAmount = usdtAmount * 1e18;\n        require(usdtToken.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\");\n\n        _transfer(treasury, msg.sender, stemAmount);\n        emit BuyStem(msg.sender, usdtAmount, stemAmount);\n    }\n\n    // 🔁 Sell STEM for USDT\n    function sellStem(uint256 stemAmount) external {\n        require(stemAmount > 0, \"Amount must be greater than 0\");\n\n        // Calculate USDT payout based on sellRate\n        uint256 usdtAmount = (stemAmount * 1e18) / sellRate;\n\n        // Calculate expected STEM if sellRate = 1.0\n        uint256 fairUsdtAmount = stemAmount / 1e18;\n        uint256 expectedStems = fairUsdtAmount * sellRate;\n        uint256 profitStems = expectedStems > stemAmount ? expectedStems - stemAmount : 0;\n\n        // Transfer user's STEMs to treasury\n        _transfer(msg.sender, treasury, stemAmount);\n\n        // 🔧 PROFIT HANDLING — BATCHED\n        if (profitStems > 0 && profitTreasury != address(0)) {\n            accumulatedProfit += profitStems;\n\n            if (accumulatedProfit >= profitThreshold) {\n                _transfer(treasury, profitTreasury, accumulatedProfit);\n                accumulatedProfit = 0;\n            }\n        }\n\n        require(usdtToken.transfer(msg.sender, usdtAmount), \"USDT payout failed\");\n        emit SellStem(msg.sender, stemAmount, usdtAmount, profitStems);\n    }\n\n    // 🧠 Admin: Mint STEM\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount * 1e18);\n        emit Minted(to, amount);\n    }\n\n    // 🧹 Admin: Burn STEM\n    function burn(address from, uint256 amount) external onlyOwner {\n        _burn(from, amount * 1e18);\n        emit Burned(from, amount);\n    }\n\n    // ⚙️ Admin: Change STEM buy rate\n    function setBuyRate(uint256 newRate) external onlyOwner {\n        require(newRate >= 1e18, \"Buy rate must be >= 1 STEM\");\n        require(newRate <= sellRate, \"Buy rate must be <= Sell rate\");\n        buyRate = newRate;\n        emit BuyRateUpdated(newRate);\n    }\n\n    // ⚙️ Admin: Set Sell Rate\n    function setSellRate(uint256 newRate) external onlyOwner {\n        require(newRate >= 1e18, unicode\"Sell rate must be ≥ 1 STEM per USDT\");\n        sellRate = newRate;\n        emit SellRateUpdated(newRate);\n    }\n\n    // 🏦 Admin: Withdraw USDT\n    function withdrawUSDT(address to, uint256 amount) external onlyOwner {\n        require(usdtToken.transfer(to, amount), \"Withdraw failed\");\n        emit USDTWithdrawn(to, amount);\n    }\n\n    // 🏦 Admin: Set main treasury\n    function setTreasury(address _treasury) external onlyOwner {\n        treasury = _treasury;\n        emit TreasuryChanged(_treasury);\n    }\n\n    // 🏦 Admin: Set profit wallet\n    function setProfitTreasury(address _treasury) external onlyOwner {\n        profitTreasury = _treasury;\n        emit ProfitTreasuryChanged(_treasury);\n    }\n\n    // 🔧 NEW: Set profit threshold\n    function setProfitThreshold(uint256 newThreshold) external onlyOwner {\n        require(newThreshold > 0, \"Threshold must be > 0\");\n        profitThreshold = newThreshold;\n        emit ProfitThresholdUpdated(newThreshold);\n    }\n\n    // 🔧 NEW: Withdraw any accumulated profit manually\n    function withdrawAccumulatedProfit() external onlyOwner {\n        require(accumulatedProfit > 0, \"No profit to withdraw\");\n        _transfer(treasury, profitTreasury, accumulatedProfit);\n        emit AccumulatedProfitWithdrawn(accumulatedProfit);\n        accumulatedProfit = 0;\n    }\n\n    // Optional frontend helper\n    function getConfig() external view returns (\n        uint256 _buyRate,\n        uint256 _sellRate,\n        address _treasury,\n        address _profitTreasury,\n        uint256 treasuryStemBalance,\n        uint256 profitStemBalance,\n        uint256 contractStemBalance,\n        uint256 contractUsdtBalance,\n        uint256 totalStemSupply,\n        uint256 _accumulatedProfit,\n        uint256 _profitThreshold\n    ) {\n        return (\n            buyRate,\n            sellRate,\n            treasury,\n            profitTreasury,\n            balanceOf(treasury),\n            balanceOf(profitTreasury),\n            balanceOf(address(this)),\n            usdtToken.balanceOf(address(this)),\n            totalSupply(),\n            accumulatedProfit,\n            profitThreshold\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/STEMMER.sol": {
				"STEMMER": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_profitTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_profitThreshold",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AccumulatedProfitWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBuyRate",
									"type": "uint256"
								}
							],
							"name": "BuyRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								}
							],
							"name": "BuyStem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newThreshold",
									"type": "uint256"
								}
							],
							"name": "ProfitThresholdUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newProfitTreasury",
									"type": "address"
								}
							],
							"name": "ProfitTreasuryChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSellRate",
									"type": "uint256"
								}
							],
							"name": "SellRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profitStems",
									"type": "uint256"
								}
							],
							"name": "SellStem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "USDTWithdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accumulatedProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								}
							],
							"name": "buyStem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getConfig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_buyRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_profitTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "treasuryStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "profitStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractUsdtBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStemSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_accumulatedProfit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_profitThreshold",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								}
							],
							"name": "sellStem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setBuyRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newThreshold",
									"type": "uint256"
								}
							],
							"name": "setProfitThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setProfitTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setSellRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAccumulatedProfit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/STEMMER.sol\":237:6293  contract STEMMER is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/STEMMER.sol\":334:338  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMMER.sol\":309:338  uint256 public buyRate = 1e18 */\n  0x07\n  sstore\n    /* \"contracts/STEMMER.sol\":401:405  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMMER.sol\":375:405  uint256 public sellRate = 1e18 */\n  0x08\n  sstore\n    /* \"contracts/STEMMER.sol\":1326:1766  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/STEMMER.sol\":1537:1547  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x5354454d4d455200000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5354454d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/STEMMER.sol\":1578:1595  _usdtTokenAddress */\n  dup5\n    /* \"contracts/STEMMER.sol\":1559:1568  usdtToken */\n  0x06\n  0x00\n    /* \"contracts/STEMMER.sol\":1559:1596  usdtToken = IERC20(_usdtTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER.sol\":1617:1626  _treasury */\n  dup4\n    /* \"contracts/STEMMER.sol\":1606:1614  treasury */\n  0x09\n  0x00\n    /* \"contracts/STEMMER.sol\":1606:1626  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER.sol\":1653:1668  _profitTreasury */\n  dup3\n    /* \"contracts/STEMMER.sol\":1636:1650  profitTreasury */\n  0x0a\n  0x00\n    /* \"contracts/STEMMER.sol\":1636:1668  profitTreasury = _profitTreasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER.sol\":1696:1712  _profitThreshold */\n  dup1\n    /* \"contracts/STEMMER.sol\":1678:1693  profitThreshold */\n  0x0b\n    /* \"contracts/STEMMER.sol\":1678:1712  profitThreshold = _profitThreshold */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMMER.sol\":1722:1759  _mint(treasury, initialSupply * 1e18) */\n  tag_18\n    /* \"contracts/STEMMER.sol\":1728:1736  treasury */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMMER.sol\":1754:1758  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMMER.sol\":1738:1751  initialSupply */\n  dup5\n    /* \"contracts/STEMMER.sol\":1738:1758  initialSupply * 1e18 */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/STEMMER.sol\":1722:1727  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/STEMMER.sol\":1722:1759  _mint(treasury, initialSupply * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/STEMMER.sol\":1326:1766  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/STEMMER.sol\":237:6293  contract STEMMER is ERC20, Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_44:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_45:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_79\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_44\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_46:\n    /* \"#utility.yul\":641:665   */\n  tag_81\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_82:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_47:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_84\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_48:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_49:\n    /* \"#utility.yul\":1001:1025   */\n  tag_87\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_88:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_50:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_90\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_49\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  dup1\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  dup1\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_93\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1360:1480   */\ntag_92:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_94\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_95\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_47\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_96\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_97\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_50\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_98\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_50\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2188:2287   */\ntag_51:\n    /* \"#utility.yul\":2240:2246   */\n  0x00\n    /* \"#utility.yul\":2274:2279   */\n  dup2\n    /* \"#utility.yul\":2268:2280   */\n  mload\n    /* \"#utility.yul\":2258:2280   */\n  swap1\n  pop\n    /* \"#utility.yul\":2188:2287   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2293:2473   */\ntag_52:\n    /* \"#utility.yul\":2341:2418   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2338:2339   */\n  0x00\n    /* \"#utility.yul\":2331:2419   */\n  mstore\n    /* \"#utility.yul\":2438:2442   */\n  0x41\n    /* \"#utility.yul\":2435:2436   */\n  0x04\n    /* \"#utility.yul\":2428:2443   */\n  mstore\n    /* \"#utility.yul\":2462:2466   */\n  0x24\n    /* \"#utility.yul\":2459:2460   */\n  0x00\n    /* \"#utility.yul\":2452:2467   */\n  revert\n    /* \"#utility.yul\":2479:2659   */\ntag_53:\n    /* \"#utility.yul\":2527:2604   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2517:2605   */\n  mstore\n    /* \"#utility.yul\":2624:2628   */\n  0x22\n    /* \"#utility.yul\":2621:2622   */\n  0x04\n    /* \"#utility.yul\":2614:2629   */\n  mstore\n    /* \"#utility.yul\":2648:2652   */\n  0x24\n    /* \"#utility.yul\":2645:2646   */\n  0x00\n    /* \"#utility.yul\":2638:2653   */\n  revert\n    /* \"#utility.yul\":2665:2985   */\ntag_54:\n    /* \"#utility.yul\":2709:2715   */\n  0x00\n    /* \"#utility.yul\":2746:2747   */\n  0x02\n    /* \"#utility.yul\":2740:2744   */\n  dup3\n    /* \"#utility.yul\":2736:2748   */\n  div\n    /* \"#utility.yul\":2726:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2793:2794   */\n  0x01\n    /* \"#utility.yul\":2787:2791   */\n  dup3\n    /* \"#utility.yul\":2783:2795   */\n  and\n    /* \"#utility.yul\":2814:2832   */\n  dup1\n    /* \"#utility.yul\":2804:2885   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2870:2874   */\n  0x7f\n    /* \"#utility.yul\":2862:2868   */\n  dup3\n    /* \"#utility.yul\":2858:2875   */\n  and\n    /* \"#utility.yul\":2848:2875   */\n  swap2\n  pop\n    /* \"#utility.yul\":2804:2885   */\ntag_103:\n    /* \"#utility.yul\":2932:2934   */\n  0x20\n    /* \"#utility.yul\":2924:2930   */\n  dup3\n    /* \"#utility.yul\":2921:2935   */\n  lt\n    /* \"#utility.yul\":2901:2919   */\n  dup2\n    /* \"#utility.yul\":2898:2936   */\n  sub\n    /* \"#utility.yul\":2895:2979   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2951:2969   */\n  tag_105\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2895:2979   */\ntag_104:\n    /* \"#utility.yul\":2716:2985   */\n  pop\n    /* \"#utility.yul\":2665:2985   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2991:3132   */\ntag_55:\n    /* \"#utility.yul\":3040:3044   */\n  0x00\n    /* \"#utility.yul\":3063:3066   */\n  dup2\n    /* \"#utility.yul\":3055:3066   */\n  swap1\n  pop\n    /* \"#utility.yul\":3086:3089   */\n  dup2\n    /* \"#utility.yul\":3083:3084   */\n  0x00\n    /* \"#utility.yul\":3076:3090   */\n  mstore\n    /* \"#utility.yul\":3120:3124   */\n  0x20\n    /* \"#utility.yul\":3117:3118   */\n  0x00\n    /* \"#utility.yul\":3107:3125   */\n  keccak256\n    /* \"#utility.yul\":3099:3125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2991:3132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3138:3231   */\ntag_56:\n    /* \"#utility.yul\":3175:3181   */\n  0x00\n    /* \"#utility.yul\":3222:3224   */\n  0x20\n    /* \"#utility.yul\":3217:3219   */\n  0x1f\n    /* \"#utility.yul\":3210:3215   */\n  dup4\n    /* \"#utility.yul\":3206:3220   */\n  add\n    /* \"#utility.yul\":3202:3225   */\n  div\n    /* \"#utility.yul\":3192:3225   */\n  swap1\n  pop\n    /* \"#utility.yul\":3138:3231   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3237:3344   */\ntag_57:\n    /* \"#utility.yul\":3281:3289   */\n  0x00\n    /* \"#utility.yul\":3331:3336   */\n  dup3\n    /* \"#utility.yul\":3325:3329   */\n  dup3\n    /* \"#utility.yul\":3321:3337   */\n  shl\n    /* \"#utility.yul\":3300:3337   */\n  swap1\n  pop\n    /* \"#utility.yul\":3237:3344   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3350:3743   */\ntag_58:\n    /* \"#utility.yul\":3419:3425   */\n  0x00\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3457:3467   */\n  dup4\n    /* \"#utility.yul\":3453:3471   */\n  mul\n    /* \"#utility.yul\":3492:3589   */\n  tag_110\n    /* \"#utility.yul\":3522:3588   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3511:3520   */\n  dup3\n    /* \"#utility.yul\":3492:3589   */\n  tag_57\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3610:3649   */\n  tag_111\n    /* \"#utility.yul\":3640:3648   */\n  dup7\n    /* \"#utility.yul\":3629:3638   */\n  dup4\n    /* \"#utility.yul\":3610:3649   */\n  tag_57\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3598:3649   */\n  swap6\n  pop\n    /* \"#utility.yul\":3682:3686   */\n  dup1\n    /* \"#utility.yul\":3678:3687   */\n  not\n    /* \"#utility.yul\":3671:3676   */\n  dup5\n    /* \"#utility.yul\":3667:3688   */\n  and\n    /* \"#utility.yul\":3658:3688   */\n  swap4\n  pop\n    /* \"#utility.yul\":3731:3735   */\n  dup1\n    /* \"#utility.yul\":3721:3729   */\n  dup7\n    /* \"#utility.yul\":3717:3736   */\n  and\n    /* \"#utility.yul\":3710:3715   */\n  dup5\n    /* \"#utility.yul\":3707:3737   */\n  or\n    /* \"#utility.yul\":3697:3737   */\n  swap3\n  pop\n    /* \"#utility.yul\":3426:3743   */\n  pop\n  pop\n    /* \"#utility.yul\":3350:3743   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3749:3809   */\ntag_59:\n    /* \"#utility.yul\":3777:3780   */\n  0x00\n    /* \"#utility.yul\":3798:3803   */\n  dup2\n    /* \"#utility.yul\":3791:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3749:3809   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3815:3957   */\ntag_60:\n    /* \"#utility.yul\":3865:3874   */\n  0x00\n    /* \"#utility.yul\":3898:3951   */\n  tag_114\n    /* \"#utility.yul\":3916:3950   */\n  tag_115\n    /* \"#utility.yul\":3925:3949   */\n  tag_116\n    /* \"#utility.yul\":3943:3948   */\n  dup5\n    /* \"#utility.yul\":3925:3949   */\n  tag_48\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3916:3950   */\n  tag_59\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3898:3951   */\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3885:3951   */\n  swap1\n  pop\n    /* \"#utility.yul\":3815:3957   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3963:4038   */\ntag_61:\n    /* \"#utility.yul\":4006:4009   */\n  0x00\n    /* \"#utility.yul\":4027:4032   */\n  dup2\n    /* \"#utility.yul\":4020:4032   */\n  swap1\n  pop\n    /* \"#utility.yul\":3963:4038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4044:4313   */\ntag_62:\n    /* \"#utility.yul\":4154:4193   */\n  tag_119\n    /* \"#utility.yul\":4185:4192   */\n  dup4\n    /* \"#utility.yul\":4154:4193   */\n  tag_60\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4215:4306   */\n  tag_120\n    /* \"#utility.yul\":4264:4305   */\n  tag_121\n    /* \"#utility.yul\":4288:4304   */\n  dup3\n    /* \"#utility.yul\":4264:4305   */\n  tag_61\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4256:4262   */\n  dup5\n    /* \"#utility.yul\":4249:4253   */\n  dup5\n    /* \"#utility.yul\":4243:4254   */\n  sload\n    /* \"#utility.yul\":4215:4306   */\n  tag_58\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4209:4213   */\n  dup3\n    /* \"#utility.yul\":4202:4307   */\n  sstore\n    /* \"#utility.yul\":4120:4313   */\n  pop\n    /* \"#utility.yul\":4044:4313   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4319:4392   */\ntag_63:\n    /* \"#utility.yul\":4364:4367   */\n  0x00\n    /* \"#utility.yul\":4319:4392   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4398:4587   */\ntag_64:\n    /* \"#utility.yul\":4475:4507   */\n  tag_124\n  tag_63\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4516:4581   */\n  tag_125\n    /* \"#utility.yul\":4574:4580   */\n  dup2\n    /* \"#utility.yul\":4566:4572   */\n  dup5\n    /* \"#utility.yul\":4560:4564   */\n  dup5\n    /* \"#utility.yul\":4516:4581   */\n  tag_62\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4451:4587   */\n  pop\n    /* \"#utility.yul\":4398:4587   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4593:4779   */\ntag_65:\n    /* \"#utility.yul\":4653:4773   */\ntag_127:\n    /* \"#utility.yul\":4670:4673   */\n  dup2\n    /* \"#utility.yul\":4663:4668   */\n  dup2\n    /* \"#utility.yul\":4660:4674   */\n  lt\n    /* \"#utility.yul\":4653:4773   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4724:4763   */\n  tag_130\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4759   */\n  dup3\n    /* \"#utility.yul\":4724:4763   */\n  tag_64\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4697:4698   */\n  0x01\n    /* \"#utility.yul\":4690:4695   */\n  dup2\n    /* \"#utility.yul\":4686:4699   */\n  add\n    /* \"#utility.yul\":4677:4699   */\n  swap1\n  pop\n    /* \"#utility.yul\":4653:4773   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":4593:4779   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4785:5328   */\ntag_66:\n    /* \"#utility.yul\":4886:4888   */\n  0x1f\n    /* \"#utility.yul\":4881:4884   */\n  dup3\n    /* \"#utility.yul\":4878:4889   */\n  gt\n    /* \"#utility.yul\":4875:5321   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4920:4958   */\n  tag_133\n    /* \"#utility.yul\":4952:4957   */\n  dup2\n    /* \"#utility.yul\":4920:4958   */\n  tag_55\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5004:5033   */\n  tag_134\n    /* \"#utility.yul\":5022:5032   */\n  dup5\n    /* \"#utility.yul\":5004:5033   */\n  tag_56\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4994:5002   */\n  dup2\n    /* \"#utility.yul\":4990:5034   */\n  add\n    /* \"#utility.yul\":5187:5189   */\n  0x20\n    /* \"#utility.yul\":5175:5185   */\n  dup6\n    /* \"#utility.yul\":5172:5190   */\n  lt\n    /* \"#utility.yul\":5169:5218   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5208:5216   */\n  dup2\n    /* \"#utility.yul\":5193:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5169:5218   */\ntag_135:\n    /* \"#utility.yul\":5231:5311   */\n  tag_136\n    /* \"#utility.yul\":5287:5309   */\n  tag_137\n    /* \"#utility.yul\":5305:5308   */\n  dup6\n    /* \"#utility.yul\":5287:5309   */\n  tag_56\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5277:5285   */\n  dup4\n    /* \"#utility.yul\":5273:5310   */\n  add\n    /* \"#utility.yul\":5260:5271   */\n  dup3\n    /* \"#utility.yul\":5231:5311   */\n  tag_65\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4890:5321   */\n  pop\n  pop\n    /* \"#utility.yul\":4875:5321   */\ntag_132:\n    /* \"#utility.yul\":4785:5328   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5334:5451   */\ntag_67:\n    /* \"#utility.yul\":5388:5396   */\n  0x00\n    /* \"#utility.yul\":5438:5443   */\n  dup3\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5428:5444   */\n  shr\n    /* \"#utility.yul\":5407:5444   */\n  swap1\n  pop\n    /* \"#utility.yul\":5334:5451   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5626   */\ntag_68:\n    /* \"#utility.yul\":5501:5507   */\n  0x00\n    /* \"#utility.yul\":5534:5585   */\n  tag_140\n    /* \"#utility.yul\":5582:5583   */\n  0x00\n    /* \"#utility.yul\":5578:5584   */\n  not\n    /* \"#utility.yul\":5570:5575   */\n  dup5\n    /* \"#utility.yul\":5567:5568   */\n  0x08\n    /* \"#utility.yul\":5563:5576   */\n  mul\n    /* \"#utility.yul\":5534:5585   */\n  tag_67\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5530:5586   */\n  not\n    /* \"#utility.yul\":5615:5619   */\n  dup1\n    /* \"#utility.yul\":5609:5613   */\n  dup4\n    /* \"#utility.yul\":5605:5620   */\n  and\n    /* \"#utility.yul\":5595:5620   */\n  swap2\n  pop\n    /* \"#utility.yul\":5508:5626   */\n  pop\n    /* \"#utility.yul\":5457:5626   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5631:5926   */\ntag_69:\n    /* \"#utility.yul\":5707:5711   */\n  0x00\n    /* \"#utility.yul\":5853:5882   */\n  tag_142\n    /* \"#utility.yul\":5878:5881   */\n  dup4\n    /* \"#utility.yul\":5872:5876   */\n  dup4\n    /* \"#utility.yul\":5853:5882   */\n  tag_68\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5845:5882   */\n  swap2\n  pop\n    /* \"#utility.yul\":5915:5918   */\n  dup3\n    /* \"#utility.yul\":5912:5913   */\n  0x02\n    /* \"#utility.yul\":5908:5919   */\n  mul\n    /* \"#utility.yul\":5902:5906   */\n  dup3\n    /* \"#utility.yul\":5899:5920   */\n  or\n    /* \"#utility.yul\":5891:5920   */\n  swap1\n  pop\n    /* \"#utility.yul\":5631:5926   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5931:7326   */\ntag_9:\n    /* \"#utility.yul\":6048:6085   */\n  tag_144\n    /* \"#utility.yul\":6081:6084   */\n  dup3\n    /* \"#utility.yul\":6048:6085   */\n  tag_51\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6150:6168   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6142:6148   */\n  dup2\n    /* \"#utility.yul\":6139:6169   */\n  gt\n    /* \"#utility.yul\":6136:6192   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":6172:6190   */\n  tag_146\n  tag_52\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6136:6192   */\ntag_145:\n    /* \"#utility.yul\":6216:6254   */\n  tag_147\n    /* \"#utility.yul\":6248:6252   */\n  dup3\n    /* \"#utility.yul\":6242:6253   */\n  sload\n    /* \"#utility.yul\":6216:6254   */\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6301:6368   */\n  tag_148\n    /* \"#utility.yul\":6361:6367   */\n  dup3\n    /* \"#utility.yul\":6353:6359   */\n  dup3\n    /* \"#utility.yul\":6347:6351   */\n  dup6\n    /* \"#utility.yul\":6301:6368   */\n  tag_66\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6395:6396   */\n  0x00\n    /* \"#utility.yul\":6419:6423   */\n  0x20\n    /* \"#utility.yul\":6406:6423   */\n  swap1\n  pop\n    /* \"#utility.yul\":6451:6453   */\n  0x1f\n    /* \"#utility.yul\":6443:6449   */\n  dup4\n    /* \"#utility.yul\":6440:6454   */\n  gt\n    /* \"#utility.yul\":6468:6469   */\n  0x01\n    /* \"#utility.yul\":6463:7081   */\n  dup2\n  eq\n  tag_150\n  jumpi\n    /* \"#utility.yul\":7125:7126   */\n  0x00\n    /* \"#utility.yul\":7142:7148   */\n  dup5\n    /* \"#utility.yul\":7139:7216   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":7191:7200   */\n  dup3\n    /* \"#utility.yul\":7186:7189   */\n  dup8\n    /* \"#utility.yul\":7182:7201   */\n  add\n    /* \"#utility.yul\":7176:7202   */\n  mload\n    /* \"#utility.yul\":7167:7202   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7216   */\ntag_151:\n    /* \"#utility.yul\":7242:7309   */\n  tag_152\n    /* \"#utility.yul\":7302:7308   */\n  dup6\n    /* \"#utility.yul\":7295:7300   */\n  dup3\n    /* \"#utility.yul\":7242:7309   */\n  tag_69\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7236:7240   */\n  dup7\n    /* \"#utility.yul\":7229:7310   */\n  sstore\n    /* \"#utility.yul\":7098:7320   */\n  pop\n    /* \"#utility.yul\":6433:7320   */\n  jump(tag_149)\n    /* \"#utility.yul\":6463:7081   */\ntag_150:\n    /* \"#utility.yul\":6515:6519   */\n  0x1f\n    /* \"#utility.yul\":6511:6520   */\n  not\n    /* \"#utility.yul\":6503:6509   */\n  dup5\n    /* \"#utility.yul\":6499:6521   */\n  and\n    /* \"#utility.yul\":6549:6586   */\n  tag_153\n    /* \"#utility.yul\":6581:6585   */\n  dup7\n    /* \"#utility.yul\":6549:6586   */\n  tag_55\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6608:6609   */\n  0x00\n    /* \"#utility.yul\":6622:6830   */\ntag_154:\n    /* \"#utility.yul\":6636:6643   */\n  dup3\n    /* \"#utility.yul\":6633:6634   */\n  dup2\n    /* \"#utility.yul\":6630:6644   */\n  lt\n    /* \"#utility.yul\":6622:6830   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6715:6724   */\n  dup5\n    /* \"#utility.yul\":6710:6713   */\n  dup10\n    /* \"#utility.yul\":6706:6725   */\n  add\n    /* \"#utility.yul\":6700:6726   */\n  mload\n    /* \"#utility.yul\":6692:6698   */\n  dup3\n    /* \"#utility.yul\":6685:6727   */\n  sstore\n    /* \"#utility.yul\":6766:6767   */\n  0x01\n    /* \"#utility.yul\":6758:6764   */\n  dup3\n    /* \"#utility.yul\":6754:6768   */\n  add\n    /* \"#utility.yul\":6744:6768   */\n  swap2\n  pop\n    /* \"#utility.yul\":6813:6815   */\n  0x20\n    /* \"#utility.yul\":6802:6811   */\n  dup6\n    /* \"#utility.yul\":6798:6816   */\n  add\n    /* \"#utility.yul\":6785:6816   */\n  swap5\n  pop\n    /* \"#utility.yul\":6659:6663   */\n  0x20\n    /* \"#utility.yul\":6656:6657   */\n  dup2\n    /* \"#utility.yul\":6652:6664   */\n  add\n    /* \"#utility.yul\":6647:6664   */\n  swap1\n  pop\n    /* \"#utility.yul\":6622:6830   */\n  jump(tag_154)\ntag_156:\n    /* \"#utility.yul\":6858:6864   */\n  dup7\n    /* \"#utility.yul\":6849:6856   */\n  dup4\n    /* \"#utility.yul\":6846:6865   */\n  lt\n    /* \"#utility.yul\":6843:7022   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6916:6925   */\n  dup5\n    /* \"#utility.yul\":6911:6914   */\n  dup10\n    /* \"#utility.yul\":6907:6926   */\n  add\n    /* \"#utility.yul\":6901:6927   */\n  mload\n    /* \"#utility.yul\":6959:7007   */\n  tag_158\n    /* \"#utility.yul\":7001:7005   */\n  0x1f\n    /* \"#utility.yul\":6993:6999   */\n  dup10\n    /* \"#utility.yul\":6989:7006   */\n  and\n    /* \"#utility.yul\":6978:6987   */\n  dup3\n    /* \"#utility.yul\":6959:7007   */\n  tag_68\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6951:6957   */\n  dup4\n    /* \"#utility.yul\":6944:7008   */\n  sstore\n    /* \"#utility.yul\":6866:7022   */\n  pop\n    /* \"#utility.yul\":6843:7022   */\ntag_157:\n    /* \"#utility.yul\":7068:7069   */\n  0x01\n    /* \"#utility.yul\":7064:7065   */\n  0x02\n    /* \"#utility.yul\":7056:7062   */\n  dup9\n    /* \"#utility.yul\":7052:7066   */\n  mul\n    /* \"#utility.yul\":7048:7070   */\n  add\n    /* \"#utility.yul\":7042:7046   */\n  dup9\n    /* \"#utility.yul\":7035:7071   */\n  sstore\n    /* \"#utility.yul\":6470:7081   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6433:7320   */\ntag_149:\n  pop\n    /* \"#utility.yul\":6023:7326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5931:7326   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7332:7450   */\ntag_70:\n    /* \"#utility.yul\":7419:7443   */\n  tag_160\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7419:7443   */\n  tag_45\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7414:7417   */\n  dup3\n    /* \"#utility.yul\":7407:7444   */\n  mstore\n    /* \"#utility.yul\":7332:7450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7456:7678   */\ntag_14:\n    /* \"#utility.yul\":7549:7553   */\n  0x00\n    /* \"#utility.yul\":7587:7589   */\n  0x20\n    /* \"#utility.yul\":7576:7585   */\n  dup3\n    /* \"#utility.yul\":7572:7590   */\n  add\n    /* \"#utility.yul\":7564:7590   */\n  swap1\n  pop\n    /* \"#utility.yul\":7600:7671   */\n  tag_162\n    /* \"#utility.yul\":7668:7669   */\n  0x00\n    /* \"#utility.yul\":7657:7666   */\n  dup4\n    /* \"#utility.yul\":7653:7670   */\n  add\n    /* \"#utility.yul\":7644:7650   */\n  dup5\n    /* \"#utility.yul\":7600:7671   */\n  tag_70\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7456:7678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7684:7864   */\ntag_71:\n    /* \"#utility.yul\":7732:7809   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7729:7730   */\n  0x00\n    /* \"#utility.yul\":7722:7810   */\n  mstore\n    /* \"#utility.yul\":7829:7833   */\n  0x11\n    /* \"#utility.yul\":7826:7827   */\n  0x04\n    /* \"#utility.yul\":7819:7834   */\n  mstore\n    /* \"#utility.yul\":7853:7857   */\n  0x24\n    /* \"#utility.yul\":7850:7851   */\n  0x00\n    /* \"#utility.yul\":7843:7858   */\n  revert\n    /* \"#utility.yul\":7870:8280   */\ntag_20:\n    /* \"#utility.yul\":7910:7917   */\n  0x00\n    /* \"#utility.yul\":7933:7953   */\n  tag_165\n    /* \"#utility.yul\":7951:7952   */\n  dup3\n    /* \"#utility.yul\":7933:7953   */\n  tag_48\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7928:7953   */\n  swap2\n  pop\n    /* \"#utility.yul\":7967:7987   */\n  tag_166\n    /* \"#utility.yul\":7985:7986   */\n  dup4\n    /* \"#utility.yul\":7967:7987   */\n  tag_48\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7962:7987   */\n  swap3\n  pop\n    /* \"#utility.yul\":8022:8023   */\n  dup3\n    /* \"#utility.yul\":8019:8020   */\n  dup3\n    /* \"#utility.yul\":8015:8024   */\n  mul\n    /* \"#utility.yul\":8044:8074   */\n  tag_167\n    /* \"#utility.yul\":8062:8073   */\n  dup2\n    /* \"#utility.yul\":8044:8074   */\n  tag_48\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8033:8074   */\n  swap2\n  pop\n    /* \"#utility.yul\":8223:8224   */\n  dup3\n    /* \"#utility.yul\":8214:8221   */\n  dup3\n    /* \"#utility.yul\":8210:8225   */\n  div\n    /* \"#utility.yul\":8207:8208   */\n  dup5\n    /* \"#utility.yul\":8204:8226   */\n  eq\n    /* \"#utility.yul\":8184:8185   */\n  dup4\n    /* \"#utility.yul\":8177:8186   */\n  iszero\n    /* \"#utility.yul\":8157:8240   */\n  or\n    /* \"#utility.yul\":8134:8273   */\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8253:8271   */\n  tag_169\n  tag_71\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8134:8273   */\ntag_168:\n    /* \"#utility.yul\":7918:8280   */\n  pop\n    /* \"#utility.yul\":7870:8280   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8286:8477   */\ntag_32:\n    /* \"#utility.yul\":8326:8329   */\n  0x00\n    /* \"#utility.yul\":8345:8365   */\n  tag_171\n    /* \"#utility.yul\":8363:8364   */\n  dup3\n    /* \"#utility.yul\":8345:8365   */\n  tag_48\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8340:8365   */\n  swap2\n  pop\n    /* \"#utility.yul\":8379:8399   */\n  tag_172\n    /* \"#utility.yul\":8397:8398   */\n  dup4\n    /* \"#utility.yul\":8379:8399   */\n  tag_48\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8374:8399   */\n  swap3\n  pop\n    /* \"#utility.yul\":8422:8423   */\n  dup3\n    /* \"#utility.yul\":8419:8420   */\n  dup3\n    /* \"#utility.yul\":8415:8424   */\n  add\n    /* \"#utility.yul\":8408:8424   */\n  swap1\n  pop\n    /* \"#utility.yul\":8443:8446   */\n  dup1\n    /* \"#utility.yul\":8440:8441   */\n  dup3\n    /* \"#utility.yul\":8437:8447   */\n  gt\n    /* \"#utility.yul\":8434:8470   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8450:8468   */\n  tag_174\n  tag_71\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8434:8470   */\ntag_173:\n    /* \"#utility.yul\":8286:8477   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8483:8601   */\ntag_72:\n    /* \"#utility.yul\":8570:8594   */\n  tag_176\n    /* \"#utility.yul\":8588:8593   */\n  dup2\n    /* \"#utility.yul\":8570:8594   */\n  tag_48\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8565:8568   */\n  dup3\n    /* \"#utility.yul\":8558:8595   */\n  mstore\n    /* \"#utility.yul\":8483:8601   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8607:9049   */\ntag_36:\n    /* \"#utility.yul\":8756:8760   */\n  0x00\n    /* \"#utility.yul\":8794:8796   */\n  0x60\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8779:8797   */\n  add\n    /* \"#utility.yul\":8771:8797   */\n  swap1\n  pop\n    /* \"#utility.yul\":8807:8878   */\n  tag_178\n    /* \"#utility.yul\":8875:8876   */\n  0x00\n    /* \"#utility.yul\":8864:8873   */\n  dup4\n    /* \"#utility.yul\":8860:8877   */\n  add\n    /* \"#utility.yul\":8851:8857   */\n  dup7\n    /* \"#utility.yul\":8807:8878   */\n  tag_70\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8888:8960   */\n  tag_179\n    /* \"#utility.yul\":8956:8958   */\n  0x20\n    /* \"#utility.yul\":8945:8954   */\n  dup4\n    /* \"#utility.yul\":8941:8959   */\n  add\n    /* \"#utility.yul\":8932:8938   */\n  dup6\n    /* \"#utility.yul\":8888:8960   */\n  tag_72\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8970:9042   */\n  tag_180\n    /* \"#utility.yul\":9038:9040   */\n  0x40\n    /* \"#utility.yul\":9027:9036   */\n  dup4\n    /* \"#utility.yul\":9023:9041   */\n  add\n    /* \"#utility.yul\":9014:9020   */\n  dup5\n    /* \"#utility.yul\":8970:9042   */\n  tag_72\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8607:9049   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9055:9277   */\ntag_40:\n    /* \"#utility.yul\":9148:9152   */\n  0x00\n    /* \"#utility.yul\":9186:9188   */\n  0x20\n    /* \"#utility.yul\":9175:9184   */\n  dup3\n    /* \"#utility.yul\":9171:9189   */\n  add\n    /* \"#utility.yul\":9163:9189   */\n  swap1\n  pop\n    /* \"#utility.yul\":9199:9270   */\n  tag_182\n    /* \"#utility.yul\":9267:9268   */\n  0x00\n    /* \"#utility.yul\":9256:9265   */\n  dup4\n    /* \"#utility.yul\":9252:9269   */\n  add\n    /* \"#utility.yul\":9243:9249   */\n  dup5\n    /* \"#utility.yul\":9199:9270   */\n  tag_72\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9055:9277   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/STEMMER.sol\":237:6293  contract STEMMER is ERC20, Ownable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/STEMMER.sol\":237:6293  contract STEMMER is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85e436bf\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc3f909d4\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf974821a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xfc37987b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xff90b54d\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xc3f909d4\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf203787c\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x9dc29fac\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbb285554\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x85e436bf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8e0b017d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x313ce567\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x6217229b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x6217229b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x748e37f4\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5d91e3f8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x1481794e\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x1481794e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x28821182\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0f7e730b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":4696:4851  function setProfitTreasury(address _treasury) external onlyOwner {... */\n    tag_5:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/STEMMER.sol\":4289:4473  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n    tag_6:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":4895:5122  function setProfitThreshold(uint256 newThreshold) external onlyOwner {... */\n    tag_9:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":3374:3509  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/STEMMER.sol\":2249:3339  function sellStem(uint256 stemAmount) external {... */\n    tag_12:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/STEMMER.sol\":448:471  address public treasury */\n    tag_13:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":375:405  uint256 public sellRate = 1e18 */\n    tag_14:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/STEMMER.sol\":581:613  uint256 public accumulatedProfit */\n    tag_17:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":3733:3996  function setBuyRate(uint256 newRate) external onlyOwner {... */\n    tag_18:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":4037:4250  function setSellRate(uint256 newRate) external onlyOwner {... */\n    tag_20:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":3544:3685  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":279:302  IERC20 public usdtToken */\n    tag_24:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":1828:2212  function buyStem(uint256 usdtAmount) external {... */\n    tag_25:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/STEMMER.sol\":5507:6291  function getConfig() external view returns (... */\n    tag_26:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap12\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":4516:4653  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_28:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"contracts/STEMMER.sol\":477:506  address public profitTreasury */\n    tag_29:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/STEMMER.sol\":545:575  uint256 public profitThreshold */\n    tag_31:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":309:338  uint256 public buyRate = 1e18 */\n    tag_32:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMMER.sol\":5186:5469  function withdrawAccumulatedProfit() external onlyOwner {... */\n    tag_33:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_151\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":4696:4851  function setProfitTreasury(address _treasury) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/STEMMER.sol\":4788:4797  _treasury */\n      dup1\n        /* \"contracts/STEMMER.sol\":4771:4785  profitTreasury */\n      0x0a\n      0x00\n        /* \"contracts/STEMMER.sol\":4771:4797  profitTreasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":4834:4843  _treasury */\n      dup1\n        /* \"contracts/STEMMER.sol\":4812:4844  ProfitTreasuryChanged(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":4696:4851  function setProfitTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":4289:4473  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/STEMMER.sol\":4376:4385  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":4376:4394  usdtToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/STEMMER.sol\":4395:4397  to */\n      dup4\n        /* \"contracts/STEMMER.sol\":4399:4405  amount */\n      dup4\n        /* \"contracts/STEMMER.sol\":4376:4406  usdtToken.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/STEMMER.sol\":4368:4426  require(usdtToken.transfer(to, amount), \"Withdraw failed\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/STEMMER.sol\":4455:4457  to */\n      dup2\n        /* \"contracts/STEMMER.sol\":4441:4466  USDTWithdrawn(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b\n        /* \"contracts/STEMMER.sol\":4459:4465  amount */\n      dup3\n        /* \"contracts/STEMMER.sol\":4441:4466  USDTWithdrawn(to, amount) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":4289:4473  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":4895:5122  function setProfitThreshold(uint256 newThreshold) external onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/STEMMER.sol\":4997:4998  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":4982:4994  newThreshold */\n      dup2\n        /* \"contracts/STEMMER.sol\":4982:4998  newThreshold > 0 */\n      gt\n        /* \"contracts/STEMMER.sol\":4974:5024  require(newThreshold > 0, \"Threshold must be > 0\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/STEMMER.sol\":5052:5064  newThreshold */\n      dup1\n        /* \"contracts/STEMMER.sol\":5034:5049  profitThreshold */\n      0x0b\n        /* \"contracts/STEMMER.sol\":5034:5064  profitThreshold = newThreshold */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":5079:5115  ProfitThresholdUpdated(newThreshold) */\n      0xc5023cc86199e71ca52157b0b124ddbda596c9fb8bab5bb7028d162fa3ed5545\n        /* \"contracts/STEMMER.sol\":5102:5114  newThreshold */\n      dup2\n        /* \"contracts/STEMMER.sol\":5079:5115  ProfitThresholdUpdated(newThreshold) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMMER.sol\":4895:5122  function setProfitThreshold(uint256 newThreshold) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":3374:3509  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/STEMMER.sol\":3445:3469  _mint(to, amount * 1e18) */\n      tag_196\n        /* \"contracts/STEMMER.sol\":3451:3453  to */\n      dup3\n        /* \"contracts/STEMMER.sol\":3464:3468  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":3455:3461  amount */\n      dup4\n        /* \"contracts/STEMMER.sol\":3455:3468  amount * 1e18 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"contracts/STEMMER.sol\":3445:3450  _mint */\n      tag_199\n        /* \"contracts/STEMMER.sol\":3445:3469  _mint(to, amount * 1e18) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/STEMMER.sol\":3491:3493  to */\n      dup2\n        /* \"contracts/STEMMER.sol\":3484:3502  Minted(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/STEMMER.sol\":3495:3501  amount */\n      dup3\n        /* \"contracts/STEMMER.sol\":3484:3502  Minted(to, amount) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":3374:3509  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":2249:3339  function sellStem(uint256 stemAmount) external {... */\n    tag_80:\n        /* \"contracts/STEMMER.sol\":2327:2328  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":2314:2324  stemAmount */\n      dup2\n        /* \"contracts/STEMMER.sol\":2314:2328  stemAmount > 0 */\n      gt\n        /* \"contracts/STEMMER.sol\":2306:2362  require(stemAmount > 0, \"Amount must be greater than 0\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/STEMMER.sol\":2424:2442  uint256 usdtAmount */\n      0x00\n        /* \"contracts/STEMMER.sol\":2467:2475  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER.sol\":2459:2463  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":2446:2456  stemAmount */\n      dup4\n        /* \"contracts/STEMMER.sol\":2446:2463  stemAmount * 1e18 */\n      tag_205\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_205:\n        /* \"contracts/STEMMER.sol\":2445:2475  (stemAmount * 1e18) / sellRate */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/STEMMER.sol\":2424:2475  uint256 usdtAmount = (stemAmount * 1e18) / sellRate */\n      swap1\n      pop\n        /* \"contracts/STEMMER.sol\":2539:2561  uint256 fairUsdtAmount */\n      0x00\n        /* \"contracts/STEMMER.sol\":2577:2581  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":2564:2574  stemAmount */\n      dup4\n        /* \"contracts/STEMMER.sol\":2564:2581  stemAmount / 1e18 */\n      tag_208\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_208:\n        /* \"contracts/STEMMER.sol\":2539:2581  uint256 fairUsdtAmount = stemAmount / 1e18 */\n      swap1\n      pop\n        /* \"contracts/STEMMER.sol\":2591:2612  uint256 expectedStems */\n      0x00\n        /* \"contracts/STEMMER.sol\":2632:2640  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER.sol\":2615:2629  fairUsdtAmount */\n      dup3\n        /* \"contracts/STEMMER.sol\":2615:2640  fairUsdtAmount * sellRate */\n      tag_209\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_209:\n        /* \"contracts/STEMMER.sol\":2591:2640  uint256 expectedStems = fairUsdtAmount * sellRate */\n      swap1\n      pop\n        /* \"contracts/STEMMER.sol\":2650:2669  uint256 profitStems */\n      0x00\n        /* \"contracts/STEMMER.sol\":2688:2698  stemAmount */\n      dup5\n        /* \"contracts/STEMMER.sol\":2672:2685  expectedStems */\n      dup3\n        /* \"contracts/STEMMER.sol\":2672:2698  expectedStems > stemAmount */\n      gt\n        /* \"contracts/STEMMER.sol\":2672:2731  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      tag_210\n      jumpi\n        /* \"contracts/STEMMER.sol\":2730:2731  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":2672:2731  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      jump(tag_211)\n    tag_210:\n        /* \"contracts/STEMMER.sol\":2717:2727  stemAmount */\n      dup5\n        /* \"contracts/STEMMER.sol\":2701:2714  expectedStems */\n      dup3\n        /* \"contracts/STEMMER.sol\":2701:2727  expectedStems - stemAmount */\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/STEMMER.sol\":2672:2731  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n    tag_211:\n        /* \"contracts/STEMMER.sol\":2650:2731  uint256 profitStems = expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      swap1\n      pop\n        /* \"contracts/STEMMER.sol\":2787:2830  _transfer(msg.sender, treasury, stemAmount) */\n      tag_214\n        /* \"contracts/STEMMER.sol\":2797:2807  msg.sender */\n      caller\n        /* \"contracts/STEMMER.sol\":2809:2817  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":2819:2829  stemAmount */\n      dup8\n        /* \"contracts/STEMMER.sol\":2787:2796  _transfer */\n      tag_184\n        /* \"contracts/STEMMER.sol\":2787:2830  _transfer(msg.sender, treasury, stemAmount) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/STEMMER.sol\":2903:2904  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":2889:2900  profitStems */\n      dup2\n        /* \"contracts/STEMMER.sol\":2889:2904  profitStems > 0 */\n      gt\n        /* \"contracts/STEMMER.sol\":2889:2936  profitStems > 0 && profitTreasury != address(0) */\n      dup1\n      iszero\n      tag_215\n      jumpi\n      pop\n        /* \"contracts/STEMMER.sol\":2934:2935  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":2908:2936  profitTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":2908:2922  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":2908:2936  profitTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/STEMMER.sol\":2889:2936  profitStems > 0 && profitTreasury != address(0) */\n    tag_215:\n        /* \"contracts/STEMMER.sol\":2885:3177  if (profitStems > 0 && profitTreasury != address(0)) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"contracts/STEMMER.sol\":2973:2984  profitStems */\n      dup1\n        /* \"contracts/STEMMER.sol\":2952:2969  accumulatedProfit */\n      0x0c\n      0x00\n        /* \"contracts/STEMMER.sol\":2952:2984  accumulatedProfit += profitStems */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":3024:3039  profitThreshold */\n      sload(0x0b)\n        /* \"contracts/STEMMER.sol\":3003:3020  accumulatedProfit */\n      sload(0x0c)\n        /* \"contracts/STEMMER.sol\":3003:3039  accumulatedProfit >= profitThreshold */\n      lt\n        /* \"contracts/STEMMER.sol\":2999:3167  if (accumulatedProfit >= profitThreshold) {... */\n      tag_219\n      jumpi\n        /* \"contracts/STEMMER.sol\":3059:3113  _transfer(treasury, profitTreasury, accumulatedProfit) */\n      tag_220\n        /* \"contracts/STEMMER.sol\":3069:3077  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":3079:3093  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":3095:3112  accumulatedProfit */\n      sload(0x0c)\n        /* \"contracts/STEMMER.sol\":3059:3068  _transfer */\n      tag_184\n        /* \"contracts/STEMMER.sol\":3059:3113  _transfer(treasury, profitTreasury, accumulatedProfit) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/STEMMER.sol\":3151:3152  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":3131:3148  accumulatedProfit */\n      0x0c\n        /* \"contracts/STEMMER.sol\":3131:3152  accumulatedProfit = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":2999:3167  if (accumulatedProfit >= profitThreshold) {... */\n    tag_219:\n        /* \"contracts/STEMMER.sol\":2885:3177  if (profitStems > 0 && profitTreasury != address(0)) {... */\n    tag_216:\n        /* \"contracts/STEMMER.sol\":3195:3204  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":3195:3213  usdtToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/STEMMER.sol\":3214:3224  msg.sender */\n      caller\n        /* \"contracts/STEMMER.sol\":3226:3236  usdtAmount */\n      dup7\n        /* \"contracts/STEMMER.sol\":3195:3237  usdtToken.transfer(msg.sender, usdtAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_224:\n        /* \"contracts/STEMMER.sol\":3187:3260  require(usdtToken.transfer(msg.sender, usdtAmount), \"USDT payout failed\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/STEMMER.sol\":3284:3294  msg.sender */\n      caller\n        /* \"contracts/STEMMER.sol\":3275:3332  SellStem(msg.sender, stemAmount, usdtAmount, profitStems) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420\n        /* \"contracts/STEMMER.sol\":3296:3306  stemAmount */\n      dup7\n        /* \"contracts/STEMMER.sol\":3308:3318  usdtAmount */\n      dup7\n        /* \"contracts/STEMMER.sol\":3320:3331  profitStems */\n      dup5\n        /* \"contracts/STEMMER.sol\":3275:3332  SellStem(msg.sender, stemAmount, usdtAmount, profitStems) */\n      mload(0x40)\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":2296:3339  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/STEMMER.sol\":2249:3339  function sellStem(uint256 stemAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":448:471  address public treasury */\n    tag_82:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":375:405  uint256 public sellRate = 1e18 */\n    tag_86:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":581:613  uint256 public accumulatedProfit */\n    tag_95:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":3733:3996  function setBuyRate(uint256 newRate) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/STEMMER.sol\":3818:3822  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":3807:3814  newRate */\n      dup2\n        /* \"contracts/STEMMER.sol\":3807:3822  newRate >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/STEMMER.sol\":3799:3853  require(newRate >= 1e18, \"Buy rate must be >= 1 STEM\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/STEMMER.sol\":3882:3890  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER.sol\":3871:3878  newRate */\n      dup2\n        /* \"contracts/STEMMER.sol\":3871:3890  newRate <= sellRate */\n      gt\n      iszero\n        /* \"contracts/STEMMER.sol\":3863:3924  require(newRate <= sellRate, \"Buy rate must be <= Sell rate\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/STEMMER.sol\":3944:3951  newRate */\n      dup1\n        /* \"contracts/STEMMER.sol\":3934:3941  buyRate */\n      0x07\n        /* \"contracts/STEMMER.sol\":3934:3951  buyRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":3966:3989  BuyRateUpdated(newRate) */\n      0xedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb1\n        /* \"contracts/STEMMER.sol\":3981:3988  newRate */\n      dup2\n        /* \"contracts/STEMMER.sol\":3966:3989  BuyRateUpdated(newRate) */\n      mload(0x40)\n      tag_245\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMMER.sol\":3733:3996  function setBuyRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":4037:4250  function setSellRate(uint256 newRate) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/STEMMER.sol\":4123:4127  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":4112:4119  newRate */\n      dup2\n        /* \"contracts/STEMMER.sol\":4112:4127  newRate >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/STEMMER.sol\":4104:4176  require(newRate >= 1e18, unicode\"Sell rate must be ≥ 1 STEM per USDT\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/STEMMER.sol\":4197:4204  newRate */\n      dup1\n        /* \"contracts/STEMMER.sol\":4186:4194  sellRate */\n      0x08\n        /* \"contracts/STEMMER.sol\":4186:4204  sellRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":4219:4243  SellRateUpdated(newRate) */\n      0xbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab\n        /* \"contracts/STEMMER.sol\":4235:4242  newRate */\n      dup2\n        /* \"contracts/STEMMER.sol\":4219:4243  SellRateUpdated(newRate) */\n      mload(0x40)\n      tag_253\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMMER.sol\":4037:4250  function setSellRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_255\n      swap1\n      tag_151\n      jump\t// in\n    tag_255:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_256\n      swap1\n      tag_151\n      jump\t// in\n    tag_256:\n      dup1\n      iszero\n      tag_257\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_258\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_257)\n    tag_258:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_259:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_259\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_257:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":3544:3685  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/STEMMER.sol\":3617:3643  _burn(from, amount * 1e18) */\n      tag_263\n        /* \"contracts/STEMMER.sol\":3623:3627  from */\n      dup3\n        /* \"contracts/STEMMER.sol\":3638:3642  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":3629:3635  amount */\n      dup4\n        /* \"contracts/STEMMER.sol\":3629:3642  amount * 1e18 */\n      tag_264\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_264:\n        /* \"contracts/STEMMER.sol\":3617:3622  _burn */\n      tag_265\n        /* \"contracts/STEMMER.sol\":3617:3643  _burn(from, amount * 1e18) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/STEMMER.sol\":3665:3669  from */\n      dup2\n        /* \"contracts/STEMMER.sol\":3658:3678  Burned(from, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7\n        /* \"contracts/STEMMER.sol\":3671:3677  amount */\n      dup3\n        /* \"contracts/STEMMER.sol\":3658:3678  Burned(from, amount) */\n      mload(0x40)\n      tag_266\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":3544:3685  function burn(address from, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":279:302  IERC20 public usdtToken */\n    tag_117:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":1828:2212  function buyStem(uint256 usdtAmount) external {... */\n    tag_122:\n        /* \"contracts/STEMMER.sol\":1905:1906  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":1892:1902  usdtAmount */\n      dup2\n        /* \"contracts/STEMMER.sol\":1892:1906  usdtAmount > 0 */\n      gt\n        /* \"contracts/STEMMER.sol\":1884:1940  require(usdtAmount > 0, \"Amount must be greater than 0\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_204\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"contracts/STEMMER.sol\":1951:1969  uint256 stemAmount */\n      0x00\n        /* \"contracts/STEMMER.sol\":1985:1989  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMMER.sol\":1972:1982  usdtAmount */\n      dup3\n        /* \"contracts/STEMMER.sol\":1972:1989  usdtAmount * 1e18 */\n      tag_273\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_273:\n        /* \"contracts/STEMMER.sol\":1951:1989  uint256 stemAmount = usdtAmount * 1e18 */\n      swap1\n      pop\n        /* \"contracts/STEMMER.sol\":2007:2016  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":2007:2029  usdtToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/STEMMER.sol\":2030:2040  msg.sender */\n      caller\n        /* \"contracts/STEMMER.sol\":2050:2054  this */\n      address\n        /* \"contracts/STEMMER.sol\":2057:2067  usdtAmount */\n      dup6\n        /* \"contracts/STEMMER.sol\":2007:2068  usdtToken.transferFrom(msg.sender, address(this), usdtAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_278:\n        /* \"contracts/STEMMER.sol\":1999:2093  require(usdtToken.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"contracts/STEMMER.sol\":2104:2147  _transfer(treasury, msg.sender, stemAmount) */\n      tag_282\n        /* \"contracts/STEMMER.sol\":2114:2122  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":2124:2134  msg.sender */\n      caller\n        /* \"contracts/STEMMER.sol\":2136:2146  stemAmount */\n      dup4\n        /* \"contracts/STEMMER.sol\":2104:2113  _transfer */\n      tag_184\n        /* \"contracts/STEMMER.sol\":2104:2147  _transfer(treasury, msg.sender, stemAmount) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/STEMMER.sol\":2170:2180  msg.sender */\n      caller\n        /* \"contracts/STEMMER.sol\":2162:2205  BuyStem(msg.sender, usdtAmount, stemAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb\n        /* \"contracts/STEMMER.sol\":2182:2192  usdtAmount */\n      dup4\n        /* \"contracts/STEMMER.sol\":2194:2204  stemAmount */\n      dup4\n        /* \"contracts/STEMMER.sol\":2162:2205  BuyStem(msg.sender, usdtAmount, stemAmount) */\n      mload(0x40)\n      tag_283\n      swap3\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":1874:2212  {... */\n      pop\n        /* \"contracts/STEMMER.sol\":1828:2212  function buyStem(uint256 usdtAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":5507:6291  function getConfig() external view returns (... */\n    tag_124:\n        /* \"contracts/STEMMER.sol\":5560:5576  uint256 _buyRate */\n      0x00\n        /* \"contracts/STEMMER.sol\":5586:5603  uint256 _sellRate */\n      dup1\n        /* \"contracts/STEMMER.sol\":5613:5630  address _treasury */\n      0x00\n        /* \"contracts/STEMMER.sol\":5640:5663  address _profitTreasury */\n      dup1\n        /* \"contracts/STEMMER.sol\":5673:5700  uint256 treasuryStemBalance */\n      0x00\n        /* \"contracts/STEMMER.sol\":5710:5735  uint256 profitStemBalance */\n      dup1\n        /* \"contracts/STEMMER.sol\":5745:5772  uint256 contractStemBalance */\n      0x00\n        /* \"contracts/STEMMER.sol\":5782:5809  uint256 contractUsdtBalance */\n      dup1\n        /* \"contracts/STEMMER.sol\":5819:5842  uint256 totalStemSupply */\n      0x00\n        /* \"contracts/STEMMER.sol\":5852:5878  uint256 _accumulatedProfit */\n      dup1\n        /* \"contracts/STEMMER.sol\":5888:5912  uint256 _profitThreshold */\n      0x00\n        /* \"contracts/STEMMER.sol\":5950:5957  buyRate */\n      sload(0x07)\n        /* \"contracts/STEMMER.sol\":5971:5979  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMMER.sol\":5993:6001  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":6015:6029  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":6043:6062  balanceOf(treasury) */\n      tag_286\n        /* \"contracts/STEMMER.sol\":6053:6061  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":6043:6052  balanceOf */\n      tag_90\n        /* \"contracts/STEMMER.sol\":6043:6062  balanceOf(treasury) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/STEMMER.sol\":6076:6101  balanceOf(profitTreasury) */\n      tag_287\n        /* \"contracts/STEMMER.sol\":6086:6100  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":6076:6085  balanceOf */\n      tag_90\n        /* \"contracts/STEMMER.sol\":6076:6101  balanceOf(profitTreasury) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/STEMMER.sol\":6115:6139  balanceOf(address(this)) */\n      tag_288\n        /* \"contracts/STEMMER.sol\":6133:6137  this */\n      address\n        /* \"contracts/STEMMER.sol\":6115:6124  balanceOf */\n      tag_90\n        /* \"contracts/STEMMER.sol\":6115:6139  balanceOf(address(this)) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/STEMMER.sol\":6153:6162  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":6153:6172  usdtToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/STEMMER.sol\":6181:6185  this */\n      address\n        /* \"contracts/STEMMER.sol\":6153:6187  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_289:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_291:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_292\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"contracts/STEMMER.sol\":6201:6214  totalSupply() */\n      tag_294\n        /* \"contracts/STEMMER.sol\":6201:6212  totalSupply */\n      tag_59\n        /* \"contracts/STEMMER.sol\":6201:6214  totalSupply() */\n      jump\t// in\n    tag_294:\n        /* \"contracts/STEMMER.sol\":6228:6245  accumulatedProfit */\n      sload(0x0c)\n        /* \"contracts/STEMMER.sol\":6259:6274  profitThreshold */\n      sload(0x0b)\n        /* \"contracts/STEMMER.sol\":5929:6284  return (... */\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n        /* \"contracts/STEMMER.sol\":5507:6291  function getConfig() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      swap11\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":4516:4653  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/STEMMER.sol\":4596:4605  _treasury */\n      dup1\n        /* \"contracts/STEMMER.sol\":4585:4593  treasury */\n      0x09\n      0x00\n        /* \"contracts/STEMMER.sol\":4585:4605  treasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":4636:4645  _treasury */\n      dup1\n        /* \"contracts/STEMMER.sol\":4620:4646  TreasuryChanged(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMMER.sol\":4516:4653  function setTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":477:506  address public profitTreasury */\n    tag_136:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_300\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":545:575  uint256 public profitThreshold */\n    tag_142:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":309:338  uint256 public buyRate = 1e18 */\n    tag_145:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/STEMMER.sol\":5186:5469  function withdrawAccumulatedProfit() external onlyOwner {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_306\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/STEMMER.sol\":5280:5281  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":5260:5277  accumulatedProfit */\n      sload(0x0c)\n        /* \"contracts/STEMMER.sol\":5260:5281  accumulatedProfit > 0 */\n      gt\n        /* \"contracts/STEMMER.sol\":5252:5307  require(accumulatedProfit > 0, \"No profit to withdraw\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"contracts/STEMMER.sol\":5317:5371  _transfer(treasury, profitTreasury, accumulatedProfit) */\n      tag_311\n        /* \"contracts/STEMMER.sol\":5327:5335  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":5337:5351  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMMER.sol\":5353:5370  accumulatedProfit */\n      sload(0x0c)\n        /* \"contracts/STEMMER.sol\":5317:5326  _transfer */\n      tag_184\n        /* \"contracts/STEMMER.sol\":5317:5371  _transfer(treasury, profitTreasury, accumulatedProfit) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/STEMMER.sol\":5386:5431  AccumulatedProfitWithdrawn(accumulatedProfit) */\n      0x035279bb4d182b0c31a3c5acf2ea52f703ec240e2c8cdaee25e353623db06418\n        /* \"contracts/STEMMER.sol\":5413:5430  accumulatedProfit */\n      sload(0x0c)\n        /* \"contracts/STEMMER.sol\":5386:5431  AccumulatedProfitWithdrawn(accumulatedProfit) */\n      mload(0x40)\n      tag_312\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMMER.sol\":5461:5462  0 */\n      0x00\n        /* \"contracts/STEMMER.sol\":5441:5458  accumulatedProfit */\n      0x0c\n        /* \"contracts/STEMMER.sol\":5441:5462  accumulatedProfit = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMMER.sol\":5186:5469  function withdrawAccumulatedProfit() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_319\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_352\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_355\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_355:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_356)\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_360)\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_361\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_362:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_363:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_364:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_416:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_416)\n    tag_418:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_365:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_366:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_421\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_362\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":818:889   */\n      tag_422\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_363\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_423\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_364\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":988:1017   */\n      tag_424\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_365\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_44:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_426\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_366\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_368:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_370:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_371:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_432\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_370\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_372:\n        /* \"#utility.yul\":1983:2007   */\n      tag_434\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_371\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_435:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_373:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_437\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_372\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_374:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_375:\n        /* \"#utility.yul\":2339:2363   */\n      tag_440\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_374\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_441:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_376:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_443\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_375\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_47:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_446\n      tag_368\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2632:2751   */\n    tag_445:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_447\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_373\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_448\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_376\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_377:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_378:\n        /* \"#utility.yul\":3196:3217   */\n      tag_451\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_377\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_50:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_453\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_378\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3775   */\n    tag_53:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      sub\n        /* \"#utility.yul\":3525:3557   */\n      slt\n        /* \"#utility.yul\":3522:3641   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":3560:3639   */\n      tag_456\n      tag_368\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3522:3641   */\n    tag_455:\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3705:3758   */\n      tag_457\n        /* \"#utility.yul\":3750:3757   */\n      dup5\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3730:3739   */\n      dup6\n        /* \"#utility.yul\":3726:3748   */\n      add\n        /* \"#utility.yul\":3705:3758   */\n      tag_373\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3695:3758   */\n      swap2\n      pop\n        /* \"#utility.yul\":3651:3768   */\n      pop\n        /* \"#utility.yul\":3446:3775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:3899   */\n    tag_379:\n        /* \"#utility.yul\":3868:3892   */\n      tag_459\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3868:3892   */\n      tag_374\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3863:3866   */\n      dup3\n        /* \"#utility.yul\":3856:3893   */\n      mstore\n        /* \"#utility.yul\":3781:3899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4127   */\n    tag_61:\n        /* \"#utility.yul\":3998:4002   */\n      0x00\n        /* \"#utility.yul\":4036:4038   */\n      0x20\n        /* \"#utility.yul\":4025:4034   */\n      dup3\n        /* \"#utility.yul\":4021:4039   */\n      add\n        /* \"#utility.yul\":4013:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":4049:4120   */\n      tag_461\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4049:4120   */\n      tag_379\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3905:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4752   */\n    tag_64:\n        /* \"#utility.yul\":4210:4216   */\n      0x00\n        /* \"#utility.yul\":4218:4224   */\n      dup1\n        /* \"#utility.yul\":4226:4232   */\n      0x00\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4263:4272   */\n      dup5\n        /* \"#utility.yul\":4254:4261   */\n      dup7\n        /* \"#utility.yul\":4250:4273   */\n      sub\n        /* \"#utility.yul\":4246:4278   */\n      slt\n        /* \"#utility.yul\":4243:4362   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":4281:4360   */\n      tag_464\n      tag_368\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4243:4362   */\n    tag_463:\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4426:4479   */\n      tag_465\n        /* \"#utility.yul\":4471:4478   */\n      dup7\n        /* \"#utility.yul\":4462:4468   */\n      dup3\n        /* \"#utility.yul\":4451:4460   */\n      dup8\n        /* \"#utility.yul\":4447:4469   */\n      add\n        /* \"#utility.yul\":4426:4479   */\n      tag_373\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4416:4479   */\n      swap4\n      pop\n        /* \"#utility.yul\":4372:4489   */\n      pop\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4554:4607   */\n      tag_466\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4590:4596   */\n      dup3\n        /* \"#utility.yul\":4579:4588   */\n      dup8\n        /* \"#utility.yul\":4575:4597   */\n      add\n        /* \"#utility.yul\":4554:4607   */\n      tag_373\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4544:4607   */\n      swap3\n      pop\n        /* \"#utility.yul\":4499:4617   */\n      pop\n        /* \"#utility.yul\":4656:4658   */\n      0x40\n        /* \"#utility.yul\":4682:4735   */\n      tag_467\n        /* \"#utility.yul\":4727:4734   */\n      dup7\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup8\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_376\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4627:4745   */\n      pop\n        /* \"#utility.yul\":4133:4752   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4758:5087   */\n    tag_69:\n        /* \"#utility.yul\":4817:4823   */\n      0x00\n        /* \"#utility.yul\":4866:4868   */\n      0x20\n        /* \"#utility.yul\":4854:4863   */\n      dup3\n        /* \"#utility.yul\":4845:4852   */\n      dup5\n        /* \"#utility.yul\":4841:4864   */\n      sub\n        /* \"#utility.yul\":4837:4869   */\n      slt\n        /* \"#utility.yul\":4834:4953   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":4872:4951   */\n      tag_470\n      tag_368\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4834:4953   */\n    tag_469:\n        /* \"#utility.yul\":4992:4993   */\n      0x00\n        /* \"#utility.yul\":5017:5070   */\n      tag_471\n        /* \"#utility.yul\":5062:5069   */\n      dup5\n        /* \"#utility.yul\":5053:5059   */\n      dup3\n        /* \"#utility.yul\":5042:5051   */\n      dup6\n        /* \"#utility.yul\":5038:5060   */\n      add\n        /* \"#utility.yul\":5017:5070   */\n      tag_376\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5007:5070   */\n      swap2\n      pop\n        /* \"#utility.yul\":4963:5080   */\n      pop\n        /* \"#utility.yul\":4758:5087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5093:5179   */\n    tag_380:\n        /* \"#utility.yul\":5128:5135   */\n      0x00\n        /* \"#utility.yul\":5168:5172   */\n      0xff\n        /* \"#utility.yul\":5161:5166   */\n      dup3\n        /* \"#utility.yul\":5157:5173   */\n      and\n        /* \"#utility.yul\":5146:5173   */\n      swap1\n      pop\n        /* \"#utility.yul\":5093:5179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5185:5297   */\n    tag_381:\n        /* \"#utility.yul\":5268:5290   */\n      tag_474\n        /* \"#utility.yul\":5284:5289   */\n      dup2\n        /* \"#utility.yul\":5268:5290   */\n      tag_380\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5263:5266   */\n      dup3\n        /* \"#utility.yul\":5256:5291   */\n      mstore\n        /* \"#utility.yul\":5185:5297   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5303:5517   */\n    tag_74:\n        /* \"#utility.yul\":5392:5396   */\n      0x00\n        /* \"#utility.yul\":5430:5432   */\n      0x20\n        /* \"#utility.yul\":5419:5428   */\n      dup3\n        /* \"#utility.yul\":5415:5433   */\n      add\n        /* \"#utility.yul\":5407:5433   */\n      swap1\n      pop\n        /* \"#utility.yul\":5443:5510   */\n      tag_476\n        /* \"#utility.yul\":5507:5508   */\n      0x00\n        /* \"#utility.yul\":5496:5505   */\n      dup4\n        /* \"#utility.yul\":5492:5509   */\n      add\n        /* \"#utility.yul\":5483:5489   */\n      dup5\n        /* \"#utility.yul\":5443:5510   */\n      tag_381\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5303:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_382:\n        /* \"#utility.yul\":5610:5634   */\n      tag_478\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_371\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_84:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_480\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_382\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:5935   */\n    tag_383:\n        /* \"#utility.yul\":5903:5906   */\n      0x00\n        /* \"#utility.yul\":5924:5929   */\n      dup2\n        /* \"#utility.yul\":5917:5929   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5941:6083   */\n    tag_384:\n        /* \"#utility.yul\":5991:6000   */\n      0x00\n        /* \"#utility.yul\":6024:6077   */\n      tag_483\n        /* \"#utility.yul\":6042:6076   */\n      tag_484\n        /* \"#utility.yul\":6051:6075   */\n      tag_485\n        /* \"#utility.yul\":6069:6074   */\n      dup5\n        /* \"#utility.yul\":6051:6075   */\n      tag_370\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6042:6076   */\n      tag_383\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6024:6077   */\n      tag_370\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6011:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5941:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6215   */\n    tag_385:\n        /* \"#utility.yul\":6139:6148   */\n      0x00\n        /* \"#utility.yul\":6172:6209   */\n      tag_487\n        /* \"#utility.yul\":6203:6208   */\n      dup3\n        /* \"#utility.yul\":6172:6209   */\n      tag_384\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6159:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6361   */\n    tag_386:\n        /* \"#utility.yul\":6285:6294   */\n      0x00\n        /* \"#utility.yul\":6318:6355   */\n      tag_489\n        /* \"#utility.yul\":6349:6354   */\n      dup3\n        /* \"#utility.yul\":6318:6355   */\n      tag_385\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6305:6355   */\n      swap1\n      pop\n        /* \"#utility.yul\":6221:6361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6367:6526   */\n    tag_387:\n        /* \"#utility.yul\":6468:6519   */\n      tag_491\n        /* \"#utility.yul\":6513:6518   */\n      dup2\n        /* \"#utility.yul\":6468:6519   */\n      tag_386\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6463:6466   */\n      dup3\n        /* \"#utility.yul\":6456:6520   */\n      mstore\n        /* \"#utility.yul\":6367:6526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6782   */\n    tag_119:\n        /* \"#utility.yul\":6639:6643   */\n      0x00\n        /* \"#utility.yul\":6677:6679   */\n      0x20\n        /* \"#utility.yul\":6666:6675   */\n      dup3\n        /* \"#utility.yul\":6662:6680   */\n      add\n        /* \"#utility.yul\":6654:6680   */\n      swap1\n      pop\n        /* \"#utility.yul\":6690:6775   */\n      tag_493\n        /* \"#utility.yul\":6772:6773   */\n      0x00\n        /* \"#utility.yul\":6761:6770   */\n      dup4\n        /* \"#utility.yul\":6757:6774   */\n      add\n        /* \"#utility.yul\":6748:6754   */\n      dup5\n        /* \"#utility.yul\":6690:6775   */\n      tag_387\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6532:6782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6788:8120   */\n    tag_126:\n        /* \"#utility.yul\":7162:7166   */\n      0x00\n        /* \"#utility.yul\":7200:7203   */\n      0x0160\n        /* \"#utility.yul\":7189:7198   */\n      dup3\n        /* \"#utility.yul\":7185:7204   */\n      add\n        /* \"#utility.yul\":7177:7204   */\n      swap1\n      pop\n        /* \"#utility.yul\":7214:7285   */\n      tag_495\n        /* \"#utility.yul\":7282:7283   */\n      0x00\n        /* \"#utility.yul\":7271:7280   */\n      dup4\n        /* \"#utility.yul\":7267:7284   */\n      add\n        /* \"#utility.yul\":7258:7264   */\n      dup15\n        /* \"#utility.yul\":7214:7285   */\n      tag_379\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7295:7367   */\n      tag_496\n        /* \"#utility.yul\":7363:7365   */\n      0x20\n        /* \"#utility.yul\":7352:7361   */\n      dup4\n        /* \"#utility.yul\":7348:7366   */\n      add\n        /* \"#utility.yul\":7339:7345   */\n      dup14\n        /* \"#utility.yul\":7295:7367   */\n      tag_379\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7377:7449   */\n      tag_497\n        /* \"#utility.yul\":7445:7447   */\n      0x40\n        /* \"#utility.yul\":7434:7443   */\n      dup4\n        /* \"#utility.yul\":7430:7448   */\n      add\n        /* \"#utility.yul\":7421:7427   */\n      dup13\n        /* \"#utility.yul\":7377:7449   */\n      tag_382\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7459:7531   */\n      tag_498\n        /* \"#utility.yul\":7527:7529   */\n      0x60\n        /* \"#utility.yul\":7516:7525   */\n      dup4\n        /* \"#utility.yul\":7512:7530   */\n      add\n        /* \"#utility.yul\":7503:7509   */\n      dup12\n        /* \"#utility.yul\":7459:7531   */\n      tag_382\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7541:7614   */\n      tag_499\n        /* \"#utility.yul\":7609:7612   */\n      0x80\n        /* \"#utility.yul\":7598:7607   */\n      dup4\n        /* \"#utility.yul\":7594:7613   */\n      add\n        /* \"#utility.yul\":7585:7591   */\n      dup11\n        /* \"#utility.yul\":7541:7614   */\n      tag_379\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7624:7697   */\n      tag_500\n        /* \"#utility.yul\":7692:7695   */\n      0xa0\n        /* \"#utility.yul\":7681:7690   */\n      dup4\n        /* \"#utility.yul\":7677:7696   */\n      add\n        /* \"#utility.yul\":7668:7674   */\n      dup10\n        /* \"#utility.yul\":7624:7697   */\n      tag_379\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7707:7780   */\n      tag_501\n        /* \"#utility.yul\":7775:7778   */\n      0xc0\n        /* \"#utility.yul\":7764:7773   */\n      dup4\n        /* \"#utility.yul\":7760:7779   */\n      add\n        /* \"#utility.yul\":7751:7757   */\n      dup9\n        /* \"#utility.yul\":7707:7780   */\n      tag_379\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":7790:7863   */\n      tag_502\n        /* \"#utility.yul\":7858:7861   */\n      0xe0\n        /* \"#utility.yul\":7847:7856   */\n      dup4\n        /* \"#utility.yul\":7843:7862   */\n      add\n        /* \"#utility.yul\":7834:7840   */\n      dup8\n        /* \"#utility.yul\":7790:7863   */\n      tag_379\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7873:7946   */\n      tag_503\n        /* \"#utility.yul\":7941:7944   */\n      0x0100\n        /* \"#utility.yul\":7930:7939   */\n      dup4\n        /* \"#utility.yul\":7926:7945   */\n      add\n        /* \"#utility.yul\":7917:7923   */\n      dup7\n        /* \"#utility.yul\":7873:7946   */\n      tag_379\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7956:8029   */\n      tag_504\n        /* \"#utility.yul\":8024:8027   */\n      0x0120\n        /* \"#utility.yul\":8013:8022   */\n      dup4\n        /* \"#utility.yul\":8009:8028   */\n      add\n        /* \"#utility.yul\":8000:8006   */\n      dup6\n        /* \"#utility.yul\":7956:8029   */\n      tag_379\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8039:8113   */\n      tag_505\n        /* \"#utility.yul\":8108:8111   */\n      0x0140\n        /* \"#utility.yul\":8097:8106   */\n      dup4\n        /* \"#utility.yul\":8093:8112   */\n      add\n        /* \"#utility.yul\":8083:8090   */\n      dup5\n        /* \"#utility.yul\":8039:8113   */\n      tag_379\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6788:8120   */\n      swap13\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8126:8600   */\n    tag_129:\n        /* \"#utility.yul\":8194:8200   */\n      0x00\n        /* \"#utility.yul\":8202:8208   */\n      dup1\n        /* \"#utility.yul\":8251:8253   */\n      0x40\n        /* \"#utility.yul\":8239:8248   */\n      dup4\n        /* \"#utility.yul\":8230:8237   */\n      dup6\n        /* \"#utility.yul\":8226:8249   */\n      sub\n        /* \"#utility.yul\":8222:8254   */\n      slt\n        /* \"#utility.yul\":8219:8338   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8257:8336   */\n      tag_508\n      tag_368\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8219:8338   */\n    tag_507:\n        /* \"#utility.yul\":8377:8378   */\n      0x00\n        /* \"#utility.yul\":8402:8455   */\n      tag_509\n        /* \"#utility.yul\":8447:8454   */\n      dup6\n        /* \"#utility.yul\":8438:8444   */\n      dup3\n        /* \"#utility.yul\":8427:8436   */\n      dup7\n        /* \"#utility.yul\":8423:8445   */\n      add\n        /* \"#utility.yul\":8402:8455   */\n      tag_373\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8392:8455   */\n      swap3\n      pop\n        /* \"#utility.yul\":8348:8465   */\n      pop\n        /* \"#utility.yul\":8504:8506   */\n      0x20\n        /* \"#utility.yul\":8530:8583   */\n      tag_510\n        /* \"#utility.yul\":8575:8582   */\n      dup6\n        /* \"#utility.yul\":8566:8572   */\n      dup3\n        /* \"#utility.yul\":8555:8564   */\n      dup7\n        /* \"#utility.yul\":8551:8573   */\n      add\n        /* \"#utility.yul\":8530:8583   */\n      tag_373\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8520:8583   */\n      swap2\n      pop\n        /* \"#utility.yul\":8475:8593   */\n      pop\n        /* \"#utility.yul\":8126:8600   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8606:8786   */\n    tag_388:\n        /* \"#utility.yul\":8654:8731   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8651:8652   */\n      0x00\n        /* \"#utility.yul\":8644:8732   */\n      mstore\n        /* \"#utility.yul\":8751:8755   */\n      0x22\n        /* \"#utility.yul\":8748:8749   */\n      0x04\n        /* \"#utility.yul\":8741:8756   */\n      mstore\n        /* \"#utility.yul\":8775:8779   */\n      0x24\n        /* \"#utility.yul\":8772:8773   */\n      0x00\n        /* \"#utility.yul\":8765:8780   */\n      revert\n        /* \"#utility.yul\":8792:9112   */\n    tag_151:\n        /* \"#utility.yul\":8836:8842   */\n      0x00\n        /* \"#utility.yul\":8873:8874   */\n      0x02\n        /* \"#utility.yul\":8867:8871   */\n      dup3\n        /* \"#utility.yul\":8863:8875   */\n      div\n        /* \"#utility.yul\":8853:8875   */\n      swap1\n      pop\n        /* \"#utility.yul\":8920:8921   */\n      0x01\n        /* \"#utility.yul\":8914:8918   */\n      dup3\n        /* \"#utility.yul\":8910:8922   */\n      and\n        /* \"#utility.yul\":8941:8959   */\n      dup1\n        /* \"#utility.yul\":8931:9012   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":8997:9001   */\n      0x7f\n        /* \"#utility.yul\":8989:8995   */\n      dup3\n        /* \"#utility.yul\":8985:9002   */\n      and\n        /* \"#utility.yul\":8975:9002   */\n      swap2\n      pop\n        /* \"#utility.yul\":8931:9012   */\n    tag_513:\n        /* \"#utility.yul\":9059:9061   */\n      0x20\n        /* \"#utility.yul\":9051:9057   */\n      dup3\n        /* \"#utility.yul\":9048:9062   */\n      lt\n        /* \"#utility.yul\":9028:9046   */\n      dup2\n        /* \"#utility.yul\":9025:9063   */\n      sub\n        /* \"#utility.yul\":9022:9106   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":9078:9096   */\n      tag_515\n      tag_388\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9022:9106   */\n    tag_514:\n        /* \"#utility.yul\":8843:9112   */\n      pop\n        /* \"#utility.yul\":8792:9112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9118:9450   */\n    tag_169:\n        /* \"#utility.yul\":9239:9243   */\n      0x00\n        /* \"#utility.yul\":9277:9279   */\n      0x40\n        /* \"#utility.yul\":9266:9275   */\n      dup3\n        /* \"#utility.yul\":9262:9280   */\n      add\n        /* \"#utility.yul\":9254:9280   */\n      swap1\n      pop\n        /* \"#utility.yul\":9290:9361   */\n      tag_517\n        /* \"#utility.yul\":9358:9359   */\n      0x00\n        /* \"#utility.yul\":9347:9356   */\n      dup4\n        /* \"#utility.yul\":9343:9360   */\n      add\n        /* \"#utility.yul\":9334:9340   */\n      dup6\n        /* \"#utility.yul\":9290:9361   */\n      tag_382\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9371:9443   */\n      tag_518\n        /* \"#utility.yul\":9439:9441   */\n      0x20\n        /* \"#utility.yul\":9428:9437   */\n      dup4\n        /* \"#utility.yul\":9424:9442   */\n      add\n        /* \"#utility.yul\":9415:9421   */\n      dup5\n        /* \"#utility.yul\":9371:9443   */\n      tag_379\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9118:9450   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9456:9572   */\n    tag_389:\n        /* \"#utility.yul\":9526:9547   */\n      tag_520\n        /* \"#utility.yul\":9541:9546   */\n      dup2\n        /* \"#utility.yul\":9526:9547   */\n      tag_377\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":9519:9524   */\n      dup2\n        /* \"#utility.yul\":9516:9548   */\n      eq\n        /* \"#utility.yul\":9506:9566   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":9562:9563   */\n      0x00\n        /* \"#utility.yul\":9559:9560   */\n      dup1\n        /* \"#utility.yul\":9552:9564   */\n      revert\n        /* \"#utility.yul\":9506:9566   */\n    tag_521:\n        /* \"#utility.yul\":9456:9572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9578:9715   */\n    tag_390:\n        /* \"#utility.yul\":9632:9637   */\n      0x00\n        /* \"#utility.yul\":9663:9669   */\n      dup2\n        /* \"#utility.yul\":9657:9670   */\n      mload\n        /* \"#utility.yul\":9648:9670   */\n      swap1\n      pop\n        /* \"#utility.yul\":9679:9709   */\n      tag_523\n        /* \"#utility.yul\":9703:9708   */\n      dup2\n        /* \"#utility.yul\":9679:9709   */\n      tag_389\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9578:9715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9721:10066   */\n    tag_173:\n        /* \"#utility.yul\":9788:9794   */\n      0x00\n        /* \"#utility.yul\":9837:9839   */\n      0x20\n        /* \"#utility.yul\":9825:9834   */\n      dup3\n        /* \"#utility.yul\":9816:9823   */\n      dup5\n        /* \"#utility.yul\":9812:9835   */\n      sub\n        /* \"#utility.yul\":9808:9840   */\n      slt\n        /* \"#utility.yul\":9805:9924   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":9843:9922   */\n      tag_526\n      tag_368\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":9805:9924   */\n    tag_525:\n        /* \"#utility.yul\":9963:9964   */\n      0x00\n        /* \"#utility.yul\":9988:10049   */\n      tag_527\n        /* \"#utility.yul\":10041:10048   */\n      dup5\n        /* \"#utility.yul\":10032:10038   */\n      dup3\n        /* \"#utility.yul\":10021:10030   */\n      dup6\n        /* \"#utility.yul\":10017:10039   */\n      add\n        /* \"#utility.yul\":9988:10049   */\n      tag_390\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":9978:10049   */\n      swap2\n      pop\n        /* \"#utility.yul\":9934:10059   */\n      pop\n        /* \"#utility.yul\":9721:10066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10072:10237   */\n    tag_391:\n        /* \"#utility.yul\":10212:10229   */\n      0x5769746864726177206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":10208:10209   */\n      0x00\n        /* \"#utility.yul\":10200:10206   */\n      dup3\n        /* \"#utility.yul\":10196:10210   */\n      add\n        /* \"#utility.yul\":10189:10230   */\n      mstore\n        /* \"#utility.yul\":10072:10237   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10243:10609   */\n    tag_392:\n        /* \"#utility.yul\":10385:10388   */\n      0x00\n        /* \"#utility.yul\":10406:10473   */\n      tag_530\n        /* \"#utility.yul\":10470:10472   */\n      0x0f\n        /* \"#utility.yul\":10465:10468   */\n      dup4\n        /* \"#utility.yul\":10406:10473   */\n      tag_363\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10399:10473   */\n      swap2\n      pop\n        /* \"#utility.yul\":10482:10575   */\n      tag_531\n        /* \"#utility.yul\":10571:10574   */\n      dup3\n        /* \"#utility.yul\":10482:10575   */\n      tag_391\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10600:10602   */\n      0x20\n        /* \"#utility.yul\":10595:10598   */\n      dup3\n        /* \"#utility.yul\":10591:10603   */\n      add\n        /* \"#utility.yul\":10584:10603   */\n      swap1\n      pop\n        /* \"#utility.yul\":10243:10609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10615:11034   */\n    tag_176:\n        /* \"#utility.yul\":10781:10785   */\n      0x00\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10808:10817   */\n      dup3\n        /* \"#utility.yul\":10804:10822   */\n      add\n        /* \"#utility.yul\":10796:10822   */\n      swap1\n      pop\n        /* \"#utility.yul\":10868:10877   */\n      dup2\n        /* \"#utility.yul\":10862:10866   */\n      dup2\n        /* \"#utility.yul\":10858:10878   */\n      sub\n        /* \"#utility.yul\":10854:10855   */\n      0x00\n        /* \"#utility.yul\":10843:10852   */\n      dup4\n        /* \"#utility.yul\":10839:10856   */\n      add\n        /* \"#utility.yul\":10832:10879   */\n      mstore\n        /* \"#utility.yul\":10896:11027   */\n      tag_533\n        /* \"#utility.yul\":11022:11026   */\n      dup2\n        /* \"#utility.yul\":10896:11027   */\n      tag_392\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10888:11027   */\n      swap1\n      pop\n        /* \"#utility.yul\":10615:11034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11040:11211   */\n    tag_393:\n        /* \"#utility.yul\":11180:11203   */\n      0x5468726573686f6c64206d757374206265203e20300000000000000000000000\n        /* \"#utility.yul\":11176:11177   */\n      0x00\n        /* \"#utility.yul\":11168:11174   */\n      dup3\n        /* \"#utility.yul\":11164:11178   */\n      add\n        /* \"#utility.yul\":11157:11204   */\n      mstore\n        /* \"#utility.yul\":11040:11211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11217:11583   */\n    tag_394:\n        /* \"#utility.yul\":11359:11362   */\n      0x00\n        /* \"#utility.yul\":11380:11447   */\n      tag_536\n        /* \"#utility.yul\":11444:11446   */\n      0x15\n        /* \"#utility.yul\":11439:11442   */\n      dup4\n        /* \"#utility.yul\":11380:11447   */\n      tag_363\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11373:11447   */\n      swap2\n      pop\n        /* \"#utility.yul\":11456:11549   */\n      tag_537\n        /* \"#utility.yul\":11545:11548   */\n      dup3\n        /* \"#utility.yul\":11456:11549   */\n      tag_393\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11574:11576   */\n      0x20\n        /* \"#utility.yul\":11569:11572   */\n      dup3\n        /* \"#utility.yul\":11565:11577   */\n      add\n        /* \"#utility.yul\":11558:11577   */\n      swap1\n      pop\n        /* \"#utility.yul\":11217:11583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11589:12008   */\n    tag_190:\n        /* \"#utility.yul\":11755:11759   */\n      0x00\n        /* \"#utility.yul\":11793:11795   */\n      0x20\n        /* \"#utility.yul\":11782:11791   */\n      dup3\n        /* \"#utility.yul\":11778:11796   */\n      add\n        /* \"#utility.yul\":11770:11796   */\n      swap1\n      pop\n        /* \"#utility.yul\":11842:11851   */\n      dup2\n        /* \"#utility.yul\":11836:11840   */\n      dup2\n        /* \"#utility.yul\":11832:11852   */\n      sub\n        /* \"#utility.yul\":11828:11829   */\n      0x00\n        /* \"#utility.yul\":11817:11826   */\n      dup4\n        /* \"#utility.yul\":11813:11830   */\n      add\n        /* \"#utility.yul\":11806:11853   */\n      mstore\n        /* \"#utility.yul\":11870:12001   */\n      tag_539\n        /* \"#utility.yul\":11996:12000   */\n      dup2\n        /* \"#utility.yul\":11870:12001   */\n      tag_394\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11862:12001   */\n      swap1\n      pop\n        /* \"#utility.yul\":11589:12008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12014:12194   */\n    tag_395:\n        /* \"#utility.yul\":12062:12139   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12059:12060   */\n      0x00\n        /* \"#utility.yul\":12052:12140   */\n      mstore\n        /* \"#utility.yul\":12159:12163   */\n      0x11\n        /* \"#utility.yul\":12156:12157   */\n      0x04\n        /* \"#utility.yul\":12149:12164   */\n      mstore\n        /* \"#utility.yul\":12183:12187   */\n      0x24\n        /* \"#utility.yul\":12180:12181   */\n      0x00\n        /* \"#utility.yul\":12173:12188   */\n      revert\n        /* \"#utility.yul\":12200:12610   */\n    tag_198:\n        /* \"#utility.yul\":12240:12247   */\n      0x00\n        /* \"#utility.yul\":12263:12283   */\n      tag_542\n        /* \"#utility.yul\":12281:12282   */\n      dup3\n        /* \"#utility.yul\":12263:12283   */\n      tag_374\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12258:12283   */\n      swap2\n      pop\n        /* \"#utility.yul\":12297:12317   */\n      tag_543\n        /* \"#utility.yul\":12315:12316   */\n      dup4\n        /* \"#utility.yul\":12297:12317   */\n      tag_374\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12292:12317   */\n      swap3\n      pop\n        /* \"#utility.yul\":12352:12353   */\n      dup3\n        /* \"#utility.yul\":12349:12350   */\n      dup3\n        /* \"#utility.yul\":12345:12354   */\n      mul\n        /* \"#utility.yul\":12374:12404   */\n      tag_544\n        /* \"#utility.yul\":12392:12403   */\n      dup2\n        /* \"#utility.yul\":12374:12404   */\n      tag_374\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12363:12404   */\n      swap2\n      pop\n        /* \"#utility.yul\":12553:12554   */\n      dup3\n        /* \"#utility.yul\":12544:12551   */\n      dup3\n        /* \"#utility.yul\":12540:12555   */\n      div\n        /* \"#utility.yul\":12537:12538   */\n      dup5\n        /* \"#utility.yul\":12534:12556   */\n      eq\n        /* \"#utility.yul\":12514:12515   */\n      dup4\n        /* \"#utility.yul\":12507:12516   */\n      iszero\n        /* \"#utility.yul\":12487:12570   */\n      or\n        /* \"#utility.yul\":12464:12603   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":12583:12601   */\n      tag_546\n      tag_395\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":12464:12603   */\n    tag_545:\n        /* \"#utility.yul\":12248:12610   */\n      pop\n        /* \"#utility.yul\":12200:12610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12616:12795   */\n    tag_396:\n        /* \"#utility.yul\":12756:12787   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":12752:12753   */\n      0x00\n        /* \"#utility.yul\":12744:12750   */\n      dup3\n        /* \"#utility.yul\":12740:12754   */\n      add\n        /* \"#utility.yul\":12733:12788   */\n      mstore\n        /* \"#utility.yul\":12616:12795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12801:13167   */\n    tag_397:\n        /* \"#utility.yul\":12943:12946   */\n      0x00\n        /* \"#utility.yul\":12964:13031   */\n      tag_549\n        /* \"#utility.yul\":13028:13030   */\n      0x1d\n        /* \"#utility.yul\":13023:13026   */\n      dup4\n        /* \"#utility.yul\":12964:13031   */\n      tag_363\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":12957:13031   */\n      swap2\n      pop\n        /* \"#utility.yul\":13040:13133   */\n      tag_550\n        /* \"#utility.yul\":13129:13132   */\n      dup3\n        /* \"#utility.yul\":13040:13133   */\n      tag_396\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13158:13160   */\n      0x20\n        /* \"#utility.yul\":13153:13156   */\n      dup3\n        /* \"#utility.yul\":13149:13161   */\n      add\n        /* \"#utility.yul\":13142:13161   */\n      swap1\n      pop\n        /* \"#utility.yul\":12801:13167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13173:13592   */\n    tag_204:\n        /* \"#utility.yul\":13339:13343   */\n      0x00\n        /* \"#utility.yul\":13377:13379   */\n      0x20\n        /* \"#utility.yul\":13366:13375   */\n      dup3\n        /* \"#utility.yul\":13362:13380   */\n      add\n        /* \"#utility.yul\":13354:13380   */\n      swap1\n      pop\n        /* \"#utility.yul\":13426:13435   */\n      dup2\n        /* \"#utility.yul\":13420:13424   */\n      dup2\n        /* \"#utility.yul\":13416:13436   */\n      sub\n        /* \"#utility.yul\":13412:13413   */\n      0x00\n        /* \"#utility.yul\":13401:13410   */\n      dup4\n        /* \"#utility.yul\":13397:13414   */\n      add\n        /* \"#utility.yul\":13390:13437   */\n      mstore\n        /* \"#utility.yul\":13454:13585   */\n      tag_552\n        /* \"#utility.yul\":13580:13584   */\n      dup2\n        /* \"#utility.yul\":13454:13585   */\n      tag_397\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13446:13585   */\n      swap1\n      pop\n        /* \"#utility.yul\":13173:13592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13598:13778   */\n    tag_398:\n        /* \"#utility.yul\":13646:13723   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13643:13644   */\n      0x00\n        /* \"#utility.yul\":13636:13724   */\n      mstore\n        /* \"#utility.yul\":13743:13747   */\n      0x12\n        /* \"#utility.yul\":13740:13741   */\n      0x04\n        /* \"#utility.yul\":13733:13748   */\n      mstore\n        /* \"#utility.yul\":13767:13771   */\n      0x24\n        /* \"#utility.yul\":13764:13765   */\n      0x00\n        /* \"#utility.yul\":13757:13772   */\n      revert\n        /* \"#utility.yul\":13784:13969   */\n    tag_207:\n        /* \"#utility.yul\":13824:13825   */\n      0x00\n        /* \"#utility.yul\":13841:13861   */\n      tag_555\n        /* \"#utility.yul\":13859:13860   */\n      dup3\n        /* \"#utility.yul\":13841:13861   */\n      tag_374\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13836:13861   */\n      swap2\n      pop\n        /* \"#utility.yul\":13875:13895   */\n      tag_556\n        /* \"#utility.yul\":13893:13894   */\n      dup4\n        /* \"#utility.yul\":13875:13895   */\n      tag_374\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13870:13895   */\n      swap3\n      pop\n        /* \"#utility.yul\":13914:13915   */\n      dup3\n        /* \"#utility.yul\":13904:13939   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":13919:13937   */\n      tag_558\n      tag_398\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13904:13939   */\n    tag_557:\n        /* \"#utility.yul\":13961:13962   */\n      dup3\n        /* \"#utility.yul\":13958:13959   */\n      dup3\n        /* \"#utility.yul\":13954:13963   */\n      div\n        /* \"#utility.yul\":13949:13963   */\n      swap1\n      pop\n        /* \"#utility.yul\":13784:13969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13975:14169   */\n    tag_213:\n        /* \"#utility.yul\":14015:14019   */\n      0x00\n        /* \"#utility.yul\":14035:14055   */\n      tag_560\n        /* \"#utility.yul\":14053:14054   */\n      dup3\n        /* \"#utility.yul\":14035:14055   */\n      tag_374\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14030:14055   */\n      swap2\n      pop\n        /* \"#utility.yul\":14069:14089   */\n      tag_561\n        /* \"#utility.yul\":14087:14088   */\n      dup4\n        /* \"#utility.yul\":14069:14089   */\n      tag_374\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14064:14089   */\n      swap3\n      pop\n        /* \"#utility.yul\":14113:14114   */\n      dup3\n        /* \"#utility.yul\":14110:14111   */\n      dup3\n        /* \"#utility.yul\":14106:14115   */\n      sub\n        /* \"#utility.yul\":14098:14115   */\n      swap1\n      pop\n        /* \"#utility.yul\":14137:14138   */\n      dup2\n        /* \"#utility.yul\":14131:14135   */\n      dup2\n        /* \"#utility.yul\":14128:14139   */\n      gt\n        /* \"#utility.yul\":14125:14162   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":14142:14160   */\n      tag_563\n      tag_395\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14125:14162   */\n    tag_562:\n        /* \"#utility.yul\":13975:14169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14175:14366   */\n    tag_218:\n        /* \"#utility.yul\":14215:14218   */\n      0x00\n        /* \"#utility.yul\":14234:14254   */\n      tag_565\n        /* \"#utility.yul\":14252:14253   */\n      dup3\n        /* \"#utility.yul\":14234:14254   */\n      tag_374\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14229:14254   */\n      swap2\n      pop\n        /* \"#utility.yul\":14268:14288   */\n      tag_566\n        /* \"#utility.yul\":14286:14287   */\n      dup4\n        /* \"#utility.yul\":14268:14288   */\n      tag_374\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14263:14288   */\n      swap3\n      pop\n        /* \"#utility.yul\":14311:14312   */\n      dup3\n        /* \"#utility.yul\":14308:14309   */\n      dup3\n        /* \"#utility.yul\":14304:14313   */\n      add\n        /* \"#utility.yul\":14297:14313   */\n      swap1\n      pop\n        /* \"#utility.yul\":14332:14335   */\n      dup1\n        /* \"#utility.yul\":14329:14330   */\n      dup3\n        /* \"#utility.yul\":14326:14336   */\n      gt\n        /* \"#utility.yul\":14323:14359   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":14339:14357   */\n      tag_568\n      tag_395\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14323:14359   */\n    tag_567:\n        /* \"#utility.yul\":14175:14366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14372:14540   */\n    tag_399:\n        /* \"#utility.yul\":14512:14532   */\n      0x55534454207061796f7574206661696c65640000000000000000000000000000\n        /* \"#utility.yul\":14508:14509   */\n      0x00\n        /* \"#utility.yul\":14500:14506   */\n      dup3\n        /* \"#utility.yul\":14496:14510   */\n      add\n        /* \"#utility.yul\":14489:14533   */\n      mstore\n        /* \"#utility.yul\":14372:14540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14546:14912   */\n    tag_400:\n        /* \"#utility.yul\":14688:14691   */\n      0x00\n        /* \"#utility.yul\":14709:14776   */\n      tag_571\n        /* \"#utility.yul\":14773:14775   */\n      0x12\n        /* \"#utility.yul\":14768:14771   */\n      dup4\n        /* \"#utility.yul\":14709:14776   */\n      tag_363\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14702:14776   */\n      swap2\n      pop\n        /* \"#utility.yul\":14785:14878   */\n      tag_572\n        /* \"#utility.yul\":14874:14877   */\n      dup3\n        /* \"#utility.yul\":14785:14878   */\n      tag_399\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":14903:14905   */\n      0x20\n        /* \"#utility.yul\":14898:14901   */\n      dup3\n        /* \"#utility.yul\":14894:14906   */\n      add\n        /* \"#utility.yul\":14887:14906   */\n      swap1\n      pop\n        /* \"#utility.yul\":14546:14912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14918:15337   */\n    tag_227:\n        /* \"#utility.yul\":15084:15088   */\n      0x00\n        /* \"#utility.yul\":15122:15124   */\n      0x20\n        /* \"#utility.yul\":15111:15120   */\n      dup3\n        /* \"#utility.yul\":15107:15125   */\n      add\n        /* \"#utility.yul\":15099:15125   */\n      swap1\n      pop\n        /* \"#utility.yul\":15171:15180   */\n      dup2\n        /* \"#utility.yul\":15165:15169   */\n      dup2\n        /* \"#utility.yul\":15161:15181   */\n      sub\n        /* \"#utility.yul\":15157:15158   */\n      0x00\n        /* \"#utility.yul\":15146:15155   */\n      dup4\n        /* \"#utility.yul\":15142:15159   */\n      add\n        /* \"#utility.yul\":15135:15182   */\n      mstore\n        /* \"#utility.yul\":15199:15330   */\n      tag_574\n        /* \"#utility.yul\":15325:15329   */\n      dup2\n        /* \"#utility.yul\":15199:15330   */\n      tag_400\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15191:15330   */\n      swap1\n      pop\n        /* \"#utility.yul\":14918:15337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15343:15785   */\n    tag_229:\n        /* \"#utility.yul\":15492:15496   */\n      0x00\n        /* \"#utility.yul\":15530:15532   */\n      0x60\n        /* \"#utility.yul\":15519:15528   */\n      dup3\n        /* \"#utility.yul\":15515:15533   */\n      add\n        /* \"#utility.yul\":15507:15533   */\n      swap1\n      pop\n        /* \"#utility.yul\":15543:15614   */\n      tag_576\n        /* \"#utility.yul\":15611:15612   */\n      0x00\n        /* \"#utility.yul\":15600:15609   */\n      dup4\n        /* \"#utility.yul\":15596:15613   */\n      add\n        /* \"#utility.yul\":15587:15593   */\n      dup7\n        /* \"#utility.yul\":15543:15614   */\n      tag_379\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":15624:15696   */\n      tag_577\n        /* \"#utility.yul\":15692:15694   */\n      0x20\n        /* \"#utility.yul\":15681:15690   */\n      dup4\n        /* \"#utility.yul\":15677:15695   */\n      add\n        /* \"#utility.yul\":15668:15674   */\n      dup6\n        /* \"#utility.yul\":15624:15696   */\n      tag_379\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":15706:15778   */\n      tag_578\n        /* \"#utility.yul\":15774:15776   */\n      0x40\n        /* \"#utility.yul\":15763:15772   */\n      dup4\n        /* \"#utility.yul\":15759:15777   */\n      add\n        /* \"#utility.yul\":15750:15756   */\n      dup5\n        /* \"#utility.yul\":15706:15778   */\n      tag_379\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":15343:15785   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15791:15967   */\n    tag_401:\n        /* \"#utility.yul\":15931:15959   */\n      0x4275792072617465206d757374206265203e3d2031205354454d000000000000\n        /* \"#utility.yul\":15927:15928   */\n      0x00\n        /* \"#utility.yul\":15919:15925   */\n      dup3\n        /* \"#utility.yul\":15915:15929   */\n      add\n        /* \"#utility.yul\":15908:15960   */\n      mstore\n        /* \"#utility.yul\":15791:15967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15973:16339   */\n    tag_402:\n        /* \"#utility.yul\":16115:16118   */\n      0x00\n        /* \"#utility.yul\":16136:16203   */\n      tag_581\n        /* \"#utility.yul\":16200:16202   */\n      0x1a\n        /* \"#utility.yul\":16195:16198   */\n      dup4\n        /* \"#utility.yul\":16136:16203   */\n      tag_363\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16129:16203   */\n      swap2\n      pop\n        /* \"#utility.yul\":16212:16305   */\n      tag_582\n        /* \"#utility.yul\":16301:16304   */\n      dup3\n        /* \"#utility.yul\":16212:16305   */\n      tag_401\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":16330:16332   */\n      0x20\n        /* \"#utility.yul\":16325:16328   */\n      dup3\n        /* \"#utility.yul\":16321:16333   */\n      add\n        /* \"#utility.yul\":16314:16333   */\n      swap1\n      pop\n        /* \"#utility.yul\":15973:16339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16345:16764   */\n    tag_241:\n        /* \"#utility.yul\":16511:16515   */\n      0x00\n        /* \"#utility.yul\":16549:16551   */\n      0x20\n        /* \"#utility.yul\":16538:16547   */\n      dup3\n        /* \"#utility.yul\":16534:16552   */\n      add\n        /* \"#utility.yul\":16526:16552   */\n      swap1\n      pop\n        /* \"#utility.yul\":16598:16607   */\n      dup2\n        /* \"#utility.yul\":16592:16596   */\n      dup2\n        /* \"#utility.yul\":16588:16608   */\n      sub\n        /* \"#utility.yul\":16584:16585   */\n      0x00\n        /* \"#utility.yul\":16573:16582   */\n      dup4\n        /* \"#utility.yul\":16569:16586   */\n      add\n        /* \"#utility.yul\":16562:16609   */\n      mstore\n        /* \"#utility.yul\":16626:16757   */\n      tag_584\n        /* \"#utility.yul\":16752:16756   */\n      dup2\n        /* \"#utility.yul\":16626:16757   */\n      tag_402\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16618:16757   */\n      swap1\n      pop\n        /* \"#utility.yul\":16345:16764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16770:16949   */\n    tag_403:\n        /* \"#utility.yul\":16910:16941   */\n      0x4275792072617465206d757374206265203c3d2053656c6c2072617465000000\n        /* \"#utility.yul\":16906:16907   */\n      0x00\n        /* \"#utility.yul\":16898:16904   */\n      dup3\n        /* \"#utility.yul\":16894:16908   */\n      add\n        /* \"#utility.yul\":16887:16942   */\n      mstore\n        /* \"#utility.yul\":16770:16949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16955:17321   */\n    tag_404:\n        /* \"#utility.yul\":17097:17100   */\n      0x00\n        /* \"#utility.yul\":17118:17185   */\n      tag_587\n        /* \"#utility.yul\":17182:17184   */\n      0x1d\n        /* \"#utility.yul\":17177:17180   */\n      dup4\n        /* \"#utility.yul\":17118:17185   */\n      tag_363\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17111:17185   */\n      swap2\n      pop\n        /* \"#utility.yul\":17194:17287   */\n      tag_588\n        /* \"#utility.yul\":17283:17286   */\n      dup3\n        /* \"#utility.yul\":17194:17287   */\n      tag_403\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17312:17314   */\n      0x20\n        /* \"#utility.yul\":17307:17310   */\n      dup3\n        /* \"#utility.yul\":17303:17315   */\n      add\n        /* \"#utility.yul\":17296:17315   */\n      swap1\n      pop\n        /* \"#utility.yul\":16955:17321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17327:17746   */\n    tag_244:\n        /* \"#utility.yul\":17493:17497   */\n      0x00\n        /* \"#utility.yul\":17531:17533   */\n      0x20\n        /* \"#utility.yul\":17520:17529   */\n      dup3\n        /* \"#utility.yul\":17516:17534   */\n      add\n        /* \"#utility.yul\":17508:17534   */\n      swap1\n      pop\n        /* \"#utility.yul\":17580:17589   */\n      dup2\n        /* \"#utility.yul\":17574:17578   */\n      dup2\n        /* \"#utility.yul\":17570:17590   */\n      sub\n        /* \"#utility.yul\":17566:17567   */\n      0x00\n        /* \"#utility.yul\":17555:17564   */\n      dup4\n        /* \"#utility.yul\":17551:17568   */\n      add\n        /* \"#utility.yul\":17544:17591   */\n      mstore\n        /* \"#utility.yul\":17608:17739   */\n      tag_590\n        /* \"#utility.yul\":17734:17738   */\n      dup2\n        /* \"#utility.yul\":17608:17739   */\n      tag_404\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17600:17739   */\n      swap1\n      pop\n        /* \"#utility.yul\":17327:17746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17752:18008   */\n    tag_405:\n        /* \"#utility.yul\":17892:17958   */\n      0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572\n        /* \"#utility.yul\":17888:17889   */\n      0x00\n        /* \"#utility.yul\":17880:17886   */\n      dup3\n        /* \"#utility.yul\":17876:17890   */\n      add\n        /* \"#utility.yul\":17869:17959   */\n      mstore\n        /* \"#utility.yul\":17993:18000   */\n      0x2055534454000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17988:17990   */\n      0x20\n        /* \"#utility.yul\":17980:17986   */\n      dup3\n        /* \"#utility.yul\":17976:17991   */\n      add\n        /* \"#utility.yul\":17969:18001   */\n      mstore\n        /* \"#utility.yul\":17752:18008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18014:18380   */\n    tag_406:\n        /* \"#utility.yul\":18156:18159   */\n      0x00\n        /* \"#utility.yul\":18177:18244   */\n      tag_593\n        /* \"#utility.yul\":18241:18243   */\n      0x25\n        /* \"#utility.yul\":18236:18239   */\n      dup4\n        /* \"#utility.yul\":18177:18244   */\n      tag_363\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18170:18244   */\n      swap2\n      pop\n        /* \"#utility.yul\":18253:18346   */\n      tag_594\n        /* \"#utility.yul\":18342:18345   */\n      dup3\n        /* \"#utility.yul\":18253:18346   */\n      tag_405\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":18371:18373   */\n      0x40\n        /* \"#utility.yul\":18366:18369   */\n      dup3\n        /* \"#utility.yul\":18362:18374   */\n      add\n        /* \"#utility.yul\":18355:18374   */\n      swap1\n      pop\n        /* \"#utility.yul\":18014:18380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18386:18805   */\n    tag_252:\n        /* \"#utility.yul\":18552:18556   */\n      0x00\n        /* \"#utility.yul\":18590:18592   */\n      0x20\n        /* \"#utility.yul\":18579:18588   */\n      dup3\n        /* \"#utility.yul\":18575:18593   */\n      add\n        /* \"#utility.yul\":18567:18593   */\n      swap1\n      pop\n        /* \"#utility.yul\":18639:18648   */\n      dup2\n        /* \"#utility.yul\":18633:18637   */\n      dup2\n        /* \"#utility.yul\":18629:18649   */\n      sub\n        /* \"#utility.yul\":18625:18626   */\n      0x00\n        /* \"#utility.yul\":18614:18623   */\n      dup4\n        /* \"#utility.yul\":18610:18627   */\n      add\n        /* \"#utility.yul\":18603:18650   */\n      mstore\n        /* \"#utility.yul\":18667:18798   */\n      tag_596\n        /* \"#utility.yul\":18793:18797   */\n      dup2\n        /* \"#utility.yul\":18667:18798   */\n      tag_406\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18659:18798   */\n      swap1\n      pop\n        /* \"#utility.yul\":18386:18805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18811:19253   */\n    tag_275:\n        /* \"#utility.yul\":18960:18964   */\n      0x00\n        /* \"#utility.yul\":18998:19000   */\n      0x60\n        /* \"#utility.yul\":18987:18996   */\n      dup3\n        /* \"#utility.yul\":18983:19001   */\n      add\n        /* \"#utility.yul\":18975:19001   */\n      swap1\n      pop\n        /* \"#utility.yul\":19011:19082   */\n      tag_598\n        /* \"#utility.yul\":19079:19080   */\n      0x00\n        /* \"#utility.yul\":19068:19077   */\n      dup4\n        /* \"#utility.yul\":19064:19081   */\n      add\n        /* \"#utility.yul\":19055:19061   */\n      dup7\n        /* \"#utility.yul\":19011:19082   */\n      tag_382\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19092:19164   */\n      tag_599\n        /* \"#utility.yul\":19160:19162   */\n      0x20\n        /* \"#utility.yul\":19149:19158   */\n      dup4\n        /* \"#utility.yul\":19145:19163   */\n      add\n        /* \"#utility.yul\":19136:19142   */\n      dup6\n        /* \"#utility.yul\":19092:19164   */\n      tag_382\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19174:19246   */\n      tag_600\n        /* \"#utility.yul\":19242:19244   */\n      0x40\n        /* \"#utility.yul\":19231:19240   */\n      dup4\n        /* \"#utility.yul\":19227:19245   */\n      add\n        /* \"#utility.yul\":19218:19224   */\n      dup5\n        /* \"#utility.yul\":19174:19246   */\n      tag_379\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18811:19253   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19259:19429   */\n    tag_407:\n        /* \"#utility.yul\":19399:19421   */\n      0x55534454207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":19395:19396   */\n      0x00\n        /* \"#utility.yul\":19387:19393   */\n      dup3\n        /* \"#utility.yul\":19383:19397   */\n      add\n        /* \"#utility.yul\":19376:19422   */\n      mstore\n        /* \"#utility.yul\":19259:19429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19435:19801   */\n    tag_408:\n        /* \"#utility.yul\":19577:19580   */\n      0x00\n        /* \"#utility.yul\":19598:19665   */\n      tag_603\n        /* \"#utility.yul\":19662:19664   */\n      0x14\n        /* \"#utility.yul\":19657:19660   */\n      dup4\n        /* \"#utility.yul\":19598:19665   */\n      tag_363\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":19591:19665   */\n      swap2\n      pop\n        /* \"#utility.yul\":19674:19767   */\n      tag_604\n        /* \"#utility.yul\":19763:19766   */\n      dup3\n        /* \"#utility.yul\":19674:19767   */\n      tag_407\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19792:19794   */\n      0x20\n        /* \"#utility.yul\":19787:19790   */\n      dup3\n        /* \"#utility.yul\":19783:19795   */\n      add\n        /* \"#utility.yul\":19776:19795   */\n      swap1\n      pop\n        /* \"#utility.yul\":19435:19801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19807:20226   */\n    tag_281:\n        /* \"#utility.yul\":19973:19977   */\n      0x00\n        /* \"#utility.yul\":20011:20013   */\n      0x20\n        /* \"#utility.yul\":20000:20009   */\n      dup3\n        /* \"#utility.yul\":19996:20014   */\n      add\n        /* \"#utility.yul\":19988:20014   */\n      swap1\n      pop\n        /* \"#utility.yul\":20060:20069   */\n      dup2\n        /* \"#utility.yul\":20054:20058   */\n      dup2\n        /* \"#utility.yul\":20050:20070   */\n      sub\n        /* \"#utility.yul\":20046:20047   */\n      0x00\n        /* \"#utility.yul\":20035:20044   */\n      dup4\n        /* \"#utility.yul\":20031:20048   */\n      add\n        /* \"#utility.yul\":20024:20071   */\n      mstore\n        /* \"#utility.yul\":20088:20219   */\n      tag_606\n        /* \"#utility.yul\":20214:20218   */\n      dup2\n        /* \"#utility.yul\":20088:20219   */\n      tag_408\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20080:20219   */\n      swap1\n      pop\n        /* \"#utility.yul\":19807:20226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20232:20564   */\n    tag_284:\n        /* \"#utility.yul\":20353:20357   */\n      0x00\n        /* \"#utility.yul\":20391:20393   */\n      0x40\n        /* \"#utility.yul\":20380:20389   */\n      dup3\n        /* \"#utility.yul\":20376:20394   */\n      add\n        /* \"#utility.yul\":20368:20394   */\n      swap1\n      pop\n        /* \"#utility.yul\":20404:20475   */\n      tag_608\n        /* \"#utility.yul\":20472:20473   */\n      0x00\n        /* \"#utility.yul\":20461:20470   */\n      dup4\n        /* \"#utility.yul\":20457:20474   */\n      add\n        /* \"#utility.yul\":20448:20454   */\n      dup6\n        /* \"#utility.yul\":20404:20475   */\n      tag_379\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20485:20557   */\n      tag_609\n        /* \"#utility.yul\":20553:20555   */\n      0x20\n        /* \"#utility.yul\":20542:20551   */\n      dup4\n        /* \"#utility.yul\":20538:20556   */\n      add\n        /* \"#utility.yul\":20529:20535   */\n      dup5\n        /* \"#utility.yul\":20485:20557   */\n      tag_379\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20232:20564   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20570:20713   */\n    tag_409:\n        /* \"#utility.yul\":20627:20632   */\n      0x00\n        /* \"#utility.yul\":20658:20664   */\n      dup2\n        /* \"#utility.yul\":20652:20665   */\n      mload\n        /* \"#utility.yul\":20643:20665   */\n      swap1\n      pop\n        /* \"#utility.yul\":20674:20707   */\n      tag_611\n        /* \"#utility.yul\":20701:20706   */\n      dup2\n        /* \"#utility.yul\":20674:20707   */\n      tag_375\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20570:20713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20719:21070   */\n    tag_293:\n        /* \"#utility.yul\":20789:20795   */\n      0x00\n        /* \"#utility.yul\":20838:20840   */\n      0x20\n        /* \"#utility.yul\":20826:20835   */\n      dup3\n        /* \"#utility.yul\":20817:20824   */\n      dup5\n        /* \"#utility.yul\":20813:20836   */\n      sub\n        /* \"#utility.yul\":20809:20841   */\n      slt\n        /* \"#utility.yul\":20806:20925   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":20844:20923   */\n      tag_614\n      tag_368\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20806:20925   */\n    tag_613:\n        /* \"#utility.yul\":20964:20965   */\n      0x00\n        /* \"#utility.yul\":20989:21053   */\n      tag_615\n        /* \"#utility.yul\":21045:21052   */\n      dup5\n        /* \"#utility.yul\":21036:21042   */\n      dup3\n        /* \"#utility.yul\":21025:21034   */\n      dup6\n        /* \"#utility.yul\":21021:21043   */\n      add\n        /* \"#utility.yul\":20989:21053   */\n      tag_409\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20979:21053   */\n      swap2\n      pop\n        /* \"#utility.yul\":20935:21063   */\n      pop\n        /* \"#utility.yul\":20719:21070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21076:21247   */\n    tag_410:\n        /* \"#utility.yul\":21216:21239   */\n      0x4e6f2070726f66697420746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":21212:21213   */\n      0x00\n        /* \"#utility.yul\":21204:21210   */\n      dup3\n        /* \"#utility.yul\":21200:21214   */\n      add\n        /* \"#utility.yul\":21193:21240   */\n      mstore\n        /* \"#utility.yul\":21076:21247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21253:21619   */\n    tag_411:\n        /* \"#utility.yul\":21395:21398   */\n      0x00\n        /* \"#utility.yul\":21416:21483   */\n      tag_618\n        /* \"#utility.yul\":21480:21482   */\n      0x15\n        /* \"#utility.yul\":21475:21478   */\n      dup4\n        /* \"#utility.yul\":21416:21483   */\n      tag_363\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":21409:21483   */\n      swap2\n      pop\n        /* \"#utility.yul\":21492:21585   */\n      tag_619\n        /* \"#utility.yul\":21581:21584   */\n      dup3\n        /* \"#utility.yul\":21492:21585   */\n      tag_410\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":21610:21612   */\n      0x20\n        /* \"#utility.yul\":21605:21608   */\n      dup3\n        /* \"#utility.yul\":21601:21613   */\n      add\n        /* \"#utility.yul\":21594:21613   */\n      swap1\n      pop\n        /* \"#utility.yul\":21253:21619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21625:22044   */\n    tag_310:\n        /* \"#utility.yul\":21791:21795   */\n      0x00\n        /* \"#utility.yul\":21829:21831   */\n      0x20\n        /* \"#utility.yul\":21818:21827   */\n      dup3\n        /* \"#utility.yul\":21814:21832   */\n      add\n        /* \"#utility.yul\":21806:21832   */\n      swap1\n      pop\n        /* \"#utility.yul\":21878:21887   */\n      dup2\n        /* \"#utility.yul\":21872:21876   */\n      dup2\n        /* \"#utility.yul\":21868:21888   */\n      sub\n        /* \"#utility.yul\":21864:21865   */\n      0x00\n        /* \"#utility.yul\":21853:21862   */\n      dup4\n        /* \"#utility.yul\":21849:21866   */\n      add\n        /* \"#utility.yul\":21842:21889   */\n      mstore\n        /* \"#utility.yul\":21906:22037   */\n      tag_621\n        /* \"#utility.yul\":22032:22036   */\n      dup2\n        /* \"#utility.yul\":21906:22037   */\n      tag_411\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":21898:22037   */\n      swap1\n      pop\n        /* \"#utility.yul\":21625:22044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22050:22492   */\n    tag_328:\n        /* \"#utility.yul\":22199:22203   */\n      0x00\n        /* \"#utility.yul\":22237:22239   */\n      0x60\n        /* \"#utility.yul\":22226:22235   */\n      dup3\n        /* \"#utility.yul\":22222:22240   */\n      add\n        /* \"#utility.yul\":22214:22240   */\n      swap1\n      pop\n        /* \"#utility.yul\":22250:22321   */\n      tag_623\n        /* \"#utility.yul\":22318:22319   */\n      0x00\n        /* \"#utility.yul\":22307:22316   */\n      dup4\n        /* \"#utility.yul\":22303:22320   */\n      add\n        /* \"#utility.yul\":22294:22300   */\n      dup7\n        /* \"#utility.yul\":22250:22321   */\n      tag_382\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":22331:22403   */\n      tag_624\n        /* \"#utility.yul\":22399:22401   */\n      0x20\n        /* \"#utility.yul\":22388:22397   */\n      dup4\n        /* \"#utility.yul\":22384:22402   */\n      add\n        /* \"#utility.yul\":22375:22381   */\n      dup6\n        /* \"#utility.yul\":22331:22403   */\n      tag_379\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22413:22485   */\n      tag_625\n        /* \"#utility.yul\":22481:22483   */\n      0x40\n        /* \"#utility.yul\":22470:22479   */\n      dup4\n        /* \"#utility.yul\":22466:22484   */\n      add\n        /* \"#utility.yul\":22457:22463   */\n      dup5\n        /* \"#utility.yul\":22413:22485   */\n      tag_379\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22050:22492   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220886ee18cf1ea5854bc80f668e9b743d806b4e1b1faf0ca924008ac3fc4ad251464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 835,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 640,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 973,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9280:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:832:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1397:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:33:7"
															},
															"nodeType": "YulIf",
															"src": "1360:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1490:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1534:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1628:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1673:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1767:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1812:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1906:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1951:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2045:130:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2091:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1288:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1299:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1311:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1319:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1327:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1335:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1343:6:7",
														"type": ""
													}
												],
												"src": "1205:977:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2258:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2274:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2230:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2240:6:7",
														"type": ""
													}
												],
												"src": "2188:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2321:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2331:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2462:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2452:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2293:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2621:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2624:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2614:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2614:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2648:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2638:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2479:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2716:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2726:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2740:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2736:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2757:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2787:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2793:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2761:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2834:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2848:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2862:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2870:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2858:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2858:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2848:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2814:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:26:7"
															},
															"nodeType": "YulIf",
															"src": "2804:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2937:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2951:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2951:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2951:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2901:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2921:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2921:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2898:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:38:7"
															},
															"nodeType": "YulIf",
															"src": "2895:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2700:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2709:6:7",
														"type": ""
													}
												],
												"src": "2665:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3045:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3055:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3063:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3055:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3086:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3076:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3076:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3117:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3120:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3107:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3032:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3040:4:7",
														"type": ""
													}
												],
												"src": "2991:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3210:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3217:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3202:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3175:6:7",
														"type": ""
													}
												],
												"src": "3138:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3300:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3325:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3331:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3300:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3265:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3271:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3281:8:7",
														"type": ""
													}
												],
												"src": "3237:107:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3426:317:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3436:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "3457:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3469:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "3440:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3480:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3511:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3492:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3484:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3598:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3629:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3640:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3610:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "3598:8:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3658:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3671:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3682:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3678:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3658:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3697:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3710:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3721:8:7"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3731:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3707:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3387:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "3394:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "3406:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3419:6:7",
														"type": ""
													}
												],
												"src": "3350:393:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3781:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3791:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3798:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3767:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3777:3:7",
														"type": ""
													}
												],
												"src": "3749:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3875:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3885:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3943:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3925:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3925:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3916:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3916:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3898:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3885:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3855:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3865:9:7",
														"type": ""
													}
												],
												"src": "3815:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4010:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4020:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4027:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4020:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3996:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4006:3:7",
														"type": ""
													}
												],
												"src": "3963:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4120:193:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4130:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "4185:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4154:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "4134:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4209:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "4249:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "4243:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4243:11:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4256:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "4288:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4264:23:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4264:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "4215:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4215:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "4202:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:105:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4202:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4097:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "4111:7:7",
														"type": ""
													}
												],
												"src": "4044:269:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:24:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4378:8:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4385:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4364:3:7",
														"type": ""
													}
												],
												"src": "4319:73:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4451:136:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4461:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4475:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "4465:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4560:4:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4566:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4574:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4516:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4516:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4437:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4443:6:7",
														"type": ""
													}
												],
												"src": "4398:189:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4643:136:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4710:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4754:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4761:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4724:29:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4724:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4724:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4663:5:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4670:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4660:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:14:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4675:26:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4677:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4690:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4686:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4686:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4677:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4657:2:7",
																"statements": []
															},
															"src": "4653:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4631:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4638:3:7",
														"type": ""
													}
												],
												"src": "4593:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4864:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4890:431:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4904:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4952:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4920:31:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4920:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4908:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4971:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4994:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "5022:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "5004:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5004:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4990:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4990:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4975:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5191:27:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5193:23:7",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "5208:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "5193:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "5175:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5187:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5172:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5172:18:7"
																		},
																		"nodeType": "YulIf",
																		"src": "5169:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "5260:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "5277:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "5305:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "5287:17:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5287:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5273:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5273:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "5231:28:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5231:80:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5231:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4881:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4886:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4878:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:11:7"
															},
															"nodeType": "YulIf",
															"src": "4875:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4840:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4847:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4852:10:7",
														"type": ""
													}
												],
												"src": "4785:543:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5397:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5407:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5438:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5407:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "5372:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5378:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5388:8:7",
														"type": ""
													}
												],
												"src": "5334:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:118:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5518:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5567:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5570:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5563:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5563:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5582:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5578:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5578:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "5534:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5534:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "5530:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5522:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5595:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5609:4:7"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5615:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5485:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "5491:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													}
												],
												"src": "5457:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5712:214:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5845:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5872:4:7"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5878:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5853:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5845:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5891:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5902:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5912:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5915:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5899:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5891:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5693:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5699:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5707:4:7",
														"type": ""
													}
												],
												"src": "5631:295:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6023:1303:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6034:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6081:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6048:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "6038:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6170:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6172:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6172:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6172:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6142:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6150:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6139:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6139:30:7"
															},
															"nodeType": "YulIf",
															"src": "6136:56:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6202:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "6248:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "6242:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6242:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "6216:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "6206:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6347:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "6353:6:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6361:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "6301:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6301:67:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6378:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6395:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "6382:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6406:17:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6419:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "6406:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6470:611:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6484:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6503:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6515:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6511:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6511:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6499:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6499:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "6488:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6535:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6581:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "6549:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6549:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "6539:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6599:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6608:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6603:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6667:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6692:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6710:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6715:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6706:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6706:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6700:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6700:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6685:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6685:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6685:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6744:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6758:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6766:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6754:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6754:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6744:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6785:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6802:9:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6813:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6798:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6798:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6785:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6633:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6636:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6630:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6630:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6645:21:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6647:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6656:1:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6659:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6652:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6652:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6647:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6626:3:7",
																					"statements": []
																				},
																				"src": "6622:208:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6866:156:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6884:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6911:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6916:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6907:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6907:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6901:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6901:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6888:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6951:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6978:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6993:6:7"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "7001:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6989:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6989:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6959:18:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6959:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6944:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6944:64:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6944:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6849:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6858:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6846:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6846:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "6843:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7042:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "7056:6:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7064:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "7052:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7052:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7068:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7048:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7048:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7035:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7035:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7035:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6463:618:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7098:222:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7112:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7125:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "7116:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7149:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7167:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7186:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7191:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7182:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7182:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7176:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7176:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7167:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "7142:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "7139:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7236:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7295:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "7302:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "7242:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7242:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7229:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7229:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7229:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7090:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6443:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6451:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6440:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "6433:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6012:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6018:3:7",
														"type": ""
													}
												],
												"src": "5931:1395:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7397:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7414:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7419:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7419:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7407:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7407:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7385:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7392:3:7",
														"type": ""
													}
												],
												"src": "7332:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7554:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7564:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7576:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7587:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7572:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7572:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7564:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7644:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7657:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7668:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7653:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7653:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7600:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7600:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7600:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7538:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7549:4:7",
														"type": ""
													}
												],
												"src": "7456:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7712:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7729:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7732:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7722:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7722:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7826:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7829:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7819:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7850:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7843:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7684:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7918:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7928:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7951:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7933:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7928:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7962:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7985:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7967:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7962:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7996:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8019:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8022:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8015:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8015:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8000:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8033:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8062:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8044:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8033:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8251:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8253:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8253:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8253:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8184:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8177:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8177:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8207:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8214:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8223:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8210:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8210:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8204:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8204:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8157:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8157:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8137:113:7"
															},
															"nodeType": "YulIf",
															"src": "8134:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7901:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7904:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7910:7:7",
														"type": ""
													}
												],
												"src": "7870:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8330:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8340:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8363:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8345:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8340:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8374:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8397:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8379:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8374:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8408:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8419:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8422:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8415:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8415:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8408:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8448:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8450:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8450:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8450:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8440:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8443:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8437:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:10:7"
															},
															"nodeType": "YulIf",
															"src": "8434:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8317:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8320:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8326:3:7",
														"type": ""
													}
												],
												"src": "8286:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8548:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8565:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8588:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8570:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8558:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8558:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8536:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8543:3:7",
														"type": ""
													}
												],
												"src": "8483:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8761:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8771:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8794:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8779:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8771:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8864:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8875:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8860:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8860:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8807:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8807:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8932:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8945:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8956:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8941:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8888:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8888:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8888:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9014:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9038:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9023:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8970:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8970:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8970:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8717:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8729:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8737:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8745:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8756:4:7",
														"type": ""
													}
												],
												"src": "8607:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9153:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9163:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9175:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9186:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9171:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9163:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9243:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9256:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9267:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9252:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9252:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9199:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9199:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9125:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9148:4:7",
														"type": ""
													}
												],
												"src": "9055:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a7640000600755670de0b6b3a764000060085534801562000028575f80fd5b506040516200343d3803806200343d83398181016040528101906200004e91906200068e565b336040518060400160405280600781526020017f5354454d4d4552000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5354454d000000000000000000000000000000000000000000000000000000008152508160039081620000cc91906200096d565b508060049081620000de91906200096d565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000154575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200014b919062000a62565b60405180910390fd5b62000165816200028060201b60201c565b508460065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b819055506200027560095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400008462000269919062000aaa565b6200034360201b60201c565b505050505062000b95565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003b6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003ad919062000a62565b60405180910390fd5b620003c95f8383620003cd60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000421578060025f82825462000414919062000af4565b92505081905550620004f2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620004ad578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004a49392919062000b3f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200053b578060025f828254039250508190555062000585565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005e4919062000b7a565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200062082620005f5565b9050919050565b620006328162000614565b81146200063d575f80fd5b50565b5f81519050620006508162000627565b92915050565b5f819050919050565b6200066a8162000656565b811462000675575f80fd5b50565b5f8151905062000688816200065f565b92915050565b5f805f805f60a08688031215620006aa57620006a9620005f1565b5b5f620006b98882890162000640565b9550506020620006cc8882890162000640565b9450506040620006df8882890162000640565b9350506060620006f28882890162000678565b9250506080620007058882890162000678565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200078e57607f821691505b602082108103620007a457620007a362000749565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620008087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620007cb565b620008148683620007cb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620008556200084f620008498462000656565b6200082c565b62000656565b9050919050565b5f819050919050565b620008708362000835565b620008886200087f826200085c565b848454620007d7565b825550505050565b5f90565b6200089e62000890565b620008ab81848462000865565b505050565b5b81811015620008d257620008c65f8262000894565b600181019050620008b1565b5050565b601f8211156200092157620008eb81620007aa565b620008f684620007bc565b8101602085101562000906578190505b6200091e6200091585620007bc565b830182620008b0565b50505b505050565b5f82821c905092915050565b5f620009435f198460080262000926565b1980831691505092915050565b5f6200095d838362000932565b9150826002028217905092915050565b620009788262000712565b67ffffffffffffffff8111156200099457620009936200071c565b5b620009a0825462000776565b620009ad828285620008d6565b5f60209050601f831160018114620009e3575f8415620009ce578287015190505b620009da858262000950565b86555062000a49565b601f198416620009f386620007aa565b5f5b8281101562000a1c57848901518255600182019150602085019450602081019050620009f5565b8683101562000a3c578489015162000a38601f89168262000932565b8355505b6001600288020188555050505b505050505050565b62000a5c8162000614565b82525050565b5f60208201905062000a775f83018462000a51565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000ab68262000656565b915062000ac38362000656565b925082820262000ad38162000656565b9150828204841483151762000aed5762000aec62000a7d565b5b5092915050565b5f62000b008262000656565b915062000b0d8362000656565b925082820190508082111562000b285762000b2762000a7d565b5b92915050565b62000b398162000656565b82525050565b5f60608201905062000b545f83018662000a51565b62000b63602083018562000b2e565b62000b72604083018462000b2e565b949350505050565b5f60208201905062000b8f5f83018462000b2e565b92915050565b61289a8062000ba35f395ff3fe608060405234801561000f575f80fd5b50600436106101e3575f3560e01c806385e436bf1161010d578063c3f909d4116100a0578063f2fde38b1161006f578063f2fde38b1461054d578063f974821a14610569578063fc37987b14610587578063ff90b54d146105a5576101e3565b8063c3f909d4146104bb578063dd62ed3e146104e3578063f0f4426014610513578063f203787c1461052f576101e3565b80639dc29fac116100dc5780639dc29fac14610435578063a9059cbb14610451578063a98ad46c14610481578063bb2855541461049f576101e3565b806385e436bf146103c15780638da5cb5b146103dd5780638e0b017d146103fb57806395d89b4114610417576101e3565b8063313ce567116101855780636217229b116101545780636217229b1461034b57806370a0823114610369578063715018a614610399578063748e37f4146103a3576101e3565b8063313ce567146102d757806340c10f19146102f55780635d91e3f81461031157806361d027b31461032d576101e3565b80631481794e116101c15780631481794e1461025157806318160ddd1461026d57806323b872dd1461028b57806328821182146102bb576101e3565b806306fdde03146101e7578063095ea7b3146102055780630f7e730b14610235575b5f80fd5b6101ef6105af565b6040516101fc9190611de0565b60405180910390f35b61021f600480360381019061021a9190611e91565b61063f565b60405161022c9190611ee9565b60405180910390f35b61024f600480360381019061024a9190611f02565b610661565b005b61026b60048036038101906102669190611e91565b6106ee565b005b610275610823565b6040516102829190611f3c565b60405180910390f35b6102a560048036038101906102a09190611f55565b61082c565b6040516102b29190611ee9565b60405180910390f35b6102d560048036038101906102d09190611fa5565b61085a565b005b6102df6108e5565b6040516102ec9190611feb565b60405180910390f35b61030f600480360381019061030a9190611e91565b6108ed565b005b61032b60048036038101906103269190611fa5565b610964565b005b610335610c4b565b6040516103429190612013565b60405180910390f35b610353610c70565b6040516103609190611f3c565b60405180910390f35b610383600480360381019061037e9190611f02565b610c76565b6040516103909190611f3c565b60405180910390f35b6103a1610cbb565b005b6103ab610cce565b6040516103b89190611f3c565b60405180910390f35b6103db60048036038101906103d69190611fa5565b610cd4565b005b6103e5610dac565b6040516103f29190612013565b60405180910390f35b61041560048036038101906104109190611fa5565b610dd4565b005b61041f610e68565b60405161042c9190611de0565b60405180910390f35b61044f600480360381019061044a9190611e91565b610ef8565b005b61046b60048036038101906104669190611e91565b610f6f565b6040516104789190611ee9565b60405180910390f35b610489610f91565b6040516104969190612087565b60405180910390f35b6104b960048036038101906104b49190611fa5565b610fb6565b005b6104c361116c565b6040516104da9b9a999897969594939291906120a0565b60405180910390f35b6104fd60048036038101906104f89190612149565b6112e8565b60405161050a9190611f3c565b60405180910390f35b61052d60048036038101906105289190611f02565b61136a565b005b6105376113f8565b6040516105449190612013565b60405180910390f35b61056760048036038101906105629190611f02565b61141d565b005b6105716114a1565b60405161057e9190611f3c565b60405180910390f35b61058f6114a7565b60405161059c9190611f3c565b60405180910390f35b6105ad6114ad565b005b6060600380546105be906121b4565b80601f01602080910402602001604051908101604052809291908181526020018280546105ea906121b4565b80156106355780601f1061060c57610100808354040283529160200191610635565b820191905f5260205f20905b81548152906001019060200180831161061857829003601f168201915b5050505050905090565b5f8061064961158a565b9050610656818585611591565b600191505092915050565b6106696115a3565b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167e56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b60405160405180910390a250565b6106f66115a3565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016107529291906121e4565b6020604051808303815f875af115801561076e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107929190612235565b6107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c8906122aa565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b826040516108179190611f3c565b60405180910390a25050565b5f600254905090565b5f8061083661158a565b905061084385828561162a565b61084e8585856116bd565b60019150509392505050565b6108626115a3565b5f81116108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90612312565b60405180910390fd5b80600b819055507fc5023cc86199e71ca52157b0b124ddbda596c9fb8bab5bb7028d162fa3ed5545816040516108da9190611f3c565b60405180910390a150565b5f6012905090565b6108f56115a3565b61091282670de0b6b3a76400008361090d919061235d565b6117ad565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe826040516109589190611f3c565b60405180910390a25050565b5f81116109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d906123e8565b60405180910390fd5b5f600854670de0b6b3a7640000836109be919061235d565b6109c89190612433565b90505f670de0b6b3a7640000836109df9190612433565b90505f600854826109f0919061235d565b90505f848211610a00575f610a0d565b8482610a0c9190612463565b5b9050610a3b3360095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876116bd565b5f81118015610a9757505f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610b175780600c5f828254610aad9190612496565b92505081905550600b54600c5410610b1657610b0e60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c546116bd565b5f600c819055505b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610b739291906121e4565b6020604051808303815f875af1158015610b8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb39190612235565b610bf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990612513565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420868684604051610c3c93929190612531565b60405180910390a25050505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610cc36115a3565b610ccc5f61182c565b565b600c5481565b610cdc6115a3565b670de0b6b3a7640000811015610d27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1e906125b0565b60405180910390fd5b600854811115610d6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6390612618565b60405180910390fd5b806007819055507eedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb181604051610da19190611f3c565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ddc6115a3565b670de0b6b3a7640000811015610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e906126a6565b60405180910390fd5b806008819055507fbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab81604051610e5d9190611f3c565b60405180910390a150565b606060048054610e77906121b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea3906121b4565b8015610eee5780601f10610ec557610100808354040283529160200191610eee565b820191905f5260205f20905b815481529060010190602001808311610ed157829003601f168201915b5050505050905090565b610f006115a3565b610f1d82670de0b6b3a764000083610f18919061235d565b6118ef565b8173ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df782604051610f639190611f3c565b60405180910390a25050565b5f80610f7961158a565b9050610f868185856116bd565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef906123e8565b60405180910390fd5b5f670de0b6b3a76400008261100d919061235d565b905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161106d939291906126c4565b6020604051808303815f875af1158015611089573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ad9190612235565b6110ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e390612743565b60405180910390fd5b61111860095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836116bd565b3373ffffffffffffffffffffffffffffffffffffffff167f59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb8383604051611160929190612761565b60405180910390a25050565b5f805f805f805f805f805f60075460085460095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111eb60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c76565b611215600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c76565b61121e30610c76565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112789190612013565b602060405180830381865afa158015611293573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b7919061279c565b6112bf610823565b600c54600b549a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6113726115a3565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f60860405160405180910390a250565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114256115a3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611495575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161148c9190612013565b60405180910390fd5b61149e8161182c565b50565b600b5481565b60075481565b6114b56115a3565b5f600c54116114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f090612811565b60405180910390fd5b61154860095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c546116bd565b7f035279bb4d182b0c31a3c5acf2ea52f703ec240e2c8cdaee25e353623db06418600c546040516115799190611f3c565b60405180910390a15f600c81905550565b5f33905090565b61159e838383600161196e565b505050565b6115ab61158a565b73ffffffffffffffffffffffffffffffffffffffff166115c9610dac565b73ffffffffffffffffffffffffffffffffffffffff1614611628576115ec61158a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161161f9190612013565b60405180910390fd5b565b5f61163584846112e8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156116b757818110156116a8578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161169f9392919061282f565b60405180910390fd5b6116b684848484035f61196e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361172d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117249190612013565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361179d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117949190612013565b60405180910390fd5b6117a8838383611b3d565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361181d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118149190612013565b60405180910390fd5b6118285f8383611b3d565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361195f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119569190612013565b60405180910390fd5b61196a825f83611b3d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119de575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119d59190612013565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a4e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a459190612013565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b37578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b2e9190611f3c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b8d578060025f828254611b819190612496565b92505081905550611c5b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c16578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c0d9392919061282f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ca2578060025f8282540392505081905550611cec565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d499190611f3c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d8d578082015181840152602081019050611d72565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611db282611d56565b611dbc8185611d60565b9350611dcc818560208601611d70565b611dd581611d98565b840191505092915050565b5f6020820190508181035f830152611df88184611da8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e2d82611e04565b9050919050565b611e3d81611e23565b8114611e47575f80fd5b50565b5f81359050611e5881611e34565b92915050565b5f819050919050565b611e7081611e5e565b8114611e7a575f80fd5b50565b5f81359050611e8b81611e67565b92915050565b5f8060408385031215611ea757611ea6611e00565b5b5f611eb485828601611e4a565b9250506020611ec585828601611e7d565b9150509250929050565b5f8115159050919050565b611ee381611ecf565b82525050565b5f602082019050611efc5f830184611eda565b92915050565b5f60208284031215611f1757611f16611e00565b5b5f611f2484828501611e4a565b91505092915050565b611f3681611e5e565b82525050565b5f602082019050611f4f5f830184611f2d565b92915050565b5f805f60608486031215611f6c57611f6b611e00565b5b5f611f7986828701611e4a565b9350506020611f8a86828701611e4a565b9250506040611f9b86828701611e7d565b9150509250925092565b5f60208284031215611fba57611fb9611e00565b5b5f611fc784828501611e7d565b91505092915050565b5f60ff82169050919050565b611fe581611fd0565b82525050565b5f602082019050611ffe5f830184611fdc565b92915050565b61200d81611e23565b82525050565b5f6020820190506120265f830184612004565b92915050565b5f819050919050565b5f61204f61204a61204584611e04565b61202c565b611e04565b9050919050565b5f61206082612035565b9050919050565b5f61207182612056565b9050919050565b61208181612067565b82525050565b5f60208201905061209a5f830184612078565b92915050565b5f610160820190506120b45f83018e611f2d565b6120c1602083018d611f2d565b6120ce604083018c612004565b6120db606083018b612004565b6120e8608083018a611f2d565b6120f560a0830189611f2d565b61210260c0830188611f2d565b61210f60e0830187611f2d565b61211d610100830186611f2d565b61212b610120830185611f2d565b612139610140830184611f2d565b9c9b505050505050505050505050565b5f806040838503121561215f5761215e611e00565b5b5f61216c85828601611e4a565b925050602061217d85828601611e4a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121cb57607f821691505b6020821081036121de576121dd612187565b5b50919050565b5f6040820190506121f75f830185612004565b6122046020830184611f2d565b9392505050565b61221481611ecf565b811461221e575f80fd5b50565b5f8151905061222f8161220b565b92915050565b5f6020828403121561224a57612249611e00565b5b5f61225784828501612221565b91505092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f612294600f83611d60565b915061229f82612260565b602082019050919050565b5f6020820190508181035f8301526122c181612288565b9050919050565b7f5468726573686f6c64206d757374206265203e203000000000000000000000005f82015250565b5f6122fc601583611d60565b9150612307826122c8565b602082019050919050565b5f6020820190508181035f830152612329816122f0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61236782611e5e565b915061237283611e5e565b925082820261238081611e5e565b9150828204841483151761239757612396612330565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6123d2601d83611d60565b91506123dd8261239e565b602082019050919050565b5f6020820190508181035f8301526123ff816123c6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61243d82611e5e565b915061244883611e5e565b92508261245857612457612406565b5b828204905092915050565b5f61246d82611e5e565b915061247883611e5e565b92508282039050818111156124905761248f612330565b5b92915050565b5f6124a082611e5e565b91506124ab83611e5e565b92508282019050808211156124c3576124c2612330565b5b92915050565b7f55534454207061796f7574206661696c656400000000000000000000000000005f82015250565b5f6124fd601283611d60565b9150612508826124c9565b602082019050919050565b5f6020820190508181035f83015261252a816124f1565b9050919050565b5f6060820190506125445f830186611f2d565b6125516020830185611f2d565b61255e6040830184611f2d565b949350505050565b7f4275792072617465206d757374206265203e3d2031205354454d0000000000005f82015250565b5f61259a601a83611d60565b91506125a582612566565b602082019050919050565b5f6020820190508181035f8301526125c78161258e565b9050919050565b7f4275792072617465206d757374206265203c3d2053656c6c20726174650000005f82015250565b5f612602601d83611d60565b915061260d826125ce565b602082019050919050565b5f6020820190508181035f83015261262f816125f6565b9050919050565b7f53656c6c2072617465206d75737420626520e289a52031205354454d207065725f8201527f2055534454000000000000000000000000000000000000000000000000000000602082015250565b5f612690602583611d60565b915061269b82612636565b604082019050919050565b5f6020820190508181035f8301526126bd81612684565b9050919050565b5f6060820190506126d75f830186612004565b6126e46020830185612004565b6126f16040830184611f2d565b949350505050565b7f55534454207472616e73666572206661696c65640000000000000000000000005f82015250565b5f61272d601483611d60565b9150612738826126f9565b602082019050919050565b5f6020820190508181035f83015261275a81612721565b9050919050565b5f6040820190506127745f830185611f2d565b6127816020830184611f2d565b9392505050565b5f8151905061279681611e67565b92915050565b5f602082840312156127b1576127b0611e00565b5b5f6127be84828501612788565b91505092915050565b7f4e6f2070726f66697420746f20776974686472617700000000000000000000005f82015250565b5f6127fb601583611d60565b9150612806826127c7565b602082019050919050565b5f6020820190508181035f830152612828816127ef565b9050919050565b5f6060820190506128425f830186612004565b61284f6020830185611f2d565b61285c6040830184611f2d565b94935050505056fea2646970667358221220886ee18cf1ea5854bc80f668e9b743d806b4e1b1faf0ca924008ac3fc4ad251464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x343D CODESIZE SUB DUP1 PUSH3 0x343D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x4E SWAP2 SWAP1 PUSH3 0x68E JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354454D4D455200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354454D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCC SWAP2 SWAP1 PUSH3 0x96D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x96D JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14B SWAP2 SWAP1 PUSH3 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x165 DUP2 PUSH3 0x280 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH3 0x275 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xAAA JUMP JUMPDEST PUSH3 0x343 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH3 0xB95 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3AD SWAP2 SWAP1 PUSH3 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3C9 PUSH0 DUP4 DUP4 PUSH3 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x421 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x414 SWAP2 SWAP1 PUSH3 0xAF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4F2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4AD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x53B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x585 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5E4 SWAP2 SWAP1 PUSH3 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x620 DUP3 PUSH3 0x5F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x632 DUP2 PUSH3 0x614 JUMP JUMPDEST DUP2 EQ PUSH3 0x63D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x650 DUP2 PUSH3 0x627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x66A DUP2 PUSH3 0x656 JUMP JUMPDEST DUP2 EQ PUSH3 0x675 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x688 DUP2 PUSH3 0x65F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x6AA JUMPI PUSH3 0x6A9 PUSH3 0x5F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x6B9 DUP9 DUP3 DUP10 ADD PUSH3 0x640 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x6CC DUP9 DUP3 DUP10 ADD PUSH3 0x640 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x6DF DUP9 DUP3 DUP10 ADD PUSH3 0x640 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x6F2 DUP9 DUP3 DUP10 ADD PUSH3 0x678 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x705 DUP9 DUP3 DUP10 ADD PUSH3 0x678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x78E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x7A4 JUMPI PUSH3 0x7A3 PUSH3 0x749 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x808 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x7CB JUMP JUMPDEST PUSH3 0x814 DUP7 DUP4 PUSH3 0x7CB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x855 PUSH3 0x84F PUSH3 0x849 DUP5 PUSH3 0x656 JUMP JUMPDEST PUSH3 0x82C JUMP JUMPDEST PUSH3 0x656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x870 DUP4 PUSH3 0x835 JUMP JUMPDEST PUSH3 0x888 PUSH3 0x87F DUP3 PUSH3 0x85C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x7D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x89E PUSH3 0x890 JUMP JUMPDEST PUSH3 0x8AB DUP2 DUP5 DUP5 PUSH3 0x865 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8D2 JUMPI PUSH3 0x8C6 PUSH0 DUP3 PUSH3 0x894 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x8B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x921 JUMPI PUSH3 0x8EB DUP2 PUSH3 0x7AA JUMP JUMPDEST PUSH3 0x8F6 DUP5 PUSH3 0x7BC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x906 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x91E PUSH3 0x915 DUP6 PUSH3 0x7BC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x8B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x943 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x926 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x95D DUP4 DUP4 PUSH3 0x932 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x978 DUP3 PUSH3 0x712 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x994 JUMPI PUSH3 0x993 PUSH3 0x71C JUMP JUMPDEST JUMPDEST PUSH3 0x9A0 DUP3 SLOAD PUSH3 0x776 JUMP JUMPDEST PUSH3 0x9AD DUP3 DUP3 DUP6 PUSH3 0x8D6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9E3 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x9CE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x9DA DUP6 DUP3 PUSH3 0x950 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA49 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9F3 DUP7 PUSH3 0x7AA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xA1C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9F5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA3C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA38 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x932 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xA5C DUP2 PUSH3 0x614 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA77 PUSH0 DUP4 ADD DUP5 PUSH3 0xA51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xAB6 DUP3 PUSH3 0x656 JUMP JUMPDEST SWAP2 POP PUSH3 0xAC3 DUP4 PUSH3 0x656 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xAD3 DUP2 PUSH3 0x656 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xAED JUMPI PUSH3 0xAEC PUSH3 0xA7D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB00 DUP3 PUSH3 0x656 JUMP JUMPDEST SWAP2 POP PUSH3 0xB0D DUP4 PUSH3 0x656 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB28 JUMPI PUSH3 0xB27 PUSH3 0xA7D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB39 DUP2 PUSH3 0x656 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB54 PUSH0 DUP4 ADD DUP7 PUSH3 0xA51 JUMP JUMPDEST PUSH3 0xB63 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB2E JUMP JUMPDEST PUSH3 0xB72 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB2E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB8F PUSH0 DUP4 ADD DUP5 PUSH3 0xB2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x289A DUP1 PUSH3 0xBA3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E436BF GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC3F909D4 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0xFF90B54D EQ PUSH2 0x5A5 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xF203787C EQ PUSH2 0x52F JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x9DC29FAC GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xBB285554 EQ PUSH2 0x49F JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x85E436BF EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x8E0B017D EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x417 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6217229B GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x748E37F4 EQ PUSH2 0x3A3 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x5D91E3F8 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x32D JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x1481794E GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x1481794E EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x28821182 EQ PUSH2 0x2BB JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF7E730B EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EF PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xCBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E5 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C3 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x537 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x141D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x571 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH2 0x14AD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5BE SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5EA SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x635 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x635 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x618 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x649 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP PUSH2 0x656 DUP2 DUP6 DUP6 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x669 PUSH2 0x15A3 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP3 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP1 PUSH2 0x22AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B DUP3 PUSH1 0x40 MLOAD PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x836 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP PUSH2 0x843 DUP6 DUP3 DUP6 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x84E DUP6 DUP6 DUP6 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x862 PUSH2 0x15A3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89B SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0xC5023CC86199E71CA52157B0B124DDBDA596C9FB8BAB5BB7028D162FA3ED5545 DUP2 PUSH1 0x40 MLOAD PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8F5 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x912 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x17AD JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x9DF SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP3 GT PUSH2 0xA00 JUMPI PUSH0 PUSH2 0xA0D JUMP JUMPDEST DUP5 DUP3 PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0xA3B CALLER PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH2 0x16BD JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xA97 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB17 JUMPI DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD LT PUSH2 0xB16 JUMPI PUSH2 0xB0E PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC SLOAD PUSH2 0x16BD JUMP JUMPDEST PUSH0 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP3 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE9 SWAP1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC3 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0xCCC PUSH0 PUSH2 0x182C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCDC PUSH2 0x15A3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1E SWAP1 PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD63 SWAP1 PUSH2 0x2618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH31 0xEDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xDA1 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDDC PUSH2 0x15A3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB DUP2 PUSH1 0x40 MLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE77 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEA3 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xED1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF00 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0xF1D DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x18EF JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF79 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP PUSH2 0xF86 DUP2 DUP6 DUP6 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1089 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x10EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E3 SWAP1 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1118 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x16BD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1160 SWAP3 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x1215 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x121E ADDRESS PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1278 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x279C JUMP JUMPDEST PUSH2 0x12BF PUSH2 0x823 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1372 PUSH2 0x15A3 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1425 PUSH2 0x15A3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1495 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149E DUP2 PUSH2 0x182C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14B5 PUSH2 0x15A3 JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD GT PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F0 SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1548 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC SLOAD PUSH2 0x16BD JUMP JUMPDEST PUSH32 0x35279BB4D182B0C31A3C5ACF2EA52F703EC240E2C8CDAEE25E353623DB06418 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x159E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x196E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x158A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C9 PUSH2 0xDAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1628 JUMPI PUSH2 0x15EC PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161F SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1635 DUP5 DUP5 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x16B7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x16A8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x196E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x172D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1724 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x179D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A8 DUP4 DUP4 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1828 PUSH0 DUP4 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1956 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x196A DUP3 PUSH0 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D5 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A45 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B37 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B2E SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C5B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C16 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CA2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CEC JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D49 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D72 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB2 DUP3 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x1DBC DUP2 DUP6 PUSH2 0x1D60 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DCC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DD5 DUP2 PUSH2 0x1D98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF8 DUP2 DUP5 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2D DUP3 PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3D DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E58 DUP2 PUSH2 0x1E34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E70 DUP2 PUSH2 0x1E5E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E8B DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE3 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EFC PUSH0 DUP4 ADD DUP5 PUSH2 0x1EDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F24 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F36 DUP2 PUSH2 0x1E5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4F PUSH0 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F79 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F8A DUP7 DUP3 DUP8 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F9B DUP7 DUP3 DUP8 ADD PUSH2 0x1E7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FB9 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE5 DUP2 PUSH2 0x1FD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FFE PUSH0 DUP4 ADD DUP5 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200D DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2026 PUSH0 DUP4 ADD DUP5 PUSH2 0x2004 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x204F PUSH2 0x204A PUSH2 0x2045 DUP5 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x202C JUMP JUMPDEST PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2060 DUP3 PUSH2 0x2035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2071 DUP3 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2081 DUP2 PUSH2 0x2067 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH0 DUP4 ADD DUP5 PUSH2 0x2078 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x20B4 PUSH0 DUP4 ADD DUP15 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x20C1 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x20CE PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x20DB PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x20E8 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x20F5 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2102 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x210F PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x211D PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x212B PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2139 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215F JUMPI PUSH2 0x215E PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x216C DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217D DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x2187 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F7 PUSH0 DUP4 ADD DUP6 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x2204 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP2 EQ PUSH2 0x221E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x222F DUP2 PUSH2 0x220B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224A JUMPI PUSH2 0x2249 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2257 DUP5 DUP3 DUP6 ADD PUSH2 0x2221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2294 PUSH1 0xF DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x229F DUP3 PUSH2 0x2260 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C1 DUP2 PUSH2 0x2288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726573686F6C64206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22FC PUSH1 0x15 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2307 DUP3 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2329 DUP2 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2367 DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2372 DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2380 DUP2 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2397 JUMPI PUSH2 0x2396 PUSH2 0x2330 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D2 PUSH1 0x1D DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DD DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FF DUP2 PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x243D DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2448 DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2458 JUMPI PUSH2 0x2457 PUSH2 0x2406 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246D DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2478 DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x2330 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24A0 DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x24AB DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x24C3 JUMPI PUSH2 0x24C2 PUSH2 0x2330 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534454207061796F7574206661696C65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24FD PUSH1 0x12 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2508 DUP3 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x252A DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2544 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2551 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x255E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203E3D2031205354454D000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x259A PUSH1 0x1A DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A5 DUP3 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25C7 DUP2 PUSH2 0x258E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203C3D2053656C6C2072617465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2602 PUSH1 0x1D DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x260D DUP3 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x262F DUP2 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C2072617465206D75737420626520E289A52031205354454D20706572 PUSH0 DUP3 ADD MSTORE PUSH32 0x2055534454000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2690 PUSH1 0x25 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x269B DUP3 PUSH2 0x2636 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26BD DUP2 PUSH2 0x2684 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26D7 PUSH0 DUP4 ADD DUP7 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x26E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x26F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x272D PUSH1 0x14 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2738 DUP3 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x275A DUP2 PUSH2 0x2721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2774 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2781 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2796 DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B1 JUMPI PUSH2 0x27B0 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27BE DUP5 DUP3 DUP6 ADD PUSH2 0x2788 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2070726F66697420746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27FB PUSH1 0x15 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2806 DUP3 PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2828 DUP2 PUSH2 0x27EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2842 PUSH0 DUP4 ADD DUP7 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x284F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x285C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH15 0xE18CF1EA5854BC80F668E9B743D806 0xB4 0xE1 0xB1 STATICCALL CREATE 0xCA SWAP3 BLOCKHASH ADDMOD 0xAC EXTCODEHASH 0xC4 0xAD 0x25 EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "237:6056:6:-:0;;;334:4;309:29;;401:4;375:30;;1326:440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1537:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1578:17:6::2;1559:9;;:37;;;;;;;;;;;;;;;;;;1617:9;1606:8;;:20;;;;;;;;;;;;;;;;;;1653:15;1636:14;;:32;;;;;;;;;;;;;;;;;;1696:16;1678:15;:34;;;;1722:37;1728:8;;;;;;;;;;;1754:4;1738:13;:20;;;;:::i;:::-;1722:5;;;:37;;:::i;:::-;1326:440:::0;;;;;237:6056;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:99::-;2240:6;2274:5;2268:12;2258:22;;2188:99;;;:::o;2293:180::-;2341:77;2338:1;2331:88;2438:4;2435:1;2428:15;2462:4;2459:1;2452:15;2479:180;2527:77;2524:1;2517:88;2624:4;2621:1;2614:15;2648:4;2645:1;2638:15;2665:320;2709:6;2746:1;2740:4;2736:12;2726:22;;2793:1;2787:4;2783:12;2814:18;2804:81;;2870:4;2862:6;2858:17;2848:27;;2804:81;2932:2;2924:6;2921:14;2901:18;2898:38;2895:84;;2951:18;;:::i;:::-;2895:84;2716:269;2665:320;;;:::o;2991:141::-;3040:4;3063:3;3055:11;;3086:3;3083:1;3076:14;3120:4;3117:1;3107:18;3099:26;;2991:141;;;:::o;3138:93::-;3175:6;3222:2;3217;3210:5;3206:14;3202:23;3192:33;;3138:93;;;:::o;3237:107::-;3281:8;3331:5;3325:4;3321:16;3300:37;;3237:107;;;;:::o;3350:393::-;3419:6;3469:1;3457:10;3453:18;3492:97;3522:66;3511:9;3492:97;:::i;:::-;3610:39;3640:8;3629:9;3610:39;:::i;:::-;3598:51;;3682:4;3678:9;3671:5;3667:21;3658:30;;3731:4;3721:8;3717:19;3710:5;3707:30;3697:40;;3426:317;;3350:393;;;;;:::o;3749:60::-;3777:3;3798:5;3791:12;;3749:60;;;:::o;3815:142::-;3865:9;3898:53;3916:34;3925:24;3943:5;3925:24;:::i;:::-;3916:34;:::i;:::-;3898:53;:::i;:::-;3885:66;;3815:142;;;:::o;3963:75::-;4006:3;4027:5;4020:12;;3963:75;;;:::o;4044:269::-;4154:39;4185:7;4154:39;:::i;:::-;4215:91;4264:41;4288:16;4264:41;:::i;:::-;4256:6;4249:4;4243:11;4215:91;:::i;:::-;4209:4;4202:105;4120:193;4044:269;;;:::o;4319:73::-;4364:3;4319:73;:::o;4398:189::-;4475:32;;:::i;:::-;4516:65;4574:6;4566;4560:4;4516:65;:::i;:::-;4451:136;4398:189;;:::o;4593:186::-;4653:120;4670:3;4663:5;4660:14;4653:120;;;4724:39;4761:1;4754:5;4724:39;:::i;:::-;4697:1;4690:5;4686:13;4677:22;;4653:120;;;4593:186;;:::o;4785:543::-;4886:2;4881:3;4878:11;4875:446;;;4920:38;4952:5;4920:38;:::i;:::-;5004:29;5022:10;5004:29;:::i;:::-;4994:8;4990:44;5187:2;5175:10;5172:18;5169:49;;;5208:8;5193:23;;5169:49;5231:80;5287:22;5305:3;5287:22;:::i;:::-;5277:8;5273:37;5260:11;5231:80;:::i;:::-;4890:431;;4875:446;4785:543;;;:::o;5334:117::-;5388:8;5438:5;5432:4;5428:16;5407:37;;5334:117;;;;:::o;5457:169::-;5501:6;5534:51;5582:1;5578:6;5570:5;5567:1;5563:13;5534:51;:::i;:::-;5530:56;5615:4;5609;5605:15;5595:25;;5508:118;5457:169;;;;:::o;5631:295::-;5707:4;5853:29;5878:3;5872:4;5853:29;:::i;:::-;5845:37;;5915:3;5912:1;5908:11;5902:4;5899:21;5891:29;;5631:295;;;;:::o;5931:1395::-;6048:37;6081:3;6048:37;:::i;:::-;6150:18;6142:6;6139:30;6136:56;;;6172:18;;:::i;:::-;6136:56;6216:38;6248:4;6242:11;6216:38;:::i;:::-;6301:67;6361:6;6353;6347:4;6301:67;:::i;:::-;6395:1;6419:4;6406:17;;6451:2;6443:6;6440:14;6468:1;6463:618;;;;7125:1;7142:6;7139:77;;;7191:9;7186:3;7182:19;7176:26;7167:35;;7139:77;7242:67;7302:6;7295:5;7242:67;:::i;:::-;7236:4;7229:81;7098:222;6433:887;;6463:618;6515:4;6511:9;6503:6;6499:22;6549:37;6581:4;6549:37;:::i;:::-;6608:1;6622:208;6636:7;6633:1;6630:14;6622:208;;;6715:9;6710:3;6706:19;6700:26;6692:6;6685:42;6766:1;6758:6;6754:14;6744:24;;6813:2;6802:9;6798:18;6785:31;;6659:4;6656:1;6652:12;6647:17;;6622:208;;;6858:6;6849:7;6846:19;6843:179;;;6916:9;6911:3;6907:19;6901:26;6959:48;7001:4;6993:6;6989:17;6978:9;6959:48;:::i;:::-;6951:6;6944:64;6866:156;6843:179;7068:1;7064;7056:6;7052:14;7048:22;7042:4;7035:36;6470:611;;;6433:887;;6023:1303;;;5931:1395;;:::o;7332:118::-;7419:24;7437:5;7419:24;:::i;:::-;7414:3;7407:37;7332:118;;:::o;7456:222::-;7549:4;7587:2;7576:9;7572:18;7564:26;;7600:71;7668:1;7657:9;7653:17;7644:6;7600:71;:::i;:::-;7456:222;;;;:::o;7684:180::-;7732:77;7729:1;7722:88;7829:4;7826:1;7819:15;7853:4;7850:1;7843:15;7870:410;7910:7;7933:20;7951:1;7933:20;:::i;:::-;7928:25;;7967:20;7985:1;7967:20;:::i;:::-;7962:25;;8022:1;8019;8015:9;8044:30;8062:11;8044:30;:::i;:::-;8033:41;;8223:1;8214:7;8210:15;8207:1;8204:22;8184:1;8177:9;8157:83;8134:139;;8253:18;;:::i;:::-;8134:139;7918:362;7870:410;;;;:::o;8286:191::-;8326:3;8345:20;8363:1;8345:20;:::i;:::-;8340:25;;8379:20;8397:1;8379:20;:::i;:::-;8374:25;;8422:1;8419;8415:9;8408:16;;8443:3;8440:1;8437:10;8434:36;;;8450:18;;:::i;:::-;8434:36;8286:191;;;;:::o;8483:118::-;8570:24;8588:5;8570:24;:::i;:::-;8565:3;8558:37;8483:118;;:::o;8607:442::-;8756:4;8794:2;8783:9;8779:18;8771:26;;8807:71;8875:1;8864:9;8860:17;8851:6;8807:71;:::i;:::-;8888:72;8956:2;8945:9;8941:18;8932:6;8888:72;:::i;:::-;8970;9038:2;9027:9;9023:18;9014:6;8970:72;:::i;:::-;8607:442;;;;;;:::o;9055:222::-;9148:4;9186:2;9175:9;9171:18;9163:26;;9199:71;9267:1;9256:9;9252:17;9243:6;9199:71;:::i;:::-;9055:222;;;;:::o;237:6056:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 5521,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 6510,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 6383,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5539,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 6061,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 5514,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5674,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6188,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 5821,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6973,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@accumulatedProfit_959": {
									"entryPoint": 3278,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 4840,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1599,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 3190,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1258": {
									"entryPoint": 3832,
									"id": 1258,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyRate_948": {
									"entryPoint": 5287,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyStem_1113": {
									"entryPoint": 4022,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 2277,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getConfig_1472": {
									"entryPoint": 4460,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 11
								},
								"@mint_1236": {
									"entryPoint": 2285,
									"id": 1236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1455,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3500,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@profitThreshold_957": {
									"entryPoint": 5281,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@profitTreasury_955": {
									"entryPoint": 5112,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3259,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellRate_951": {
									"entryPoint": 3184,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellStem_1214": {
									"entryPoint": 2404,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBuyRate_1288": {
									"entryPoint": 3284,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProfitThreshold_1390": {
									"entryPoint": 2138,
									"id": 1390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProfitTreasury_1367": {
									"entryPoint": 1633,
									"id": 1367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellRate_1311": {
									"entryPoint": 3540,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_1351": {
									"entryPoint": 4970,
									"id": 1351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 3688,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 2083,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2092,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5149,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3951,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_953": {
									"entryPoint": 3147,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtToken_945": {
									"entryPoint": 3985,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAccumulatedProfit_1417": {
									"entryPoint": 5293,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUSDT_1335": {
									"entryPoint": 1774,
									"id": 1335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9924,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10287,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 12,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 8295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b": {
									"entryPoint": 9574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4": {
									"entryPoint": 9977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1": {
									"entryPoint": 8904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4": {
									"entryPoint": 9417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd": {
									"entryPoint": 10183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22495:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3560:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3533:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:32:7"
															},
															"nodeType": "YulIf",
															"src": "3522:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3651:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3666:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3670:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3695:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3730:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3741:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3726:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3750:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3705:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3695:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:7",
														"type": ""
													}
												],
												"src": "3446:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3863:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3886:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3868:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:7",
														"type": ""
													}
												],
												"src": "3781:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4013:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4049:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3975:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3987:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3998:4:7",
														"type": ""
													}
												],
												"src": "3905:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4233:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4279:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:32:7"
															},
															"nodeType": "YulIf",
															"src": "4243:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4372:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4416:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4451:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4462:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4447:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4447:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4426:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4499:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4514:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4518:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4544:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4554:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4554:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4544:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4627:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4656:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4672:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4187:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4198:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4210:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4218:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4226:6:7",
														"type": ""
													}
												],
												"src": "4133:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4824:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4870:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4872:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4872:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4872:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4845:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4854:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4841:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:32:7"
															},
															"nodeType": "YulIf",
															"src": "4834:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4963:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4978:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4982:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5007:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5042:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5053:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5038:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5038:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5062:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5017:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5007:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4794:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4805:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4817:6:7",
														"type": ""
													}
												],
												"src": "4758:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5136:43:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5146:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5161:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5168:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5157:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5146:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5118:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5128:7:7",
														"type": ""
													}
												],
												"src": "5093:86:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5246:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5263:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5284:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5268:15:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5256:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5256:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5234:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5241:3:7",
														"type": ""
													}
												],
												"src": "5185:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5397:120:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5407:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5419:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5430:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5407:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5483:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5443:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5443:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5369:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5381:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5392:4:7",
														"type": ""
													}
												],
												"src": "5303:214:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:7",
														"type": ""
													}
												],
												"src": "5523:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:7",
														"type": ""
													}
												],
												"src": "5647:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5907:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5917:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5924:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5917:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5893:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5903:3:7",
														"type": ""
													}
												],
												"src": "5875:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6001:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6011:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6069:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6051:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6051:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6042:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6042:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6024:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6011:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5981:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5991:9:7",
														"type": ""
													}
												],
												"src": "5941:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6149:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6159:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6203:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6172:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6159:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6129:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6139:9:7",
														"type": ""
													}
												],
												"src": "6089:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6295:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6305:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6349:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6318:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6305:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6275:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6285:9:7",
														"type": ""
													}
												],
												"src": "6221:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6446:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6463:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6513:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6468:44:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6468:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:64:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6434:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6441:3:7",
														"type": ""
													}
												],
												"src": "6367:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6644:138:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6654:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6666:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6677:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6662:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6662:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6654:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6748:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6772:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6757:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6690:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6690:85:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6690:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6616:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6628:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6639:4:7",
														"type": ""
													}
												],
												"src": "6532:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7167:953:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7177:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7200:3:7",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7185:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7177:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7258:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7282:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7267:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7214:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7339:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7295:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7295:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7421:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7434:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7445:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7430:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7377:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7377:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7503:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7527:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7459:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7459:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7459:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7585:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7598:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7609:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7594:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7594:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7541:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:73:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7541:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7668:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7677:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7624:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7624:73:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7624:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "7751:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7764:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7775:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7760:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7760:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7707:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:73:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "7834:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7790:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:73:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7790:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7941:3:7",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7873:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7873:73:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7873:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "8000:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8013:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8024:3:7",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8009:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8009:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7956:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:73:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7956:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "8083:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8097:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8108:3:7",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8093:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8093:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8039:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:74:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8039:74:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7058:9:7",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "7070:7:7",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "7079:6:7",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "7087:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "7095:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7103:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7111:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7119:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7127:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7135:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7143:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7151:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7162:4:7",
														"type": ""
													}
												],
												"src": "6788:1332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8209:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8255:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8257:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8257:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8257:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8230:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8239:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8226:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8226:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8251:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:32:7"
															},
															"nodeType": "YulIf",
															"src": "8219:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8348:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8363:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8377:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8367:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8392:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8427:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8438:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8423:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8423:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8447:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8402:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8402:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8392:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8475:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8490:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8504:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8494:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8520:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8555:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8566:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8551:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8551:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8575:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8530:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8530:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8520:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8171:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8182:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8194:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8202:6:7",
														"type": ""
													}
												],
												"src": "8126:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8634:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8651:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8654:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8644:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8644:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8748:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8751:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8741:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8772:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8775:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8765:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8765:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8765:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8606:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8843:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8853:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8867:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8873:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8863:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8853:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8884:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8914:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8920:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8910:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8888:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8961:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8975:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8989:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8997:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8985:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8985:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8975:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8941:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8934:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8934:26:7"
															},
															"nodeType": "YulIf",
															"src": "8931:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9064:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9078:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9078:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9078:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9028:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9051:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9059:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9048:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9048:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9025:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9025:38:7"
															},
															"nodeType": "YulIf",
															"src": "9022:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8827:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8836:6:7",
														"type": ""
													}
												],
												"src": "8792:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9244:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9254:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9266:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9277:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9262:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9262:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9254:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9334:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9347:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9358:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9343:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9343:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9290:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9290:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9290:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9415:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9428:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9439:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9424:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9371:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9371:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9371:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9208:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9220:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9228:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9239:4:7",
														"type": ""
													}
												],
												"src": "9118:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9496:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9550:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9559:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9562:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9552:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9552:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9552:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9519:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9541:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9526:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9526:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9516:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9516:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9509:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:40:7"
															},
															"nodeType": "YulIf",
															"src": "9506:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9489:5:7",
														"type": ""
													}
												],
												"src": "9456:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9638:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9648:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9663:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9657:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9657:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9648:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9703:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9679:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9679:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9679:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9616:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9624:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9632:5:7",
														"type": ""
													}
												],
												"src": "9578:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9795:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9841:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9843:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9843:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9843:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9816:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9825:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9812:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9837:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9808:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9808:32:7"
															},
															"nodeType": "YulIf",
															"src": "9805:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "9934:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9949:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9953:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9978:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10021:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10032:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10017:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10017:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10041:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9988:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9988:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9978:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9765:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9776:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9788:6:7",
														"type": ""
													}
												],
												"src": "9721:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10178:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10200:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10208:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10196:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10196:14:7"
																	},
																	{
																		"hexValue": "5769746864726177206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10212:17:7",
																		"type": "",
																		"value": "Withdraw failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10189:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10189:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10170:6:7",
														"type": ""
													}
												],
												"src": "10072:165:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10389:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10399:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10465:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10470:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10406:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10399:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10571:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																	"nodeType": "YulIdentifier",
																	"src": "10482:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10482:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10482:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10584:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10595:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10591:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10591:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10584:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10377:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10385:3:7",
														"type": ""
													}
												],
												"src": "10243:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10786:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10796:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10808:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10819:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10796:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10843:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10854:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10839:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10862:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10868:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10858:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10858:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10888:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11022:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10896:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10896:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10888:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10766:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10781:4:7",
														"type": ""
													}
												],
												"src": "10615:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11146:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11168:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11176:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11164:14:7"
																	},
																	{
																		"hexValue": "5468726573686f6c64206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11180:23:7",
																		"type": "",
																		"value": "Threshold must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11157:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11138:6:7",
														"type": ""
													}
												],
												"src": "11040:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11363:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11373:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11439:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11444:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11380:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11380:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11373:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11545:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1",
																	"nodeType": "YulIdentifier",
																	"src": "11456:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11456:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11558:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11569:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11574:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11565:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11565:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11558:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11351:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11359:3:7",
														"type": ""
													}
												],
												"src": "11217:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11760:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11770:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11782:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11793:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11770:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11828:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11813:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11836:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11832:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11832:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11806:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11806:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11862:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11996:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11870:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11862:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11740:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11755:4:7",
														"type": ""
													}
												],
												"src": "11589:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12042:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12059:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12062:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12052:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12052:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12052:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12156:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12159:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12149:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12149:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12149:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12180:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12183:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12173:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12173:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12014:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12248:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12258:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12281:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12263:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12263:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12258:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12292:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12315:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12297:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12297:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12292:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12326:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12349:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12352:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12345:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12345:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12330:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12363:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12392:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12374:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12374:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12363:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12581:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12583:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12583:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12583:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12514:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12507:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12507:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12537:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12544:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12553:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12540:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12540:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12534:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12534:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12487:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12487:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12467:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12467:113:7"
															},
															"nodeType": "YulIf",
															"src": "12464:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12231:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12234:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12240:7:7",
														"type": ""
													}
												],
												"src": "12200:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12722:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12744:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12752:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12740:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12740:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12756:31:7",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12733:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12733:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12733:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12714:6:7",
														"type": ""
													}
												],
												"src": "12616:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12947:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12957:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13023:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13028:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12964:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12964:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12957:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13129:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "13040:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13040:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13142:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13153:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13158:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13149:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13149:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13142:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12935:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12943:3:7",
														"type": ""
													}
												],
												"src": "12801:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13344:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13354:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13366:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13377:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13362:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13362:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13354:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13401:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13412:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13397:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13397:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13420:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13426:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13416:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13416:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13390:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13390:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13390:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13446:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13580:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13454:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13454:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13446:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13324:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13339:4:7",
														"type": ""
													}
												],
												"src": "13173:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13626:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13636:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13636:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13740:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13743:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13733:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13733:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13733:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13764:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13767:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13757:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13757:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13598:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13826:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13836:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13859:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13841:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13841:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13836:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13870:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13893:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13875:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13875:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13870:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13917:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13919:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13919:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13919:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13914:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13907:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13907:9:7"
															},
															"nodeType": "YulIf",
															"src": "13904:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13949:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13958:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13961:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13954:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13954:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13949:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13815:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13818:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13824:1:7",
														"type": ""
													}
												],
												"src": "13784:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14020:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14030:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14053:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14035:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14030:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14064:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14087:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14069:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14069:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14064:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14098:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14110:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14113:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14098:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14140:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14142:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14142:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14142:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14131:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14137:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14128:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14128:11:7"
															},
															"nodeType": "YulIf",
															"src": "14125:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14006:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14009:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14015:4:7",
														"type": ""
													}
												],
												"src": "13975:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14219:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14229:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14252:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14234:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14234:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14229:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14263:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14286:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14268:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14268:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14263:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14297:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14308:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14311:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14304:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14304:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14297:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14337:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14339:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14339:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14339:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14329:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14332:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14326:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14326:10:7"
															},
															"nodeType": "YulIf",
															"src": "14323:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14206:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14209:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14215:3:7",
														"type": ""
													}
												],
												"src": "14175:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14478:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14500:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14508:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14496:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14496:14:7"
																	},
																	{
																		"hexValue": "55534454207061796f7574206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14512:20:7",
																		"type": "",
																		"value": "USDT payout failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14489:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14489:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14489:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14470:6:7",
														"type": ""
													}
												],
												"src": "14372:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14692:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14702:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14768:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14773:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14709:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14709:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14702:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14874:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																	"nodeType": "YulIdentifier",
																	"src": "14785:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14785:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14785:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14887:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14898:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14903:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14894:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14894:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14887:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14680:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14688:3:7",
														"type": ""
													}
												],
												"src": "14546:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15089:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15099:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15111:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15122:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15107:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15107:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15099:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15146:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15157:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15142:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15142:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15165:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15171:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15161:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15161:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15135:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15135:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15135:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15191:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15325:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15199:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15191:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15069:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15084:4:7",
														"type": ""
													}
												],
												"src": "14918:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15497:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15507:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15519:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15515:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15515:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15507:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15587:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15600:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15611:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15596:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15596:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15543:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15543:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15543:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15668:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15681:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15692:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15677:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15677:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15624:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15624:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15750:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15763:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15774:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15759:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15759:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15706:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15706:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15706:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15453:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15465:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15473:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15481:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15492:4:7",
														"type": ""
													}
												],
												"src": "15343:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15897:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15919:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15927:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15915:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15915:14:7"
																	},
																	{
																		"hexValue": "4275792072617465206d757374206265203e3d2031205354454d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15931:28:7",
																		"type": "",
																		"value": "Buy rate must be >= 1 STEM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15908:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15908:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15908:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15889:6:7",
														"type": ""
													}
												],
												"src": "15791:176:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16119:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16129:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16195:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16200:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16136:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16136:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16129:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16301:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																	"nodeType": "YulIdentifier",
																	"src": "16212:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16212:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16212:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16314:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16325:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16321:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16321:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16314:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16107:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16115:3:7",
														"type": ""
													}
												],
												"src": "15973:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16516:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16526:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16538:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16549:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16534:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16534:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16526:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16573:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16584:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16569:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16569:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16592:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16598:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16588:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16588:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16562:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16562:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16562:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16618:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16752:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16626:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16626:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16618:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16496:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16511:4:7",
														"type": ""
													}
												],
												"src": "16345:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16876:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16898:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16906:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16894:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16894:14:7"
																	},
																	{
																		"hexValue": "4275792072617465206d757374206265203c3d2053656c6c2072617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16910:31:7",
																		"type": "",
																		"value": "Buy rate must be <= Sell rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16887:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16887:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16887:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16868:6:7",
														"type": ""
													}
												],
												"src": "16770:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17101:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17111:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17177:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17182:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17118:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17118:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17111:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17283:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																	"nodeType": "YulIdentifier",
																	"src": "17194:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17194:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17194:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17296:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17307:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17303:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17303:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17296:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17089:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17097:3:7",
														"type": ""
													}
												],
												"src": "16955:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17498:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17508:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17520:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17531:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17516:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17516:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17508:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17555:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17566:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17551:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17551:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17574:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17580:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17570:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17570:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17544:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17544:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17544:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17600:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17734:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17608:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17608:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17600:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17493:4:7",
														"type": ""
													}
												],
												"src": "17327:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17858:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17880:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17888:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17876:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17876:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17892:66:7",
																		"type": "",
																		"value": "0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17869:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17869:90:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17869:90:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17980:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17988:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17976:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17976:15:7"
																	},
																	{
																		"hexValue": "2055534454",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17993:7:7",
																		"type": "",
																		"value": " USDT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17969:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17969:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17969:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17850:6:7",
														"type": ""
													}
												],
												"src": "17752:256:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18160:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18170:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18236:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18241:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18177:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18177:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18170:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18342:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																	"nodeType": "YulIdentifier",
																	"src": "18253:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18253:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18253:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18355:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18366:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18371:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18362:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18362:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18355:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18148:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18156:3:7",
														"type": ""
													}
												],
												"src": "18014:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18557:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18567:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18579:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18590:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18575:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18575:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18567:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18625:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18610:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18633:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18639:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18629:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18603:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18603:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18659:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18793:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18667:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18667:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18659:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18537:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18552:4:7",
														"type": ""
													}
												],
												"src": "18386:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18965:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18975:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18987:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18998:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18983:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18975:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19055:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19068:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19079:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19064:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19064:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19011:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19011:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19011:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19136:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19149:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19160:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19145:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19145:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19092:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19092:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19092:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19218:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19231:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19242:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19227:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19174:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19174:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19174:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18921:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18941:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18949:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18960:4:7",
														"type": ""
													}
												],
												"src": "18811:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19365:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19387:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19395:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19383:14:7"
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19399:22:7",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19376:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19376:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19376:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19357:6:7",
														"type": ""
													}
												],
												"src": "19259:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19581:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19591:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19657:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19662:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19598:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19598:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19591:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19763:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																	"nodeType": "YulIdentifier",
																	"src": "19674:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19674:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19674:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19776:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19787:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19792:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19783:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19783:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19776:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19569:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19577:3:7",
														"type": ""
													}
												],
												"src": "19435:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19978:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20000:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19996:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19988:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20035:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20046:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20031:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20031:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20054:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20060:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20050:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20050:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20024:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20024:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20024:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20080:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20214:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20088:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20088:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20080:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19958:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19973:4:7",
														"type": ""
													}
												],
												"src": "19807:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20358:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20368:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20380:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20391:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20376:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20376:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20368:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20448:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20461:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20472:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20457:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20457:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20404:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20404:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20404:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20529:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20542:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20553:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20538:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20485:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20485:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20485:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20322:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20334:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20342:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20353:4:7",
														"type": ""
													}
												],
												"src": "20232:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20633:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20643:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20658:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20652:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20652:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20643:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20701:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20674:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20674:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20674:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20611:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20619:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20627:5:7",
														"type": ""
													}
												],
												"src": "20570:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20796:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20842:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20844:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20844:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20844:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20817:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20826:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20813:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20838:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20809:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20809:32:7"
															},
															"nodeType": "YulIf",
															"src": "20806:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "20935:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20950:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20964:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20954:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20979:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21025:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21036:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21021:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21021:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21045:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20989:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20989:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20979:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20766:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20777:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20789:6:7",
														"type": ""
													}
												],
												"src": "20719:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21182:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21204:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21212:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21200:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21200:14:7"
																	},
																	{
																		"hexValue": "4e6f2070726f66697420746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21216:23:7",
																		"type": "",
																		"value": "No profit to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21193:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21193:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21174:6:7",
														"type": ""
													}
												],
												"src": "21076:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21399:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21409:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21475:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21480:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21416:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21416:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21409:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21581:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd",
																	"nodeType": "YulIdentifier",
																	"src": "21492:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21492:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21492:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21594:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21605:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21610:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21601:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21601:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21594:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21387:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21395:3:7",
														"type": ""
													}
												],
												"src": "21253:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21796:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21806:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21818:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21829:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21814:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21814:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21806:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21853:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21864:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21849:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21872:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21878:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21868:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21868:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21842:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21842:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21842:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21898:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22032:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21906:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21906:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21898:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21776:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21791:4:7",
														"type": ""
													}
												],
												"src": "21625:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22204:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22214:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22226:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22237:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22222:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22214:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22294:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22307:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22318:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22303:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22303:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22250:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22250:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22250:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22375:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22388:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22399:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22384:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22331:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22331:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22331:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22457:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22470:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22481:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22466:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22466:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22413:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22413:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22413:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22160:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22172:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22180:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22188:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22199:4:7",
														"type": ""
													}
												],
												"src": "22050:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Threshold must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT payout failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy rate must be >= 1 STEM\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy rate must be <= Sell rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28(memPtr) {\n\n        mstore(add(memPtr, 0), 0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572)\n\n        mstore(add(memPtr, 32), \" USDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"No profit to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101e3575f3560e01c806385e436bf1161010d578063c3f909d4116100a0578063f2fde38b1161006f578063f2fde38b1461054d578063f974821a14610569578063fc37987b14610587578063ff90b54d146105a5576101e3565b8063c3f909d4146104bb578063dd62ed3e146104e3578063f0f4426014610513578063f203787c1461052f576101e3565b80639dc29fac116100dc5780639dc29fac14610435578063a9059cbb14610451578063a98ad46c14610481578063bb2855541461049f576101e3565b806385e436bf146103c15780638da5cb5b146103dd5780638e0b017d146103fb57806395d89b4114610417576101e3565b8063313ce567116101855780636217229b116101545780636217229b1461034b57806370a0823114610369578063715018a614610399578063748e37f4146103a3576101e3565b8063313ce567146102d757806340c10f19146102f55780635d91e3f81461031157806361d027b31461032d576101e3565b80631481794e116101c15780631481794e1461025157806318160ddd1461026d57806323b872dd1461028b57806328821182146102bb576101e3565b806306fdde03146101e7578063095ea7b3146102055780630f7e730b14610235575b5f80fd5b6101ef6105af565b6040516101fc9190611de0565b60405180910390f35b61021f600480360381019061021a9190611e91565b61063f565b60405161022c9190611ee9565b60405180910390f35b61024f600480360381019061024a9190611f02565b610661565b005b61026b60048036038101906102669190611e91565b6106ee565b005b610275610823565b6040516102829190611f3c565b60405180910390f35b6102a560048036038101906102a09190611f55565b61082c565b6040516102b29190611ee9565b60405180910390f35b6102d560048036038101906102d09190611fa5565b61085a565b005b6102df6108e5565b6040516102ec9190611feb565b60405180910390f35b61030f600480360381019061030a9190611e91565b6108ed565b005b61032b60048036038101906103269190611fa5565b610964565b005b610335610c4b565b6040516103429190612013565b60405180910390f35b610353610c70565b6040516103609190611f3c565b60405180910390f35b610383600480360381019061037e9190611f02565b610c76565b6040516103909190611f3c565b60405180910390f35b6103a1610cbb565b005b6103ab610cce565b6040516103b89190611f3c565b60405180910390f35b6103db60048036038101906103d69190611fa5565b610cd4565b005b6103e5610dac565b6040516103f29190612013565b60405180910390f35b61041560048036038101906104109190611fa5565b610dd4565b005b61041f610e68565b60405161042c9190611de0565b60405180910390f35b61044f600480360381019061044a9190611e91565b610ef8565b005b61046b60048036038101906104669190611e91565b610f6f565b6040516104789190611ee9565b60405180910390f35b610489610f91565b6040516104969190612087565b60405180910390f35b6104b960048036038101906104b49190611fa5565b610fb6565b005b6104c361116c565b6040516104da9b9a999897969594939291906120a0565b60405180910390f35b6104fd60048036038101906104f89190612149565b6112e8565b60405161050a9190611f3c565b60405180910390f35b61052d60048036038101906105289190611f02565b61136a565b005b6105376113f8565b6040516105449190612013565b60405180910390f35b61056760048036038101906105629190611f02565b61141d565b005b6105716114a1565b60405161057e9190611f3c565b60405180910390f35b61058f6114a7565b60405161059c9190611f3c565b60405180910390f35b6105ad6114ad565b005b6060600380546105be906121b4565b80601f01602080910402602001604051908101604052809291908181526020018280546105ea906121b4565b80156106355780601f1061060c57610100808354040283529160200191610635565b820191905f5260205f20905b81548152906001019060200180831161061857829003601f168201915b5050505050905090565b5f8061064961158a565b9050610656818585611591565b600191505092915050565b6106696115a3565b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167e56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b60405160405180910390a250565b6106f66115a3565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016107529291906121e4565b6020604051808303815f875af115801561076e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107929190612235565b6107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c8906122aa565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b826040516108179190611f3c565b60405180910390a25050565b5f600254905090565b5f8061083661158a565b905061084385828561162a565b61084e8585856116bd565b60019150509392505050565b6108626115a3565b5f81116108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90612312565b60405180910390fd5b80600b819055507fc5023cc86199e71ca52157b0b124ddbda596c9fb8bab5bb7028d162fa3ed5545816040516108da9190611f3c565b60405180910390a150565b5f6012905090565b6108f56115a3565b61091282670de0b6b3a76400008361090d919061235d565b6117ad565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe826040516109589190611f3c565b60405180910390a25050565b5f81116109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d906123e8565b60405180910390fd5b5f600854670de0b6b3a7640000836109be919061235d565b6109c89190612433565b90505f670de0b6b3a7640000836109df9190612433565b90505f600854826109f0919061235d565b90505f848211610a00575f610a0d565b8482610a0c9190612463565b5b9050610a3b3360095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876116bd565b5f81118015610a9757505f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610b175780600c5f828254610aad9190612496565b92505081905550600b54600c5410610b1657610b0e60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c546116bd565b5f600c819055505b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610b739291906121e4565b6020604051808303815f875af1158015610b8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb39190612235565b610bf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990612513565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420868684604051610c3c93929190612531565b60405180910390a25050505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610cc36115a3565b610ccc5f61182c565b565b600c5481565b610cdc6115a3565b670de0b6b3a7640000811015610d27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1e906125b0565b60405180910390fd5b600854811115610d6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6390612618565b60405180910390fd5b806007819055507eedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb181604051610da19190611f3c565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ddc6115a3565b670de0b6b3a7640000811015610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e906126a6565b60405180910390fd5b806008819055507fbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab81604051610e5d9190611f3c565b60405180910390a150565b606060048054610e77906121b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea3906121b4565b8015610eee5780601f10610ec557610100808354040283529160200191610eee565b820191905f5260205f20905b815481529060010190602001808311610ed157829003601f168201915b5050505050905090565b610f006115a3565b610f1d82670de0b6b3a764000083610f18919061235d565b6118ef565b8173ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df782604051610f639190611f3c565b60405180910390a25050565b5f80610f7961158a565b9050610f868185856116bd565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef906123e8565b60405180910390fd5b5f670de0b6b3a76400008261100d919061235d565b905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161106d939291906126c4565b6020604051808303815f875af1158015611089573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ad9190612235565b6110ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e390612743565b60405180910390fd5b61111860095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836116bd565b3373ffffffffffffffffffffffffffffffffffffffff167f59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb8383604051611160929190612761565b60405180910390a25050565b5f805f805f805f805f805f60075460085460095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111eb60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c76565b611215600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c76565b61121e30610c76565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112789190612013565b602060405180830381865afa158015611293573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b7919061279c565b6112bf610823565b600c54600b549a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6113726115a3565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f60860405160405180910390a250565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114256115a3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611495575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161148c9190612013565b60405180910390fd5b61149e8161182c565b50565b600b5481565b60075481565b6114b56115a3565b5f600c54116114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f090612811565b60405180910390fd5b61154860095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c546116bd565b7f035279bb4d182b0c31a3c5acf2ea52f703ec240e2c8cdaee25e353623db06418600c546040516115799190611f3c565b60405180910390a15f600c81905550565b5f33905090565b61159e838383600161196e565b505050565b6115ab61158a565b73ffffffffffffffffffffffffffffffffffffffff166115c9610dac565b73ffffffffffffffffffffffffffffffffffffffff1614611628576115ec61158a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161161f9190612013565b60405180910390fd5b565b5f61163584846112e8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156116b757818110156116a8578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161169f9392919061282f565b60405180910390fd5b6116b684848484035f61196e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361172d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117249190612013565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361179d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117949190612013565b60405180910390fd5b6117a8838383611b3d565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361181d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118149190612013565b60405180910390fd5b6118285f8383611b3d565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361195f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119569190612013565b60405180910390fd5b61196a825f83611b3d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119de575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119d59190612013565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a4e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a459190612013565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b37578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b2e9190611f3c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b8d578060025f828254611b819190612496565b92505081905550611c5b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c16578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c0d9392919061282f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ca2578060025f8282540392505081905550611cec565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d499190611f3c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d8d578082015181840152602081019050611d72565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611db282611d56565b611dbc8185611d60565b9350611dcc818560208601611d70565b611dd581611d98565b840191505092915050565b5f6020820190508181035f830152611df88184611da8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e2d82611e04565b9050919050565b611e3d81611e23565b8114611e47575f80fd5b50565b5f81359050611e5881611e34565b92915050565b5f819050919050565b611e7081611e5e565b8114611e7a575f80fd5b50565b5f81359050611e8b81611e67565b92915050565b5f8060408385031215611ea757611ea6611e00565b5b5f611eb485828601611e4a565b9250506020611ec585828601611e7d565b9150509250929050565b5f8115159050919050565b611ee381611ecf565b82525050565b5f602082019050611efc5f830184611eda565b92915050565b5f60208284031215611f1757611f16611e00565b5b5f611f2484828501611e4a565b91505092915050565b611f3681611e5e565b82525050565b5f602082019050611f4f5f830184611f2d565b92915050565b5f805f60608486031215611f6c57611f6b611e00565b5b5f611f7986828701611e4a565b9350506020611f8a86828701611e4a565b9250506040611f9b86828701611e7d565b9150509250925092565b5f60208284031215611fba57611fb9611e00565b5b5f611fc784828501611e7d565b91505092915050565b5f60ff82169050919050565b611fe581611fd0565b82525050565b5f602082019050611ffe5f830184611fdc565b92915050565b61200d81611e23565b82525050565b5f6020820190506120265f830184612004565b92915050565b5f819050919050565b5f61204f61204a61204584611e04565b61202c565b611e04565b9050919050565b5f61206082612035565b9050919050565b5f61207182612056565b9050919050565b61208181612067565b82525050565b5f60208201905061209a5f830184612078565b92915050565b5f610160820190506120b45f83018e611f2d565b6120c1602083018d611f2d565b6120ce604083018c612004565b6120db606083018b612004565b6120e8608083018a611f2d565b6120f560a0830189611f2d565b61210260c0830188611f2d565b61210f60e0830187611f2d565b61211d610100830186611f2d565b61212b610120830185611f2d565b612139610140830184611f2d565b9c9b505050505050505050505050565b5f806040838503121561215f5761215e611e00565b5b5f61216c85828601611e4a565b925050602061217d85828601611e4a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121cb57607f821691505b6020821081036121de576121dd612187565b5b50919050565b5f6040820190506121f75f830185612004565b6122046020830184611f2d565b9392505050565b61221481611ecf565b811461221e575f80fd5b50565b5f8151905061222f8161220b565b92915050565b5f6020828403121561224a57612249611e00565b5b5f61225784828501612221565b91505092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f612294600f83611d60565b915061229f82612260565b602082019050919050565b5f6020820190508181035f8301526122c181612288565b9050919050565b7f5468726573686f6c64206d757374206265203e203000000000000000000000005f82015250565b5f6122fc601583611d60565b9150612307826122c8565b602082019050919050565b5f6020820190508181035f830152612329816122f0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61236782611e5e565b915061237283611e5e565b925082820261238081611e5e565b9150828204841483151761239757612396612330565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6123d2601d83611d60565b91506123dd8261239e565b602082019050919050565b5f6020820190508181035f8301526123ff816123c6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61243d82611e5e565b915061244883611e5e565b92508261245857612457612406565b5b828204905092915050565b5f61246d82611e5e565b915061247883611e5e565b92508282039050818111156124905761248f612330565b5b92915050565b5f6124a082611e5e565b91506124ab83611e5e565b92508282019050808211156124c3576124c2612330565b5b92915050565b7f55534454207061796f7574206661696c656400000000000000000000000000005f82015250565b5f6124fd601283611d60565b9150612508826124c9565b602082019050919050565b5f6020820190508181035f83015261252a816124f1565b9050919050565b5f6060820190506125445f830186611f2d565b6125516020830185611f2d565b61255e6040830184611f2d565b949350505050565b7f4275792072617465206d757374206265203e3d2031205354454d0000000000005f82015250565b5f61259a601a83611d60565b91506125a582612566565b602082019050919050565b5f6020820190508181035f8301526125c78161258e565b9050919050565b7f4275792072617465206d757374206265203c3d2053656c6c20726174650000005f82015250565b5f612602601d83611d60565b915061260d826125ce565b602082019050919050565b5f6020820190508181035f83015261262f816125f6565b9050919050565b7f53656c6c2072617465206d75737420626520e289a52031205354454d207065725f8201527f2055534454000000000000000000000000000000000000000000000000000000602082015250565b5f612690602583611d60565b915061269b82612636565b604082019050919050565b5f6020820190508181035f8301526126bd81612684565b9050919050565b5f6060820190506126d75f830186612004565b6126e46020830185612004565b6126f16040830184611f2d565b949350505050565b7f55534454207472616e73666572206661696c65640000000000000000000000005f82015250565b5f61272d601483611d60565b9150612738826126f9565b602082019050919050565b5f6020820190508181035f83015261275a81612721565b9050919050565b5f6040820190506127745f830185611f2d565b6127816020830184611f2d565b9392505050565b5f8151905061279681611e67565b92915050565b5f602082840312156127b1576127b0611e00565b5b5f6127be84828501612788565b91505092915050565b7f4e6f2070726f66697420746f20776974686472617700000000000000000000005f82015250565b5f6127fb601583611d60565b9150612806826127c7565b602082019050919050565b5f6020820190508181035f830152612828816127ef565b9050919050565b5f6060820190506128425f830186612004565b61284f6020830185611f2d565b61285c6040830184611f2d565b94935050505056fea2646970667358221220886ee18cf1ea5854bc80f668e9b743d806b4e1b1faf0ca924008ac3fc4ad251464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E436BF GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC3F909D4 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0xFF90B54D EQ PUSH2 0x5A5 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xF203787C EQ PUSH2 0x52F JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x9DC29FAC GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xBB285554 EQ PUSH2 0x49F JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x85E436BF EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x8E0B017D EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x417 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6217229B GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x748E37F4 EQ PUSH2 0x3A3 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x5D91E3F8 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x32D JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x1481794E GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x1481794E EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x28821182 EQ PUSH2 0x2BB JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF7E730B EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EF PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xCBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E5 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C3 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x537 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x141D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x571 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH2 0x14AD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5BE SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5EA SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x635 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x635 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x618 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x649 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP PUSH2 0x656 DUP2 DUP6 DUP6 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x669 PUSH2 0x15A3 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP3 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP1 PUSH2 0x22AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B DUP3 PUSH1 0x40 MLOAD PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x836 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP PUSH2 0x843 DUP6 DUP3 DUP6 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x84E DUP6 DUP6 DUP6 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x862 PUSH2 0x15A3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89B SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0xC5023CC86199E71CA52157B0B124DDBDA596C9FB8BAB5BB7028D162FA3ED5545 DUP2 PUSH1 0x40 MLOAD PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8F5 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x912 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x17AD JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x9DF SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP3 GT PUSH2 0xA00 JUMPI PUSH0 PUSH2 0xA0D JUMP JUMPDEST DUP5 DUP3 PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0xA3B CALLER PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH2 0x16BD JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xA97 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB17 JUMPI DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD LT PUSH2 0xB16 JUMPI PUSH2 0xB0E PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC SLOAD PUSH2 0x16BD JUMP JUMPDEST PUSH0 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP3 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE9 SWAP1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC3 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0xCCC PUSH0 PUSH2 0x182C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCDC PUSH2 0x15A3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1E SWAP1 PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD63 SWAP1 PUSH2 0x2618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH31 0xEDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xDA1 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDDC PUSH2 0x15A3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB DUP2 PUSH1 0x40 MLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE77 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEA3 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xED1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF00 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0xF1D DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x18EF JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF79 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP PUSH2 0xF86 DUP2 DUP6 DUP6 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1089 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x10EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E3 SWAP1 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1118 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x16BD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1160 SWAP3 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x1215 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x121E ADDRESS PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1278 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x279C JUMP JUMPDEST PUSH2 0x12BF PUSH2 0x823 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1372 PUSH2 0x15A3 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1425 PUSH2 0x15A3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1495 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149E DUP2 PUSH2 0x182C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14B5 PUSH2 0x15A3 JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD GT PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F0 SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1548 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC SLOAD PUSH2 0x16BD JUMP JUMPDEST PUSH32 0x35279BB4D182B0C31A3C5ACF2EA52F703EC240E2C8CDAEE25E353623DB06418 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x159E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x196E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x158A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C9 PUSH2 0xDAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1628 JUMPI PUSH2 0x15EC PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161F SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1635 DUP5 DUP5 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x16B7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x16A8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x196E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x172D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1724 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x179D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A8 DUP4 DUP4 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1828 PUSH0 DUP4 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1956 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x196A DUP3 PUSH0 DUP4 PUSH2 0x1B3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D5 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A45 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B37 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B2E SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C5B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C16 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CA2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CEC JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D49 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D72 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB2 DUP3 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x1DBC DUP2 DUP6 PUSH2 0x1D60 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DCC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DD5 DUP2 PUSH2 0x1D98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF8 DUP2 DUP5 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2D DUP3 PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3D DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E58 DUP2 PUSH2 0x1E34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E70 DUP2 PUSH2 0x1E5E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E8B DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE3 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EFC PUSH0 DUP4 ADD DUP5 PUSH2 0x1EDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F24 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F36 DUP2 PUSH2 0x1E5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4F PUSH0 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F79 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F8A DUP7 DUP3 DUP8 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F9B DUP7 DUP3 DUP8 ADD PUSH2 0x1E7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FB9 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE5 DUP2 PUSH2 0x1FD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FFE PUSH0 DUP4 ADD DUP5 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200D DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2026 PUSH0 DUP4 ADD DUP5 PUSH2 0x2004 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x204F PUSH2 0x204A PUSH2 0x2045 DUP5 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x202C JUMP JUMPDEST PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2060 DUP3 PUSH2 0x2035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2071 DUP3 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2081 DUP2 PUSH2 0x2067 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH0 DUP4 ADD DUP5 PUSH2 0x2078 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x20B4 PUSH0 DUP4 ADD DUP15 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x20C1 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x20CE PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x20DB PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x20E8 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x20F5 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2102 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x210F PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x211D PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x212B PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2139 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215F JUMPI PUSH2 0x215E PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x216C DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217D DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x2187 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F7 PUSH0 DUP4 ADD DUP6 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x2204 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP2 EQ PUSH2 0x221E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x222F DUP2 PUSH2 0x220B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224A JUMPI PUSH2 0x2249 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2257 DUP5 DUP3 DUP6 ADD PUSH2 0x2221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2294 PUSH1 0xF DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x229F DUP3 PUSH2 0x2260 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C1 DUP2 PUSH2 0x2288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726573686F6C64206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22FC PUSH1 0x15 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2307 DUP3 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2329 DUP2 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2367 DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2372 DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2380 DUP2 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2397 JUMPI PUSH2 0x2396 PUSH2 0x2330 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D2 PUSH1 0x1D DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DD DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FF DUP2 PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x243D DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2448 DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2458 JUMPI PUSH2 0x2457 PUSH2 0x2406 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246D DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x2478 DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x2330 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24A0 DUP3 PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP PUSH2 0x24AB DUP4 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x24C3 JUMPI PUSH2 0x24C2 PUSH2 0x2330 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534454207061796F7574206661696C65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24FD PUSH1 0x12 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2508 DUP3 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x252A DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2544 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2551 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x255E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203E3D2031205354454D000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x259A PUSH1 0x1A DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A5 DUP3 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25C7 DUP2 PUSH2 0x258E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203C3D2053656C6C2072617465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2602 PUSH1 0x1D DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x260D DUP3 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x262F DUP2 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C2072617465206D75737420626520E289A52031205354454D20706572 PUSH0 DUP3 ADD MSTORE PUSH32 0x2055534454000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2690 PUSH1 0x25 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x269B DUP3 PUSH2 0x2636 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26BD DUP2 PUSH2 0x2684 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26D7 PUSH0 DUP4 ADD DUP7 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x26E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x26F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x272D PUSH1 0x14 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2738 DUP3 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x275A DUP2 PUSH2 0x2721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2774 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2781 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2796 DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B1 JUMPI PUSH2 0x27B0 PUSH2 0x1E00 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27BE DUP5 DUP3 DUP6 ADD PUSH2 0x2788 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2070726F66697420746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27FB PUSH1 0x15 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x2806 DUP3 PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2828 DUP2 PUSH2 0x27EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2842 PUSH0 DUP4 ADD DUP7 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x284F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x285C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH15 0xE18CF1EA5854BC80F668E9B743D806 0xB4 0xE1 0xB1 STATICCALL CREATE 0xCA SWAP3 BLOCKHASH ADDMOD 0xAC EXTCODEHASH 0xC4 0xAD 0x25 EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "237:6056:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4696:155:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4289:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4895:227:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3374:135:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2249:1090;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;448:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;375:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;581:32:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3733:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4037:213:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3544:141:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;279:23:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1828:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5507:784;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4516:137:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;477:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;545:30:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;309:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5186:283;;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;4696:155:6:-;1531:13:0;:11;:13::i;:::-;4788:9:6::1;4771:14;;:26;;;;;;;;;;;;;;;;;;4834:9;4812:32;;;;;;;;;;;;4696:155:::0;:::o;4289:184::-;1531:13:0;:11;:13::i;:::-;4376:9:6::1;;;;;;;;;;;:18;;;4395:2;4399:6;4376:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4368:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4455:2;4441:25;;;4459:6;4441:25;;;;;;:::i;:::-;;;;;;;;4289:184:::0;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;4895:227:6:-;1531:13:0;:11;:13::i;:::-;4997:1:6::1;4982:12;:16;4974:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;5052:12;5034:15;:30;;;;5079:36;5102:12;5079:36;;;;;;:::i;:::-;;;;;;;;4895:227:::0;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;3374:135:6:-;1531:13:0;:11;:13::i;:::-;3445:24:6::1;3451:2;3464:4;3455:6;:13;;;;:::i;:::-;3445:5;:24::i;:::-;3491:2;3484:18;;;3495:6;3484:18;;;;;;:::i;:::-;;;;;;;;3374:135:::0;;:::o;2249:1090::-;2327:1;2314:10;:14;2306:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2424:18;2467:8;;2459:4;2446:10;:17;;;;:::i;:::-;2445:30;;;;:::i;:::-;2424:51;;2539:22;2577:4;2564:10;:17;;;;:::i;:::-;2539:42;;2591:21;2632:8;;2615:14;:25;;;;:::i;:::-;2591:49;;2650:19;2688:10;2672:13;:26;:59;;2730:1;2672:59;;;2717:10;2701:13;:26;;;;:::i;:::-;2672:59;2650:81;;2787:43;2797:10;2809:8;;;;;;;;;;;2819:10;2787:9;:43::i;:::-;2903:1;2889:11;:15;:47;;;;;2934:1;2908:28;;:14;;;;;;;;;;;:28;;;;2889:47;2885:292;;;2973:11;2952:17;;:32;;;;;;;:::i;:::-;;;;;;;;3024:15;;3003:17;;:36;2999:168;;3059:54;3069:8;;;;;;;;;;;3079:14;;;;;;;;;;;3095:17;;3059:9;:54::i;:::-;3151:1;3131:17;:21;;;;2999:168;2885:292;3195:9;;;;;;;;;;;:18;;;3214:10;3226;3195:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3187:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3284:10;3275:57;;;3296:10;3308;3320:11;3275:57;;;;;;;;:::i;:::-;;;;;;;;2296:1043;;;;2249:1090;:::o;448:23::-;;;;;;;;;;;;;:::o;375:30::-;;;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;581:32:6:-;;;;:::o;3733:263::-;1531:13:0;:11;:13::i;:::-;3818:4:6::1;3807:7;:15;;3799:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3882:8;;3871:7;:19;;3863:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3944:7;3934;:17;;;;3966:23;3981:7;3966:23;;;;;;:::i;:::-;;;;;;;;3733:263:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4037:213:6:-;1531:13:0;:11;:13::i;:::-;4123:4:6::1;4112:7;:15;;4104:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4197:7;4186:8;:18;;;;4219:24;4235:7;4219:24;;;;;;:::i;:::-;;;;;;;;4037:213:::0;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3544:141:6:-;1531:13:0;:11;:13::i;:::-;3617:26:6::1;3623:4;3638;3629:6;:13;;;;:::i;:::-;3617:5;:26::i;:::-;3665:4;3658:20;;;3671:6;3658:20;;;;;;:::i;:::-;;;;;;;;3544:141:::0;;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;279:23:6:-;;;;;;;;;;;;;:::o;1828:384::-;1905:1;1892:10;:14;1884:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1951:18;1985:4;1972:10;:17;;;;:::i;:::-;1951:38;;2007:9;;;;;;;;;;;:22;;;2030:10;2050:4;2057:10;2007:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1999:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2104:43;2114:8;;;;;;;;;;;2124:10;2136;2104:9;:43::i;:::-;2170:10;2162:43;;;2182:10;2194;2162:43;;;;;;;:::i;:::-;;;;;;;;1874:338;1828:384;:::o;5507:784::-;5560:16;5586:17;5613;5640:23;5673:27;5710:25;5745:27;5782;5819:23;5852:26;5888:24;5950:7;;5971:8;;5993;;;;;;;;;;;6015:14;;;;;;;;;;;6043:19;6053:8;;;;;;;;;;;6043:9;:19::i;:::-;6076:25;6086:14;;;;;;;;;;;6076:9;:25::i;:::-;6115:24;6133:4;6115:9;:24::i;:::-;6153:9;;;;;;;;;;;:19;;;6181:4;6153:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6201:13;:11;:13::i;:::-;6228:17;;6259:15;;5929:355;;;;;;;;;;;;;;;;;;;;;;5507:784;;;;;;;;;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;4516:137:6:-;1531:13:0;:11;:13::i;:::-;4596:9:6::1;4585:8;;:20;;;;;;;;;;;;;;;;;;4636:9;4620:26;;;;;;;;;;;;4516:137:::0;:::o;477:29::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;545:30:6:-;;;;:::o;309:29::-;;;;:::o;5186:283::-;1531:13:0;:11;:13::i;:::-;5280:1:6::1;5260:17;;:21;5252:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5317:54;5327:8;;;;;;;;;;;5337:14;;;;;;;;;;;5353:17;;5317:9;:54::i;:::-;5386:45;5413:17;;5386:45;;;;;;:::i;:::-;;;;;;;;5461:1;5441:17;:21;;;;5186:283::o:0;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10396:476:2:-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7965:206:2:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:329::-;3505:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:119;;;3560:79;;:::i;:::-;3522:119;3680:1;3705:53;3750:7;3741:6;3730:9;3726:22;3705:53;:::i;:::-;3695:63;;3651:117;3446:329;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:222::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;3905:222;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:329::-;4817:6;4866:2;4854:9;4845:7;4841:23;4837:32;4834:119;;;4872:79;;:::i;:::-;4834:119;4992:1;5017:53;5062:7;5053:6;5042:9;5038:22;5017:53;:::i;:::-;5007:63;;4963:117;4758:329;;;;:::o;5093:86::-;5128:7;5168:4;5161:5;5157:16;5146:27;;5093:86;;;:::o;5185:112::-;5268:22;5284:5;5268:22;:::i;:::-;5263:3;5256:35;5185:112;;:::o;5303:214::-;5392:4;5430:2;5419:9;5415:18;5407:26;;5443:67;5507:1;5496:9;5492:17;5483:6;5443:67;:::i;:::-;5303:214;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:60::-;5903:3;5924:5;5917:12;;5875:60;;;:::o;5941:142::-;5991:9;6024:53;6042:34;6051:24;6069:5;6051:24;:::i;:::-;6042:34;:::i;:::-;6024:53;:::i;:::-;6011:66;;5941:142;;;:::o;6089:126::-;6139:9;6172:37;6203:5;6172:37;:::i;:::-;6159:50;;6089:126;;;:::o;6221:140::-;6285:9;6318:37;6349:5;6318:37;:::i;:::-;6305:50;;6221:140;;;:::o;6367:159::-;6468:51;6513:5;6468:51;:::i;:::-;6463:3;6456:64;6367:159;;:::o;6532:250::-;6639:4;6677:2;6666:9;6662:18;6654:26;;6690:85;6772:1;6761:9;6757:17;6748:6;6690:85;:::i;:::-;6532:250;;;;:::o;6788:1332::-;7162:4;7200:3;7189:9;7185:19;7177:27;;7214:71;7282:1;7271:9;7267:17;7258:6;7214:71;:::i;:::-;7295:72;7363:2;7352:9;7348:18;7339:6;7295:72;:::i;:::-;7377;7445:2;7434:9;7430:18;7421:6;7377:72;:::i;:::-;7459;7527:2;7516:9;7512:18;7503:6;7459:72;:::i;:::-;7541:73;7609:3;7598:9;7594:19;7585:6;7541:73;:::i;:::-;7624;7692:3;7681:9;7677:19;7668:6;7624:73;:::i;:::-;7707;7775:3;7764:9;7760:19;7751:6;7707:73;:::i;:::-;7790;7858:3;7847:9;7843:19;7834:6;7790:73;:::i;:::-;7873;7941:3;7930:9;7926:19;7917:6;7873:73;:::i;:::-;7956;8024:3;8013:9;8009:19;8000:6;7956:73;:::i;:::-;8039:74;8108:3;8097:9;8093:19;8083:7;8039:74;:::i;:::-;6788:1332;;;;;;;;;;;;;;:::o;8126:474::-;8194:6;8202;8251:2;8239:9;8230:7;8226:23;8222:32;8219:119;;;8257:79;;:::i;:::-;8219:119;8377:1;8402:53;8447:7;8438:6;8427:9;8423:22;8402:53;:::i;:::-;8392:63;;8348:117;8504:2;8530:53;8575:7;8566:6;8555:9;8551:22;8530:53;:::i;:::-;8520:63;;8475:118;8126:474;;;;;:::o;8606:180::-;8654:77;8651:1;8644:88;8751:4;8748:1;8741:15;8775:4;8772:1;8765:15;8792:320;8836:6;8873:1;8867:4;8863:12;8853:22;;8920:1;8914:4;8910:12;8941:18;8931:81;;8997:4;8989:6;8985:17;8975:27;;8931:81;9059:2;9051:6;9048:14;9028:18;9025:38;9022:84;;9078:18;;:::i;:::-;9022:84;8843:269;8792:320;;;:::o;9118:332::-;9239:4;9277:2;9266:9;9262:18;9254:26;;9290:71;9358:1;9347:9;9343:17;9334:6;9290:71;:::i;:::-;9371:72;9439:2;9428:9;9424:18;9415:6;9371:72;:::i;:::-;9118:332;;;;;:::o;9456:116::-;9526:21;9541:5;9526:21;:::i;:::-;9519:5;9516:32;9506:60;;9562:1;9559;9552:12;9506:60;9456:116;:::o;9578:137::-;9632:5;9663:6;9657:13;9648:22;;9679:30;9703:5;9679:30;:::i;:::-;9578:137;;;;:::o;9721:345::-;9788:6;9837:2;9825:9;9816:7;9812:23;9808:32;9805:119;;;9843:79;;:::i;:::-;9805:119;9963:1;9988:61;10041:7;10032:6;10021:9;10017:22;9988:61;:::i;:::-;9978:71;;9934:125;9721:345;;;;:::o;10072:165::-;10212:17;10208:1;10200:6;10196:14;10189:41;10072:165;:::o;10243:366::-;10385:3;10406:67;10470:2;10465:3;10406:67;:::i;:::-;10399:74;;10482:93;10571:3;10482:93;:::i;:::-;10600:2;10595:3;10591:12;10584:19;;10243:366;;;:::o;10615:419::-;10781:4;10819:2;10808:9;10804:18;10796:26;;10868:9;10862:4;10858:20;10854:1;10843:9;10839:17;10832:47;10896:131;11022:4;10896:131;:::i;:::-;10888:139;;10615:419;;;:::o;11040:171::-;11180:23;11176:1;11168:6;11164:14;11157:47;11040:171;:::o;11217:366::-;11359:3;11380:67;11444:2;11439:3;11380:67;:::i;:::-;11373:74;;11456:93;11545:3;11456:93;:::i;:::-;11574:2;11569:3;11565:12;11558:19;;11217:366;;;:::o;11589:419::-;11755:4;11793:2;11782:9;11778:18;11770:26;;11842:9;11836:4;11832:20;11828:1;11817:9;11813:17;11806:47;11870:131;11996:4;11870:131;:::i;:::-;11862:139;;11589:419;;;:::o;12014:180::-;12062:77;12059:1;12052:88;12159:4;12156:1;12149:15;12183:4;12180:1;12173:15;12200:410;12240:7;12263:20;12281:1;12263:20;:::i;:::-;12258:25;;12297:20;12315:1;12297:20;:::i;:::-;12292:25;;12352:1;12349;12345:9;12374:30;12392:11;12374:30;:::i;:::-;12363:41;;12553:1;12544:7;12540:15;12537:1;12534:22;12514:1;12507:9;12487:83;12464:139;;12583:18;;:::i;:::-;12464:139;12248:362;12200:410;;;;:::o;12616:179::-;12756:31;12752:1;12744:6;12740:14;12733:55;12616:179;:::o;12801:366::-;12943:3;12964:67;13028:2;13023:3;12964:67;:::i;:::-;12957:74;;13040:93;13129:3;13040:93;:::i;:::-;13158:2;13153:3;13149:12;13142:19;;12801:366;;;:::o;13173:419::-;13339:4;13377:2;13366:9;13362:18;13354:26;;13426:9;13420:4;13416:20;13412:1;13401:9;13397:17;13390:47;13454:131;13580:4;13454:131;:::i;:::-;13446:139;;13173:419;;;:::o;13598:180::-;13646:77;13643:1;13636:88;13743:4;13740:1;13733:15;13767:4;13764:1;13757:15;13784:185;13824:1;13841:20;13859:1;13841:20;:::i;:::-;13836:25;;13875:20;13893:1;13875:20;:::i;:::-;13870:25;;13914:1;13904:35;;13919:18;;:::i;:::-;13904:35;13961:1;13958;13954:9;13949:14;;13784:185;;;;:::o;13975:194::-;14015:4;14035:20;14053:1;14035:20;:::i;:::-;14030:25;;14069:20;14087:1;14069:20;:::i;:::-;14064:25;;14113:1;14110;14106:9;14098:17;;14137:1;14131:4;14128:11;14125:37;;;14142:18;;:::i;:::-;14125:37;13975:194;;;;:::o;14175:191::-;14215:3;14234:20;14252:1;14234:20;:::i;:::-;14229:25;;14268:20;14286:1;14268:20;:::i;:::-;14263:25;;14311:1;14308;14304:9;14297:16;;14332:3;14329:1;14326:10;14323:36;;;14339:18;;:::i;:::-;14323:36;14175:191;;;;:::o;14372:168::-;14512:20;14508:1;14500:6;14496:14;14489:44;14372:168;:::o;14546:366::-;14688:3;14709:67;14773:2;14768:3;14709:67;:::i;:::-;14702:74;;14785:93;14874:3;14785:93;:::i;:::-;14903:2;14898:3;14894:12;14887:19;;14546:366;;;:::o;14918:419::-;15084:4;15122:2;15111:9;15107:18;15099:26;;15171:9;15165:4;15161:20;15157:1;15146:9;15142:17;15135:47;15199:131;15325:4;15199:131;:::i;:::-;15191:139;;14918:419;;;:::o;15343:442::-;15492:4;15530:2;15519:9;15515:18;15507:26;;15543:71;15611:1;15600:9;15596:17;15587:6;15543:71;:::i;:::-;15624:72;15692:2;15681:9;15677:18;15668:6;15624:72;:::i;:::-;15706;15774:2;15763:9;15759:18;15750:6;15706:72;:::i;:::-;15343:442;;;;;;:::o;15791:176::-;15931:28;15927:1;15919:6;15915:14;15908:52;15791:176;:::o;15973:366::-;16115:3;16136:67;16200:2;16195:3;16136:67;:::i;:::-;16129:74;;16212:93;16301:3;16212:93;:::i;:::-;16330:2;16325:3;16321:12;16314:19;;15973:366;;;:::o;16345:419::-;16511:4;16549:2;16538:9;16534:18;16526:26;;16598:9;16592:4;16588:20;16584:1;16573:9;16569:17;16562:47;16626:131;16752:4;16626:131;:::i;:::-;16618:139;;16345:419;;;:::o;16770:179::-;16910:31;16906:1;16898:6;16894:14;16887:55;16770:179;:::o;16955:366::-;17097:3;17118:67;17182:2;17177:3;17118:67;:::i;:::-;17111:74;;17194:93;17283:3;17194:93;:::i;:::-;17312:2;17307:3;17303:12;17296:19;;16955:366;;;:::o;17327:419::-;17493:4;17531:2;17520:9;17516:18;17508:26;;17580:9;17574:4;17570:20;17566:1;17555:9;17551:17;17544:47;17608:131;17734:4;17608:131;:::i;:::-;17600:139;;17327:419;;;:::o;17752:256::-;17892:66;17888:1;17880:6;17876:14;17869:90;17993:7;17988:2;17980:6;17976:15;17969:32;17752:256;:::o;18014:366::-;18156:3;18177:67;18241:2;18236:3;18177:67;:::i;:::-;18170:74;;18253:93;18342:3;18253:93;:::i;:::-;18371:2;18366:3;18362:12;18355:19;;18014:366;;;:::o;18386:419::-;18552:4;18590:2;18579:9;18575:18;18567:26;;18639:9;18633:4;18629:20;18625:1;18614:9;18610:17;18603:47;18667:131;18793:4;18667:131;:::i;:::-;18659:139;;18386:419;;;:::o;18811:442::-;18960:4;18998:2;18987:9;18983:18;18975:26;;19011:71;19079:1;19068:9;19064:17;19055:6;19011:71;:::i;:::-;19092:72;19160:2;19149:9;19145:18;19136:6;19092:72;:::i;:::-;19174;19242:2;19231:9;19227:18;19218:6;19174:72;:::i;:::-;18811:442;;;;;;:::o;19259:170::-;19399:22;19395:1;19387:6;19383:14;19376:46;19259:170;:::o;19435:366::-;19577:3;19598:67;19662:2;19657:3;19598:67;:::i;:::-;19591:74;;19674:93;19763:3;19674:93;:::i;:::-;19792:2;19787:3;19783:12;19776:19;;19435:366;;;:::o;19807:419::-;19973:4;20011:2;20000:9;19996:18;19988:26;;20060:9;20054:4;20050:20;20046:1;20035:9;20031:17;20024:47;20088:131;20214:4;20088:131;:::i;:::-;20080:139;;19807:419;;;:::o;20232:332::-;20353:4;20391:2;20380:9;20376:18;20368:26;;20404:71;20472:1;20461:9;20457:17;20448:6;20404:71;:::i;:::-;20485:72;20553:2;20542:9;20538:18;20529:6;20485:72;:::i;:::-;20232:332;;;;;:::o;20570:143::-;20627:5;20658:6;20652:13;20643:22;;20674:33;20701:5;20674:33;:::i;:::-;20570:143;;;;:::o;20719:351::-;20789:6;20838:2;20826:9;20817:7;20813:23;20809:32;20806:119;;;20844:79;;:::i;:::-;20806:119;20964:1;20989:64;21045:7;21036:6;21025:9;21021:22;20989:64;:::i;:::-;20979:74;;20935:128;20719:351;;;;:::o;21076:171::-;21216:23;21212:1;21204:6;21200:14;21193:47;21076:171;:::o;21253:366::-;21395:3;21416:67;21480:2;21475:3;21416:67;:::i;:::-;21409:74;;21492:93;21581:3;21492:93;:::i;:::-;21610:2;21605:3;21601:12;21594:19;;21253:366;;;:::o;21625:419::-;21791:4;21829:2;21818:9;21814:18;21806:26;;21878:9;21872:4;21868:20;21864:1;21853:9;21849:17;21842:47;21906:131;22032:4;21906:131;:::i;:::-;21898:139;;21625:419;;;:::o;22050:442::-;22199:4;22237:2;22226:9;22222:18;22214:26;;22250:71;22318:1;22307:9;22303:17;22294:6;22250:71;:::i;:::-;22331:72;22399:2;22388:9;22384:18;22375:6;22331:72;:::i;:::-;22413;22481:2;22470:9;22466:18;22457:6;22413:72;:::i;:::-;22050:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2078800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accumulatedProfit()": "2536",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burn(address,uint256)": "infinite",
								"buyRate()": "2513",
								"buyStem(uint256)": "infinite",
								"decimals()": "384",
								"getConfig()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2583",
								"profitThreshold()": "2491",
								"profitTreasury()": "2619",
								"renounceOwnership()": "infinite",
								"sellRate()": "2470",
								"sellStem(uint256)": "infinite",
								"setBuyRate(uint256)": "infinite",
								"setProfitThreshold(uint256)": "infinite",
								"setProfitTreasury(address)": "infinite",
								"setSellRate(uint256)": "infinite",
								"setTreasury(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2620",
								"usdtToken()": "infinite",
								"withdrawAccumulatedProfit()": "infinite",
								"withdrawUSDT(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 334,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 309,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 309,
									"end": 338,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 375,
									"end": 405,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 375,
									"end": 405,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1326,
									"end": 1766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1537,
									"end": 1547,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5354454D4D455200000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5354454D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1578,
									"end": 1595,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1559,
									"end": 1568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1596,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1614,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1606,
									"end": 1614,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1626,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1653,
									"end": 1668,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1636,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1668,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1712,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1693,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1759,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1728,
									"end": 1736,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1754,
									"end": 1758,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1738,
									"end": 1751,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1758,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1738,
									"end": 1758,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1758,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1758,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1738,
									"end": 1758,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1758,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1738,
									"end": 1758,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1727,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1722,
									"end": 1727,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1722,
									"end": 1727,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1759,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1722,
									"end": 1759,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1759,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1759,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1722,
									"end": 1759,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2240,
									"end": 2246,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2274,
									"end": 2279,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2280,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2280,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2287,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2293,
									"end": 2473,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2293,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2341,
									"end": 2418,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2331,
									"end": 2419,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2435,
									"end": 2436,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2428,
									"end": 2443,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2459,
									"end": 2460,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2452,
									"end": 2467,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2479,
									"end": 2659,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2479,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2604,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 2605,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2628,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2621,
									"end": 2622,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2614,
									"end": 2629,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2652,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2645,
									"end": 2646,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2638,
									"end": 2653,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2715,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2746,
									"end": 2747,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2740,
									"end": 2744,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2748,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2794,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2787,
									"end": 2791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2783,
									"end": 2795,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2874,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2862,
									"end": 2868,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2875,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2934,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2924,
									"end": 2930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2921,
									"end": 2935,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2901,
									"end": 2919,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 2936,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2951,
									"end": 2969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2985,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2985,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3040,
									"end": 3044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3063,
									"end": 3066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3055,
									"end": 3066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3055,
									"end": 3066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3086,
									"end": 3089,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3083,
									"end": 3084,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3076,
									"end": 3090,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3120,
									"end": 3124,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3107,
									"end": 3125,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3224,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3210,
									"end": 3215,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3206,
									"end": 3220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 3225,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 3225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3281,
									"end": 3289,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3331,
									"end": 3336,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3329,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3337,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3425,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3457,
									"end": 3467,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3471,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3522,
									"end": 3588,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3511,
									"end": 3520,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3492,
									"end": 3589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3640,
									"end": 3648,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3638,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3610,
									"end": 3649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3649,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3686,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3678,
									"end": 3687,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3671,
									"end": 3676,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3688,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3688,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3731,
									"end": 3735,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3721,
									"end": 3729,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3717,
									"end": 3736,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3710,
									"end": 3715,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3707,
									"end": 3737,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3737,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3777,
									"end": 3780,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3798,
									"end": 3803,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3874,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3925,
									"end": 3949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3916,
									"end": 3950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3898,
									"end": 3951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3885,
									"end": 3951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3885,
									"end": 3951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3957,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4006,
									"end": 4009,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4027,
									"end": 4032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4020,
									"end": 4032,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4020,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3963,
									"end": 4038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4185,
									"end": 4192,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4154,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4288,
									"end": 4304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4264,
									"end": 4305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 4262,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4243,
									"end": 4254,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4215,
									"end": 4306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4209,
									"end": 4213,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4202,
									"end": 4307,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4319,
									"end": 4392,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4319,
									"end": 4392,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4364,
									"end": 4367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4319,
									"end": 4392,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4319,
									"end": 4392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4475,
									"end": 4507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4574,
									"end": 4580,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4572,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4560,
									"end": 4564,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4516,
									"end": 4581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4398,
									"end": 4587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4663,
									"end": 4668,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4674,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4759,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4724,
									"end": 4763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4697,
									"end": 4698,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4690,
									"end": 4695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4686,
									"end": 4699,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4677,
									"end": 4699,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4677,
									"end": 4699,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 4888,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4881,
									"end": 4884,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4878,
									"end": 4889,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4952,
									"end": 4957,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4920,
									"end": 4958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5022,
									"end": 5032,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5004,
									"end": 5033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4994,
									"end": 5002,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4990,
									"end": 5034,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5187,
									"end": 5189,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5175,
									"end": 5185,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5172,
									"end": 5190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5208,
									"end": 5216,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5193,
									"end": 5216,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5193,
									"end": 5216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5305,
									"end": 5308,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5287,
									"end": 5309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5277,
									"end": 5285,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5273,
									"end": 5310,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5260,
									"end": 5271,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5231,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4890,
									"end": 5321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4890,
									"end": 5321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 5328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5438,
									"end": 5443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5428,
									"end": 5444,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5444,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5444,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5582,
									"end": 5583,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5578,
									"end": 5584,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 5568,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5563,
									"end": 5576,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5534,
									"end": 5585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 5586,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5619,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5609,
									"end": 5613,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5605,
									"end": 5620,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5508,
									"end": 5626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5707,
									"end": 5711,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5878,
									"end": 5881,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 5876,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5853,
									"end": 5882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5882,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 5913,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5908,
									"end": 5919,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5902,
									"end": 5906,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5899,
									"end": 5920,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5631,
									"end": 5926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6081,
									"end": 6084,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 6048,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6150,
									"end": 6168,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6142,
									"end": 6148,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6169,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 6172,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6253,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 6216,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6361,
									"end": 6367,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6353,
									"end": 6359,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6301,
									"end": 6368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6395,
									"end": 6396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6406,
									"end": 6423,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6406,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6451,
									"end": 6453,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6443,
									"end": 6449,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6440,
									"end": 6454,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6468,
									"end": 6469,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7125,
									"end": 7126,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7142,
									"end": 7148,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7191,
									"end": 7200,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7186,
									"end": 7189,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7182,
									"end": 7201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7176,
									"end": 7202,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7202,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7302,
									"end": 7308,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7295,
									"end": 7300,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 7242,
									"end": 7309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7236,
									"end": 7240,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7310,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7098,
									"end": 7320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6515,
									"end": 6519,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6511,
									"end": 6520,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6509,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6499,
									"end": 6521,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 6549,
									"end": 6586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6608,
									"end": 6609,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6636,
									"end": 6643,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6633,
									"end": 6634,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6630,
									"end": 6644,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6715,
									"end": 6724,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6710,
									"end": 6713,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6725,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6700,
									"end": 6726,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6692,
									"end": 6698,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6685,
									"end": 6727,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6766,
									"end": 6767,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6758,
									"end": 6764,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6754,
									"end": 6768,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6744,
									"end": 6768,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6744,
									"end": 6768,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6813,
									"end": 6815,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6802,
									"end": 6811,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6798,
									"end": 6816,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6785,
									"end": 6816,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6785,
									"end": 6816,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6659,
									"end": 6663,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6656,
									"end": 6657,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6652,
									"end": 6664,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6647,
									"end": 6664,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6647,
									"end": 6664,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6858,
									"end": 6864,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6849,
									"end": 6856,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6846,
									"end": 6865,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6916,
									"end": 6925,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6911,
									"end": 6914,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6907,
									"end": 6926,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6927,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7001,
									"end": 7005,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6993,
									"end": 6999,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6989,
									"end": 7006,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6978,
									"end": 6987,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6959,
									"end": 7007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6951,
									"end": 6957,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6944,
									"end": 7008,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6866,
									"end": 7022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7068,
									"end": 7069,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7064,
									"end": 7065,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7056,
									"end": 7062,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7052,
									"end": 7066,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7048,
									"end": 7070,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7042,
									"end": 7046,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7035,
									"end": 7071,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6470,
									"end": 7081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6470,
									"end": 7081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6470,
									"end": 7081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6023,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6023,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6023,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 7326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7450,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7332,
									"end": 7450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7419,
									"end": 7443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7419,
									"end": 7443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7419,
									"end": 7443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7419,
									"end": 7443,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7419,
									"end": 7443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7414,
									"end": 7417,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7407,
									"end": 7444,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7678,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 7456,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7549,
									"end": 7553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7587,
									"end": 7589,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7576,
									"end": 7585,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7572,
									"end": 7590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 7671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7668,
									"end": 7669,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7657,
									"end": 7666,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7653,
									"end": 7670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7644,
									"end": 7650,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 7671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7600,
									"end": 7671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 7671,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7600,
									"end": 7671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7678,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7684,
									"end": 7864,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7684,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7809,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7729,
									"end": 7730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7722,
									"end": 7810,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7826,
									"end": 7827,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7819,
									"end": 7834,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7853,
									"end": 7857,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7850,
									"end": 7851,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7843,
									"end": 7858,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8280,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7870,
									"end": 8280,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7910,
									"end": 7917,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7933,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7951,
									"end": 7952,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7933,
									"end": 7953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7953,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7933,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7928,
									"end": 7953,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7928,
									"end": 7953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7967,
									"end": 7987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7987,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7967,
									"end": 7987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 7987,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 7987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8022,
									"end": 8023,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8020,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8015,
									"end": 8024,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8044,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8062,
									"end": 8073,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8044,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8044,
									"end": 8074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8044,
									"end": 8074,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8044,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8033,
									"end": 8074,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8033,
									"end": 8074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8223,
									"end": 8224,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8221,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8225,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 8207,
									"end": 8208,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8204,
									"end": 8226,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8184,
									"end": 8185,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8177,
									"end": 8186,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8157,
									"end": 8240,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8134,
									"end": 8273,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8253,
									"end": 8271,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8253,
									"end": 8271,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 8253,
									"end": 8271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8253,
									"end": 8271,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8253,
									"end": 8271,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8273,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8134,
									"end": 8273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7918,
									"end": 8280,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8280,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8280,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8280,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8280,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8280,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8477,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 8286,
									"end": 8477,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8326,
									"end": 8329,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8345,
									"end": 8365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8363,
									"end": 8364,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8345,
									"end": 8365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8345,
									"end": 8365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8345,
									"end": 8365,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8345,
									"end": 8365,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8340,
									"end": 8365,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8340,
									"end": 8365,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8379,
									"end": 8399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8397,
									"end": 8398,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8379,
									"end": 8399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8379,
									"end": 8399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8379,
									"end": 8399,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8379,
									"end": 8399,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8374,
									"end": 8399,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8374,
									"end": 8399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8423,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8419,
									"end": 8420,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8415,
									"end": 8424,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8408,
									"end": 8424,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8408,
									"end": 8424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8443,
									"end": 8446,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8440,
									"end": 8441,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8437,
									"end": 8447,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8434,
									"end": 8470,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8434,
									"end": 8470,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8434,
									"end": 8470,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8450,
									"end": 8468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8450,
									"end": 8468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 8450,
									"end": 8468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8450,
									"end": 8468,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8450,
									"end": 8468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8434,
									"end": 8470,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8434,
									"end": 8470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8477,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8477,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8483,
									"end": 8601,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8483,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8570,
									"end": 8594,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8588,
									"end": 8593,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8570,
									"end": 8594,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8570,
									"end": 8594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8570,
									"end": 8594,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8570,
									"end": 8594,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8565,
									"end": 8568,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8558,
									"end": 8595,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8483,
									"end": 8601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8483,
									"end": 8601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8483,
									"end": 8601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8756,
									"end": 8760,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8794,
									"end": 8796,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8779,
									"end": 8797,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8771,
									"end": 8797,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8771,
									"end": 8797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8807,
									"end": 8878,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8875,
									"end": 8876,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 8873,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8860,
									"end": 8877,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8851,
									"end": 8857,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8807,
									"end": 8878,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 8807,
									"end": 8878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8807,
									"end": 8878,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8807,
									"end": 8878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8956,
									"end": 8958,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8945,
									"end": 8954,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8941,
									"end": 8959,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8932,
									"end": 8938,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8888,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 8960,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8888,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 9038,
									"end": 9040,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9027,
									"end": 9036,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9023,
									"end": 9041,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9014,
									"end": 9020,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8970,
									"end": 9042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9042,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8970,
									"end": 9042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 9049,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9277,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9055,
									"end": 9277,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9148,
									"end": 9152,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9186,
									"end": 9188,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9175,
									"end": 9184,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9171,
									"end": 9189,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9189,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9199,
									"end": 9270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9267,
									"end": 9268,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9256,
									"end": 9265,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9252,
									"end": 9269,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9243,
									"end": 9249,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9199,
									"end": 9270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 9199,
									"end": 9270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9199,
									"end": 9270,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9199,
									"end": 9270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9277,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9277,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 6293,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220886ee18cf1ea5854bc80f668e9b743d806b4e1b1faf0ca924008ac3fc4ad251464736f6c63430008140033",
									".code": [
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "85E436BF"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "C3F909D4"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "F974821A"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "FC37987B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "FF90B54D"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "C3F909D4"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "F0F44260"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "F203787C"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "A98AD46C"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "BB285554"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "85E436BF"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "8E0B017D"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "6217229B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "6217229B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "748E37F4"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "5D91E3F8"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "61D027B3"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "1481794E"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "1481794E"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "28821182"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "F7E730B"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 6293,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4696,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4696,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4289,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4289,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4895,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4895,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3374,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3374,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2249,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2249,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 448,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 448,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 375,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 375,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 581,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 581,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 581,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3733,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3733,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4037,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4037,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3544,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3544,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 279,
											"end": 302,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 279,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 279,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1828,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1828,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5507,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5507,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4516,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4516,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 477,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 477,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 545,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 545,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 309,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 309,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5186,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4771,
											"end": 4785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B"
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4376,
											"end": 4385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4376,
											"end": 4394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4395,
											"end": 4397,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4405,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4376,
											"end": 4406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4376,
											"end": 4406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4376,
											"end": 4406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4368,
											"end": 4426,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4368,
											"end": 4426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B"
										},
										{
											"begin": 4459,
											"end": 4465,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4441,
											"end": 4466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4466,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4997,
											"end": 4998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 4998,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4974,
											"end": 5024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4974,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5052,
											"end": 5064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5034,
											"end": 5064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C5023CC86199E71CA52157B0B124DDBDA596C9FB8BAB5BB7028D162FA3ED5545"
										},
										{
											"begin": 5102,
											"end": 5114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5079,
											"end": 5115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5115,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 5122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3451,
											"end": 3453,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3455,
											"end": 3461,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3455,
											"end": 3468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3455,
											"end": 3468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3455,
											"end": 3468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3445,
											"end": 3469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3445,
											"end": 3469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 3495,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3484,
											"end": 3502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2328,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2306,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2306,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2467,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2463,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2446,
											"end": 2456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2446,
											"end": 2463,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2446,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2463,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2446,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2445,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2564,
											"end": 2574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2564,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2632,
											"end": 2640,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2615,
											"end": 2640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2615,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2615,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2701,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2672,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2797,
											"end": 2807,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2809,
											"end": 2817,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2787,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2830,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2787,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2936,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2936,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2936,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2936,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2889,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 3177,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2885,
											"end": 3177,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 2984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2952,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2952,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3024,
											"end": 3039,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3020,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3003,
											"end": 3020,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3039,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2999,
											"end": 3167,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3069,
											"end": 3077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3059,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3113,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3059,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3131,
											"end": 3152,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3152,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3167,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2999,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 3177,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2885,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3214,
											"end": 3224,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3226,
											"end": 3236,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3195,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3195,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3187,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3187,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3294,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420"
										},
										{
											"begin": 3296,
											"end": 3306,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3318,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3275,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3332,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 3339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 3339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 3339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 3339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 3339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 448,
											"end": 471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 448,
											"end": 471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 375,
											"end": 405,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 375,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 581,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 581,
											"end": 613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 581,
											"end": 613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3807,
											"end": 3814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3822,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3822,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3799,
											"end": 3853,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3799,
											"end": 3853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3882,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3890,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3863,
											"end": 3924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3863,
											"end": 3924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3944,
											"end": 3951,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3934,
											"end": 3951,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3951,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3951,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "EDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1"
										},
										{
											"begin": 3981,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3966,
											"end": 3989,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3989,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4112,
											"end": 4119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4127,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4104,
											"end": 4176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4104,
											"end": 4176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4186,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB"
										},
										{
											"begin": 4235,
											"end": 4242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4219,
											"end": 4243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4243,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3623,
											"end": 3627,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3638,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3629,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3629,
											"end": 3642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3617,
											"end": 3643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3617,
											"end": 3643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7"
										},
										{
											"begin": 3671,
											"end": 3677,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3658,
											"end": 3678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3678,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 279,
											"end": 302,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1906,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1884,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1884,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1972,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 1989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 1989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2054,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2067,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2007,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2007,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2007,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1999,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1999,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2134,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2104,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2147,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2104,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB"
										},
										{
											"begin": 2182,
											"end": 2192,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2162,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2205,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5957,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5950,
											"end": 5957,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5971,
											"end": 5979,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6015,
											"end": 6029,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6061,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6043,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6062,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6043,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6100,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6076,
											"end": 6101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6101,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6076,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6115,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6115,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6153,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 6153,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 6201,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6201,
											"end": 6214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6214,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 6201,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 6228,
											"end": 6245,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 6291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4605,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4585,
											"end": 4593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4605,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608"
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4646,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 477,
											"end": 506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 477,
											"end": 506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 545,
											"end": 575,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5186,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5260,
											"end": 5277,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5260,
											"end": 5281,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 5252,
											"end": 5307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5252,
											"end": 5307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5327,
											"end": 5335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5337,
											"end": 5351,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5353,
											"end": 5370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5317,
											"end": 5371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5317,
											"end": 5371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "35279BB4D182B0C31A3C5ACF2EA52F703EC240E2C8CDAEE25E353623DB06418"
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5386,
											"end": 5431,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5431,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5441,
											"end": 5462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5462,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5462,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3560,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 3705,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 3868,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3856,
											"end": 3893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4049,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4281,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4426,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4554,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 5087,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4758,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4869,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 4834,
											"end": 4953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 4872,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4872,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4951,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 4872,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4953,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 4834,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 5062,
											"end": 5069,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5051,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5017,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 5087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 5087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 5087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 5087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 5087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5161,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5173,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 5284,
											"end": 5289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5268,
											"end": 5290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5443,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 6069,
											"end": 6074,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6051,
											"end": 6075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 6051,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 6042,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6024,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 6203,
											"end": 6208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 6172,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6361,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6221,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6285,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 6349,
											"end": 6354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6318,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6355,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 6318,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6361,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6367,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6468,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6519,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 6468,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6520,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6782,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6532,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 6772,
											"end": 6773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6748,
											"end": 6754,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6690,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6775,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 6690,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7203,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7214,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 7214,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7295,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7445,
											"end": 7447,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7434,
											"end": 7443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 7377,
											"end": 7449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7449,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7377,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 7527,
											"end": 7529,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7509,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 7459,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7531,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 7459,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 7609,
											"end": 7612,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 7613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7591,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7541,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7614,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 7541,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7692,
											"end": 7695,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7681,
											"end": 7690,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7624,
											"end": 7697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7697,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7624,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 7775,
											"end": 7778,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7707,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7780,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 7707,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7790,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 7858,
											"end": 7861,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7840,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7790,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7790,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7790,
											"end": 7863,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 7790,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 7941,
											"end": 7944,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7930,
											"end": 7939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 7945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7873,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7946,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 7873,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 8024,
											"end": 8027,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8000,
											"end": 8006,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7956,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 8029,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 7956,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8039,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 8108,
											"end": 8111,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8097,
											"end": 8106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8090,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8039,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 8039,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8039,
											"end": 8113,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 8039,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 8120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8248,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8230,
											"end": 8237,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8249,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8254,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8338,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 8219,
											"end": 8338,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8257,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8257,
											"end": 8336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8257,
											"end": 8336,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8257,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8338,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 8219,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 8447,
											"end": 8454,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8436,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8402,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8455,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 8402,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8392,
											"end": 8455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8392,
											"end": 8455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8504,
											"end": 8506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 8575,
											"end": 8582,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8564,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8530,
											"end": 8583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8583,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 8530,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8786,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 8606,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8731,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 8755,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8741,
											"end": 8756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8765,
											"end": 8780,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 9112,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8792,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8874,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8867,
											"end": 8871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8875,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 8922,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8931,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 8931,
											"end": 9012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8989,
											"end": 8995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 9002,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 9002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 9002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8931,
											"end": 9012,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 8931,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9051,
											"end": 9057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9062,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9028,
											"end": 9046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9025,
											"end": 9063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 9078,
											"end": 9096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 9112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 9112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 9112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 9112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 9112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9279,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9266,
											"end": 9275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 9358,
											"end": 9359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9343,
											"end": 9360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9340,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 9290,
											"end": 9361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9361,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 9290,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 9439,
											"end": 9441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9421,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 9371,
											"end": 9443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9572,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 9456,
											"end": 9572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 9541,
											"end": 9546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9526,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9547,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 9526,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9519,
											"end": 9524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 9506,
											"end": 9566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9562,
											"end": 9563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9552,
											"end": 9564,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9566,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 9506,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9715,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 9578,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9663,
											"end": 9669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9670,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 9670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 9670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 9703,
											"end": 9708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 9679,
											"end": 9709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9715,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 10066,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 9721,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9825,
											"end": 9834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9823,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9924,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 9805,
											"end": 9924,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 9843,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9843,
											"end": 9922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 9922,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 9843,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9924,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 9805,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9963,
											"end": 9964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 10041,
											"end": 10048,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10032,
											"end": 10038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10030,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 9988,
											"end": 10049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10049,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 9988,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9978,
											"end": 10049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9978,
											"end": 10049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 10059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 10066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 10066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 10066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 10066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 10066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10237,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 10072,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10212,
											"end": 10229,
											"name": "PUSH",
											"source": 7,
											"value": "5769746864726177206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10196,
											"end": 10210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10609,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 10243,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10385,
											"end": 10388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10406,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 10470,
											"end": 10472,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 10465,
											"end": 10468,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10406,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 10406,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10406,
											"end": 10473,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 10406,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10571,
											"end": 10574,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 10482,
											"end": 10575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10575,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10482,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10600,
											"end": 10602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10796,
											"end": 10822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10796,
											"end": 10822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10854,
											"end": 10855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10843,
											"end": 10852,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10839,
											"end": 10856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 11022,
											"end": 11026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 10896,
											"end": 11027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 11027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 11027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10615,
											"end": 11034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11211,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11040,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11203,
											"name": "PUSH",
											"source": 7,
											"value": "5468726573686F6C64206D757374206265203E20300000000000000000000000"
										},
										{
											"begin": 11176,
											"end": 11177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11359,
											"end": 11362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11439,
											"end": 11442,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 11380,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11373,
											"end": 11447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11373,
											"end": 11447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11456,
											"end": 11549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11574,
											"end": 11576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11569,
											"end": 11572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11565,
											"end": 11577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11217,
											"end": 11583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11755,
											"end": 11759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11782,
											"end": 11791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11770,
											"end": 11796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11770,
											"end": 11796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11836,
											"end": 11840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11832,
											"end": 11852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11817,
											"end": 11826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11806,
											"end": 11853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 11996,
											"end": 12000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 11870,
											"end": 12001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 12001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 12001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 12008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12194,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12014,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12062,
											"end": 12139,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12059,
											"end": 12060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12052,
											"end": 12140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12159,
											"end": 12163,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 12156,
											"end": 12157,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12183,
											"end": 12187,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12188,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12610,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 12200,
											"end": 12610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12240,
											"end": 12247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12263,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12263,
											"end": 12283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12283,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 12263,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12283,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12297,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 12315,
											"end": 12316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12297,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12297,
											"end": 12317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12297,
											"end": 12317,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 12297,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12292,
											"end": 12317,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12292,
											"end": 12317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12349,
											"end": 12350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12354,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 12392,
											"end": 12403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12374,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12404,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 12374,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12363,
											"end": 12404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12363,
											"end": 12404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12553,
											"end": 12554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12544,
											"end": 12551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12540,
											"end": 12555,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12534,
											"end": 12556,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12514,
											"end": 12515,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12507,
											"end": 12516,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12487,
											"end": 12570,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12464,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 12464,
											"end": 12603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12583,
											"end": 12601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12464,
											"end": 12603,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 12464,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12248,
											"end": 12610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12610,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12616,
											"end": 12795,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 12616,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 12787,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 12752,
											"end": 12753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12740,
											"end": 12754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12733,
											"end": 12788,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12616,
											"end": 12795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12616,
											"end": 12795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12943,
											"end": 12946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 13028,
											"end": 13030,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 13023,
											"end": 13026,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 12964,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 12964,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12957,
											"end": 13031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12957,
											"end": 13031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 13129,
											"end": 13132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 13040,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 13040,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13158,
											"end": 13160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13153,
											"end": 13156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13149,
											"end": 13161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 13167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 13167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13379,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13366,
											"end": 13375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13362,
											"end": 13380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13426,
											"end": 13435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13416,
											"end": 13436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13412,
											"end": 13413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13397,
											"end": 13414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13390,
											"end": 13437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 13580,
											"end": 13584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 13454,
											"end": 13585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 13454,
											"end": 13585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13173,
											"end": 13592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13173,
											"end": 13592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13598,
											"end": 13778,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13598,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13646,
											"end": 13723,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13643,
											"end": 13644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13636,
											"end": 13724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13743,
											"end": 13747,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 13740,
											"end": 13741,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13733,
											"end": 13748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13767,
											"end": 13771,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13764,
											"end": 13765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13757,
											"end": 13772,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13969,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 13784,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13824,
											"end": 13825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13841,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 13859,
											"end": 13860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 13841,
											"end": 13861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 13861,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 13841,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13875,
											"end": 13895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 13893,
											"end": 13894,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13875,
											"end": 13895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 13875,
											"end": 13895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13875,
											"end": 13895,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 13875,
											"end": 13895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13870,
											"end": 13895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13870,
											"end": 13895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13914,
											"end": 13915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 13904,
											"end": 13939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 13919,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13919,
											"end": 13937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 13937,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 13919,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13939,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 13904,
											"end": 13939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13961,
											"end": 13962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13954,
											"end": 13963,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 13963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13969,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13784,
											"end": 13969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14169,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 13975,
											"end": 14169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14015,
											"end": 14019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 14053,
											"end": 14054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14035,
											"end": 14055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14030,
											"end": 14055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14030,
											"end": 14055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14069,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14089,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14110,
											"end": 14111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14106,
											"end": 14115,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14098,
											"end": 14115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14098,
											"end": 14115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14137,
											"end": 14138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14131,
											"end": 14135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14128,
											"end": 14139,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 14142,
											"end": 14160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 14169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14366,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 14175,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14215,
											"end": 14218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 14252,
											"end": 14253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14234,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14234,
											"end": 14254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14234,
											"end": 14254,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 14234,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14268,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 14286,
											"end": 14287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14268,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14268,
											"end": 14288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14268,
											"end": 14288,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 14268,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14263,
											"end": 14288,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14263,
											"end": 14288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14311,
											"end": 14312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14304,
											"end": 14313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14297,
											"end": 14313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14297,
											"end": 14313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14332,
											"end": 14335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14329,
											"end": 14330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14326,
											"end": 14336,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14323,
											"end": 14359,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14323,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 14323,
											"end": 14359,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 14339,
											"end": 14357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14323,
											"end": 14359,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 14323,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14366,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14372,
											"end": 14540,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 14372,
											"end": 14540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14512,
											"end": 14532,
											"name": "PUSH",
											"source": 7,
											"value": "55534454207061796F7574206661696C65640000000000000000000000000000"
										},
										{
											"begin": 14508,
											"end": 14509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14533,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14372,
											"end": 14540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14372,
											"end": 14540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14912,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 14546,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14688,
											"end": 14691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14709,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 14773,
											"end": 14775,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 14768,
											"end": 14771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 14709,
											"end": 14776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14776,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 14709,
											"end": 14776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14785,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 14874,
											"end": 14877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14785,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 14785,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14785,
											"end": 14878,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 14785,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14898,
											"end": 14901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14887,
											"end": 14906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14887,
											"end": 14906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15337,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 14918,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15084,
											"end": 15088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15122,
											"end": 15124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15111,
											"end": 15120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15171,
											"end": 15180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15181,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15157,
											"end": 15158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15146,
											"end": 15155,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15142,
											"end": 15159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15182,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 15325,
											"end": 15329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 15199,
											"end": 15330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15330,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 15199,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15191,
											"end": 15330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15191,
											"end": 15330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15492,
											"end": 15496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 15519,
											"end": 15528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15515,
											"end": 15533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15543,
											"end": 15614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 15611,
											"end": 15612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15600,
											"end": 15609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15596,
											"end": 15613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15587,
											"end": 15593,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15543,
											"end": 15614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 15543,
											"end": 15614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15543,
											"end": 15614,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 15543,
											"end": 15614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15624,
											"end": 15696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 15692,
											"end": 15694,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15681,
											"end": 15690,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15668,
											"end": 15674,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15624,
											"end": 15696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 15624,
											"end": 15696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15624,
											"end": 15696,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 15624,
											"end": 15696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15706,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 15774,
											"end": 15776,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15763,
											"end": 15772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15759,
											"end": 15777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15750,
											"end": 15756,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15706,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 15706,
											"end": 15778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15706,
											"end": 15778,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 15706,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15791,
											"end": 15967,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 15791,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15931,
											"end": 15959,
											"name": "PUSH",
											"source": 7,
											"value": "4275792072617465206D757374206265203E3D2031205354454D000000000000"
										},
										{
											"begin": 15927,
											"end": 15928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15919,
											"end": 15925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15915,
											"end": 15929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15908,
											"end": 15960,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15791,
											"end": 15967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15791,
											"end": 15967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16339,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 15973,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16115,
											"end": 16118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16136,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 16200,
											"end": 16202,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 16195,
											"end": 16198,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16136,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16136,
											"end": 16203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16136,
											"end": 16203,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 16136,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16129,
											"end": 16203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16129,
											"end": 16203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 16301,
											"end": 16304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 16212,
											"end": 16305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16305,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 16212,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16330,
											"end": 16332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16325,
											"end": 16328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16321,
											"end": 16333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16314,
											"end": 16333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16314,
											"end": 16333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16764,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 16345,
											"end": 16764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16511,
											"end": 16515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16551,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16534,
											"end": 16552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16526,
											"end": 16552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16526,
											"end": 16552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16598,
											"end": 16607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16588,
											"end": 16608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16584,
											"end": 16585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16573,
											"end": 16582,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16569,
											"end": 16586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16562,
											"end": 16609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 16752,
											"end": 16756,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 16626,
											"end": 16757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16757,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 16626,
											"end": 16757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16618,
											"end": 16757,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16618,
											"end": 16757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16770,
											"end": 16949,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 16770,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16910,
											"end": 16941,
											"name": "PUSH",
											"source": 7,
											"value": "4275792072617465206D757374206265203C3D2053656C6C2072617465000000"
										},
										{
											"begin": 16906,
											"end": 16907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16898,
											"end": 16904,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16894,
											"end": 16908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16887,
											"end": 16942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16770,
											"end": 16949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16770,
											"end": 16949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 17321,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 16955,
											"end": 17321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17097,
											"end": 17100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17118,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 17182,
											"end": 17184,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 17118,
											"end": 17185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17185,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 17118,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17111,
											"end": 17185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17111,
											"end": 17185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17194,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 17283,
											"end": 17286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17194,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 17194,
											"end": 17287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17194,
											"end": 17287,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 17194,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17312,
											"end": 17314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17307,
											"end": 17310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17303,
											"end": 17315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17296,
											"end": 17315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17296,
											"end": 17315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 17321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 17321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 17321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 17321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17327,
											"end": 17746,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 17327,
											"end": 17746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17493,
											"end": 17497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17531,
											"end": 17533,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17520,
											"end": 17529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17508,
											"end": 17534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17508,
											"end": 17534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17574,
											"end": 17578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17570,
											"end": 17590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17566,
											"end": 17567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17551,
											"end": 17568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17544,
											"end": 17591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 17734,
											"end": 17738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 17608,
											"end": 17739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17739,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 17608,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17600,
											"end": 17739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17600,
											"end": 17739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17327,
											"end": 17746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17327,
											"end": 17746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17327,
											"end": 17746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17327,
											"end": 17746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17752,
											"end": 18008,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 17752,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17892,
											"end": 17958,
											"name": "PUSH",
											"source": 7,
											"value": "53656C6C2072617465206D75737420626520E289A52031205354454D20706572"
										},
										{
											"begin": 17888,
											"end": 17889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17880,
											"end": 17886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17876,
											"end": 17890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17869,
											"end": 17959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17993,
											"end": 18000,
											"name": "PUSH",
											"source": 7,
											"value": "2055534454000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17988,
											"end": 17990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17980,
											"end": 17986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 17991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17969,
											"end": 18001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17752,
											"end": 18008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17752,
											"end": 18008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18380,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 18014,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18156,
											"end": 18159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 18241,
											"end": 18243,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 18236,
											"end": 18239,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18177,
											"end": 18244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 18177,
											"end": 18244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18177,
											"end": 18244,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 18177,
											"end": 18244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18170,
											"end": 18244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18170,
											"end": 18244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 18342,
											"end": 18345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 18253,
											"end": 18346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18253,
											"end": 18346,
											"name": "tag",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 18253,
											"end": 18346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18371,
											"end": 18373,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18362,
											"end": 18374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18355,
											"end": 18374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18355,
											"end": 18374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18805,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18386,
											"end": 18805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18552,
											"end": 18556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18590,
											"end": 18592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18579,
											"end": 18588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18575,
											"end": 18593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18567,
											"end": 18593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18567,
											"end": 18593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18639,
											"end": 18648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18633,
											"end": 18637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18629,
											"end": 18649,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18614,
											"end": 18623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18610,
											"end": 18627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18603,
											"end": 18650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18667,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 18793,
											"end": 18797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18667,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 18667,
											"end": 18798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18667,
											"end": 18798,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 18667,
											"end": 18798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18659,
											"end": 18798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18659,
											"end": 18798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18960,
											"end": 18964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19000,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18987,
											"end": 18996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18983,
											"end": 19001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18975,
											"end": 19001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18975,
											"end": 19001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19011,
											"end": 19082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 19079,
											"end": 19080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19068,
											"end": 19077,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19064,
											"end": 19081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19055,
											"end": 19061,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19011,
											"end": 19082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 19011,
											"end": 19082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19011,
											"end": 19082,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 19011,
											"end": 19082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19092,
											"end": 19164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 19160,
											"end": 19162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19149,
											"end": 19158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19145,
											"end": 19163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19136,
											"end": 19142,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19092,
											"end": 19164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 19092,
											"end": 19164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19092,
											"end": 19164,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 19092,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19174,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 19242,
											"end": 19244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19231,
											"end": 19240,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19227,
											"end": 19245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19218,
											"end": 19224,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19174,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 19174,
											"end": 19246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19174,
											"end": 19246,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 19174,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 19253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19259,
											"end": 19429,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 19259,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19399,
											"end": 19421,
											"name": "PUSH",
											"source": 7,
											"value": "55534454207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 19395,
											"end": 19396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19387,
											"end": 19393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19383,
											"end": 19397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19376,
											"end": 19422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19259,
											"end": 19429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19259,
											"end": 19429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19577,
											"end": 19580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 19657,
											"end": 19660,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 19598,
											"end": 19665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "tag",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19591,
											"end": 19665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19591,
											"end": 19665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 19763,
											"end": 19766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 19674,
											"end": 19767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19792,
											"end": 19794,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19787,
											"end": 19790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19783,
											"end": 19795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19973,
											"end": 19977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20011,
											"end": 20013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20000,
											"end": 20009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19996,
											"end": 20014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19988,
											"end": 20014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19988,
											"end": 20014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20060,
											"end": 20069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20054,
											"end": 20058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20050,
											"end": 20070,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20046,
											"end": 20047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20035,
											"end": 20044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20031,
											"end": 20048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20024,
											"end": 20071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 20214,
											"end": 20218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 20088,
											"end": 20219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20080,
											"end": 20219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20080,
											"end": 20219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19807,
											"end": 20226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20353,
											"end": 20357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20391,
											"end": 20393,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20380,
											"end": 20389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20376,
											"end": 20394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20368,
											"end": 20394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20368,
											"end": 20394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20404,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 20472,
											"end": 20473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20461,
											"end": 20470,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20457,
											"end": 20474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20448,
											"end": 20454,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20404,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 20404,
											"end": 20475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20404,
											"end": 20475,
											"name": "tag",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 20404,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 20553,
											"end": 20555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20542,
											"end": 20551,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20538,
											"end": 20556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20529,
											"end": 20535,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 20485,
											"end": 20557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20557,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 20485,
											"end": 20557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20713,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 20570,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20627,
											"end": 20632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20658,
											"end": 20664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20652,
											"end": 20665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20643,
											"end": 20665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20643,
											"end": 20665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20674,
											"end": 20707,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 20701,
											"end": 20706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20674,
											"end": 20707,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 20674,
											"end": 20707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20674,
											"end": 20707,
											"name": "tag",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 20674,
											"end": 20707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20713,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20719,
											"end": 21070,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 20719,
											"end": 21070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20789,
											"end": 20795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20838,
											"end": 20840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20826,
											"end": 20835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20817,
											"end": 20824,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20813,
											"end": 20836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20809,
											"end": 20841,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 20806,
											"end": 20925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20806,
											"end": 20925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 20806,
											"end": 20925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20844,
											"end": 20923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 20844,
											"end": 20923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 20844,
											"end": 20923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20844,
											"end": 20923,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 20844,
											"end": 20923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20806,
											"end": 20925,
											"name": "tag",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 20806,
											"end": 20925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20964,
											"end": 20965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20989,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 21045,
											"end": 21052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21036,
											"end": 21042,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21025,
											"end": 21034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21021,
											"end": 21043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20989,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 20989,
											"end": 21053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20989,
											"end": 21053,
											"name": "tag",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 20989,
											"end": 21053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20979,
											"end": 21053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20979,
											"end": 21053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20935,
											"end": 21063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20719,
											"end": 21070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20719,
											"end": 21070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20719,
											"end": 21070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20719,
											"end": 21070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20719,
											"end": 21070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21247,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 21076,
											"end": 21247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21216,
											"end": 21239,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F2070726F66697420746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 21212,
											"end": 21213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21204,
											"end": 21210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21200,
											"end": 21214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21193,
											"end": 21240,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21253,
											"end": 21619,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 21253,
											"end": 21619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21395,
											"end": 21398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21416,
											"end": 21483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 21480,
											"end": 21482,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 21475,
											"end": 21478,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21416,
											"end": 21483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 21416,
											"end": 21483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21416,
											"end": 21483,
											"name": "tag",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 21416,
											"end": 21483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21409,
											"end": 21483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21409,
											"end": 21483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21492,
											"end": 21585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 21581,
											"end": 21584,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21492,
											"end": 21585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 21492,
											"end": 21585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21492,
											"end": 21585,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 21492,
											"end": 21585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21610,
											"end": 21612,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21605,
											"end": 21608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21601,
											"end": 21613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21594,
											"end": 21613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21594,
											"end": 21613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21253,
											"end": 21619,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21253,
											"end": 21619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21253,
											"end": 21619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21253,
											"end": 21619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21625,
											"end": 22044,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 21625,
											"end": 22044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21791,
											"end": 21795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21829,
											"end": 21831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21818,
											"end": 21827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21814,
											"end": 21832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21806,
											"end": 21832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21806,
											"end": 21832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21878,
											"end": 21887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21872,
											"end": 21876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21868,
											"end": 21888,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21864,
											"end": 21865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21853,
											"end": 21862,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21849,
											"end": 21866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21842,
											"end": 21889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21906,
											"end": 22037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 22032,
											"end": 22036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21906,
											"end": 22037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 21906,
											"end": 22037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21906,
											"end": 22037,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 21906,
											"end": 22037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21898,
											"end": 22037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21898,
											"end": 22037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21625,
											"end": 22044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21625,
											"end": 22044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21625,
											"end": 22044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21625,
											"end": 22044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22199,
											"end": 22203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22237,
											"end": 22239,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 22226,
											"end": 22235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22222,
											"end": 22240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22214,
											"end": 22240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22214,
											"end": 22240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22250,
											"end": 22321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 22318,
											"end": 22319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22307,
											"end": 22316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22303,
											"end": 22320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22294,
											"end": 22300,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22250,
											"end": 22321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 22250,
											"end": 22321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22250,
											"end": 22321,
											"name": "tag",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 22250,
											"end": 22321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22331,
											"end": 22403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 22399,
											"end": 22401,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22388,
											"end": 22397,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22384,
											"end": 22402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22375,
											"end": 22381,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22331,
											"end": 22403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 22331,
											"end": 22403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22331,
											"end": 22403,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 22331,
											"end": 22403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22413,
											"end": 22485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 22481,
											"end": 22483,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22470,
											"end": 22479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22466,
											"end": 22484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22457,
											"end": 22463,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22413,
											"end": 22485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 22413,
											"end": 22485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22413,
											"end": 22485,
											"name": "tag",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 22413,
											"end": 22485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/STEMMER.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"accumulatedProfit()": "748e37f4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"buyRate()": "fc37987b",
							"buyStem(uint256)": "bb285554",
							"decimals()": "313ce567",
							"getConfig()": "c3f909d4",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"profitThreshold()": "f974821a",
							"profitTreasury()": "f203787c",
							"renounceOwnership()": "715018a6",
							"sellRate()": "6217229b",
							"sellStem(uint256)": "5d91e3f8",
							"setBuyRate(uint256)": "85e436bf",
							"setProfitThreshold(uint256)": "28821182",
							"setProfitTreasury(address)": "0f7e730b",
							"setSellRate(uint256)": "8e0b017d",
							"setTreasury(address)": "f0f44260",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"usdtToken()": "a98ad46c",
							"withdrawAccumulatedProfit()": "ff90b54d",
							"withdrawUSDT(address,uint256)": "1481794e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profitTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_profitThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AccumulatedProfitWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyRate\",\"type\":\"uint256\"}],\"name\":\"BuyRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"}],\"name\":\"BuyStem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ProfitThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProfitTreasury\",\"type\":\"address\"}],\"name\":\"ProfitTreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellRate\",\"type\":\"uint256\"}],\"name\":\"SellRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitStems\",\"type\":\"uint256\"}],\"name\":\"SellStem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDTWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accumulatedProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyStem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profitTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"treasuryStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractUsdtBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStemSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accumulatedProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_profitThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"}],\"name\":\"sellStem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setBuyRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"setProfitThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setProfitTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setSellRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAccumulatedProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMMER.sol\":\"STEMMER\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/STEMMER.sol\":{\"keccak256\":\"0x518902de21362a39fb6f7831a7c07c5e46b18844646d11e1a9cdd54f9fe532d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec3024fce5e3d9ac3897e9f8ae92f87eebe57c7df8f9317afebe76f77805b9df\",\"dweb:/ipfs/QmQEmjywavUVmJucuURwjUghin8adpkhDMxD37fhe5K6qZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "usdtToken",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 948,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "buyRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "sellRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "treasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 955,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "profitTreasury",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 957,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "profitThreshold",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/STEMMER.sol:STEMMER",
								"label": "accumulatedProfit",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/STEMMER.sol": {
				"ast": {
					"absolutePath": "contracts/STEMMER.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"STEMMER": [
							1473
						]
					},
					"id": 1474,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 878,
							"src": "114:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 148,
							"src": "183:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"257:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "257:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "257:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"264:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "264:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "264:7:6"
								}
							],
							"canonicalName": "STEMMER",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1473,
							"linearizedBaseContracts": [
								1473,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "STEMMER",
							"nameLocation": "246:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 945,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "293:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "279:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 944,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 943,
											"name": "IERC20",
											"nameLocations": [
												"279:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "279:6:6"
										},
										"referencedDeclaration": 877,
										"src": "279:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc37987b",
									"id": 948,
									"mutability": "mutable",
									"name": "buyRate",
									"nameLocation": "324:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "309:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "334:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6217229b",
									"id": 951,
									"mutability": "mutable",
									"name": "sellRate",
									"nameLocation": "390:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "375:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "401:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 953,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "463:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "448:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 952,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "448:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f203787c",
									"id": 955,
									"mutability": "mutable",
									"name": "profitTreasury",
									"nameLocation": "492:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "477:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 954,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "477:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f974821a",
									"id": 957,
									"mutability": "mutable",
									"name": "profitThreshold",
									"nameLocation": "560:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "545:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "545:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "748e37f4",
									"id": 959,
									"mutability": "mutable",
									"name": "accumulatedProfit",
									"nameLocation": "596:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "581:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb",
									"id": 967,
									"name": "BuyStem",
									"nameLocation": "645:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "669:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "653:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "684:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "676:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": false,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "704:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "696:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:63:6"
									},
									"src": "639:77:6"
								},
								{
									"anonymous": false,
									"eventSelector": "91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420",
									"id": 977,
									"name": "SellStem",
									"nameLocation": "727:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "736:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": false,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "768:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "760:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "788:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "780:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "profitStems",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "800:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:85:6"
									},
									"src": "721:100:6"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 983,
									"name": "Minted",
									"nameLocation": "832:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "855:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "839:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "867:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "859:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:36:6"
									},
									"src": "826:49:6"
								},
								{
									"anonymous": false,
									"eventSelector": "696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7",
									"id": 989,
									"name": "Burned",
									"nameLocation": "886:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "909:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "893:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "923:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "915:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:38:6"
									},
									"src": "880:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab",
									"id": 993,
									"name": "SellRateUpdated",
									"nameLocation": "942:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSellRate",
												"nameLocation": "966:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "958:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:21:6"
									},
									"src": "936:43:6"
								},
								{
									"anonymous": false,
									"eventSelector": "00edd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb1",
									"id": 997,
									"name": "BuyRateUpdated",
									"nameLocation": "990:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBuyRate",
												"nameLocation": "1013:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1005:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:20:6"
									},
									"src": "984:41:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608",
									"id": 1001,
									"name": "TreasuryChanged",
									"nameLocation": "1036:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "1068:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1052:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:29:6"
									},
									"src": "1030:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "0056d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b",
									"id": 1005,
									"name": "ProfitTreasuryChanged",
									"nameLocation": "1092:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"indexed": true,
												"mutability": "mutable",
												"name": "newProfitTreasury",
												"nameLocation": "1130:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1114:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:35:6"
									},
									"src": "1086:63:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b",
									"id": 1011,
									"name": "USDTWithdrawn",
									"nameLocation": "1160:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1190:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1174:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1202:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1194:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:36:6"
									},
									"src": "1154:56:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c5023cc86199e71ca52157b0b124ddbda596c9fb8bab5bb7028d162fa3ed5545",
									"id": 1015,
									"name": "ProfitThresholdUpdated",
									"nameLocation": "1221:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"indexed": false,
												"mutability": "mutable",
												"name": "newThreshold",
												"nameLocation": "1252:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1244:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:22:6"
									},
									"src": "1215:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "035279bb4d182b0c31a3c5acf2ea52f703ec240e2c8cdaee25e353623db06418",
									"id": 1019,
									"name": "AccumulatedProfitWithdrawn",
									"nameLocation": "1277:26:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1312:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1304:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:16:6"
									},
									"src": "1271:49:6"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1549:217:6",
										"statements": [
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1559:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1042,
																"name": "_usdtTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "1578:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1041,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1571:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1571:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "1559:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "1559:37:6"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1046,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1606:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1047,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "1617:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1606:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1606:20:6"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1050,
														"name": "profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "1636:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1051,
														"name": "_profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "1653:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1636:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "1636:32:6"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "profitThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "1678:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "_profitThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1696:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1678:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1678:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1059,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "1728:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "1738:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1754:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1738:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1722:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1722:37:6"
											}
										]
									},
									"id": 1066,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5354454d4d4552",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1510:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ffd31affea26a94d12a3a0b27565e7f22ab7d240d197d7eeaca998aec54d116a",
														"typeString": "literal_string \"STEMMER\""
													},
													"value": "STEMMER"
												},
												{
													"hexValue": "5354454d",
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1521:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8a41c0f2575200c6620e0e981e04ebdbd20c94c08716ef02ff08a4b28fc2f53e",
														"typeString": "literal_string \"STEM\""
													},
													"value": "STEM"
												}
											],
											"id": 1034,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1031,
												"name": "ERC20",
												"nameLocations": [
													"1504:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1504:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1504:24:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1036,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1537:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1541:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1537:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1038,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1035,
												"name": "Ownable",
												"nameLocations": [
													"1529:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1529:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1529:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "_usdtTokenAddress",
												"nameLocation": "1355:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1347:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1390:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1382:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "_profitTreasury",
												"nameLocation": "1417:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1409:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1450:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1442:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_profitThreshold",
												"nameLocation": "1481:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1473:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:166:6"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:6"
									},
									"scope": 1473,
									"src": "1326:440:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1874:338:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1072,
																"name": "usdtAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "1892:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1905:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1892:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1908:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1884:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1884:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1884:56:6"
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "stemAmount",
														"nameLocation": "1959:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "1951:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1951:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "usdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1972:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1985:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1972:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1951:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1087,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2030:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2034:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2030:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1091,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2050:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMMER_$1473",
																				"typeString": "contract STEMMER"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMMER_$1473",
																				"typeString": "contract STEMMER"
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2042:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1089,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2042:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2042:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1093,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "2057:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1085,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "2007:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2017:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "2007:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2007:61:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2070:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1999:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:94:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1999:94:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1099,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2114:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2124:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2128:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2124:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "2136:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2104:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2104:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1106,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2170:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2174:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2182:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1109,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "2194:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1105,
														"name": "BuyStem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "2162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "EmitStatement",
												"src": "2157:48:6"
											}
										]
									},
									"functionSelector": "bb285554",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyStem",
									"nameLocation": "1837:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "1853:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1845:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1844:20:6"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1874:0:6"
									},
									"scope": 1473,
									"src": "1828:384:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "2296:1043:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "stemAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "2314:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2327:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2314:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2330:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2306:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "2306:56:6"
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "usdtAmount",
														"nameLocation": "2432:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "2424:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2424:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1127,
																	"name": "stemAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "2446:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2459:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2446:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2445:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1131,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2467:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2445:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2424:51:6"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "fairUsdtAmount",
														"nameLocation": "2547:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "2539:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2539:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "stemAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2564:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2577:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2564:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2539:42:6"
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "expectedStems",
														"nameLocation": "2599:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "2591:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2591:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "fairUsdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "2615:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1143,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2632:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2615:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2591:49:6"
											},
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "profitStems",
														"nameLocation": "2658:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "2650:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1148,
															"name": "expectedStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2672:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1149,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2688:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2672:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2730:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2672:59:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1151,
															"name": "expectedStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2701:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1152,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2717:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2701:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2650:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1158,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2797:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2801:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2797:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2809:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2819:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1157,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2787:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2787:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2787:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1164,
															"name": "profitStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "2889:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2903:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2889:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1167,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2908:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2934:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2926:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2926:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2926:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2908:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2889:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1194,
												"nodeType": "IfStatement",
												"src": "2885:292:6",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "2938:239:6",
													"statements": [
														{
															"expression": {
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1174,
																	"name": "accumulatedProfit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "2952:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1175,
																	"name": "profitStems",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "2973:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2952:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1177,
															"nodeType": "ExpressionStatement",
															"src": "2952:32:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "accumulatedProfit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "3003:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1179,
																	"name": "profitThreshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "3024:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3003:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1192,
															"nodeType": "IfStatement",
															"src": "2999:168:6",
															"trueBody": {
																"id": 1191,
																"nodeType": "Block",
																"src": "3041:126:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1182,
																					"name": "treasury",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "3069:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1183,
																					"name": "profitTreasury",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "3079:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1184,
																					"name": "accumulatedProfit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "3095:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1181,
																				"name": "_transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "3059:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3059:54:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1186,
																		"nodeType": "ExpressionStatement",
																		"src": "3059:54:6"
																	},
																	{
																		"expression": {
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1187,
																				"name": "accumulatedProfit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "3131:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3151:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3131:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1190,
																		"nodeType": "ExpressionStatement",
																		"src": "3131:21:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1198,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3214:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3218:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3214:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1200,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3226:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1196,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "3195:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3205:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "3195:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3195:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207061796f7574206661696c6564",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3239:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																"typeString": "literal_string \"USDT payout failed\""
															},
															"value": "USDT payout failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																"typeString": "literal_string \"USDT payout failed\""
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3187:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3187:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "3187:73:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3284:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3288:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3284:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3296:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1209,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "3308:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1210,
															"name": "profitStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "3320:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1205,
														"name": "SellStem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "3275:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3275:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "EmitStatement",
												"src": "3270:62:6"
											}
										]
									},
									"functionSelector": "5d91e3f8",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellStem",
									"nameLocation": "2258:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "2275:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2267:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:20:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2296:0:6"
									},
									"scope": 1473,
									"src": "2249:1090:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "3435:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1224,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3451:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1225,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "3455:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3464:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3455:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3445:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "3445:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3491:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3495:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "3484:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3484:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "EmitStatement",
												"src": "3479:23:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1220,
												"name": "onlyOwner",
												"nameLocations": [
													"3425:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3425:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3425:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "3383:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3396:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3388:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3408:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3400:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:28:6"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3435:0:6"
									},
									"scope": 1473,
									"src": "3374:135:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "3607:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "3623:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1247,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "3629:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3638:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3629:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1245,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "3617:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "3617:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1253,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "3665:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "3671:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "3658:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "3653:25:6"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1242,
												"name": "onlyOwner",
												"nameLocations": [
													"3597:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3597:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3597:9:6"
										}
									],
									"name": "burn",
									"nameLocation": "3553:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3566:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "3558:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3558:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3580:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "3572:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3557:30:6"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3607:0:6"
									},
									"scope": 1473,
									"src": "3544:141:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "3789:207:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1266,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "3807:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3818:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3807:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792072617465206d757374206265203e3d2031205354454d",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3824:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																"typeString": "literal_string \"Buy rate must be >= 1 STEM\""
															},
															"value": "Buy rate must be >= 1 STEM"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																"typeString": "literal_string \"Buy rate must be >= 1 STEM\""
															}
														],
														"id": 1265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3799:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "3799:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "3871:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1274,
																"name": "sellRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "3882:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3871:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792072617465206d757374206265203c3d2053656c6c2072617465",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3892:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																"typeString": "literal_string \"Buy rate must be <= Sell rate\""
															},
															"value": "Buy rate must be <= Sell rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																"typeString": "literal_string \"Buy rate must be <= Sell rate\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3863:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "3863:61:6"
											},
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1279,
														"name": "buyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3934:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1280,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3944:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "3934:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1284,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "3981:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1283,
														"name": "BuyRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "3966:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3966:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "EmitStatement",
												"src": "3961:28:6"
											}
										]
									},
									"functionSelector": "85e436bf",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1262,
												"name": "onlyOwner",
												"nameLocations": [
													"3779:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3779:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3779:9:6"
										}
									],
									"name": "setBuyRate",
									"nameLocation": "3742:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "3761:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3753:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:17:6"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3789:0:6"
									},
									"scope": 1473,
									"src": "3733:263:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "4094:156:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "4112:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4123:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "4112:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "unicodeString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4129:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																"typeString": "literal_string hex\"53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454\""
															},
															"value": "Sell rate must be ≥ 1 STEM per USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																"typeString": "literal_string hex\"53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4104:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4104:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "4104:72:6"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1302,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "4186:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1303,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "4197:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4186:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "4186:18:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1307,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "4235:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1306,
														"name": "SellRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "4219:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4219:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "EmitStatement",
												"src": "4214:29:6"
											}
										]
									},
									"functionSelector": "8e0b017d",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1292,
												"name": "onlyOwner",
												"nameLocations": [
													"4084:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4084:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4084:9:6"
										}
									],
									"name": "setSellRate",
									"nameLocation": "4046:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "4066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4057:17:6"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4094:0:6"
									},
									"scope": 1473,
									"src": "4037:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "4358:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1323,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "4395:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1324,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "4399:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1321,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "4376:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4386:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "4376:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4376:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177206661696c6564",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4408:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															},
															"value": "Withdraw failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															}
														],
														"id": 1320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4368:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4368:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "4368:58:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1330,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4455:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "4459:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"name": "USDTWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "4441:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4441:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "EmitStatement",
												"src": "4436:30:6"
											}
										]
									},
									"functionSelector": "1481794e",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1317,
												"name": "onlyOwner",
												"nameLocations": [
													"4348:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4348:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4348:9:6"
										}
									],
									"name": "withdrawUSDT",
									"nameLocation": "4298:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4319:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4311:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4331:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4323:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:28:6"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4358:0:6"
									},
									"scope": 1473,
									"src": "4289:184:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "4575:78:6",
										"statements": [
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1342,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4585:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1343,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "4596:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4585:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "4585:20:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1347,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "4636:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1346,
														"name": "TreasuryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "4620:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4620:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "EmitStatement",
												"src": "4615:31:6"
											}
										]
									},
									"functionSelector": "f0f44260",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1340,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1339,
												"name": "onlyOwner",
												"nameLocations": [
													"4565:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4565:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4565:9:6"
										}
									],
									"name": "setTreasury",
									"nameLocation": "4525:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "4545:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "4537:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:19:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4575:0:6"
									},
									"scope": 1473,
									"src": "4516:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "4761:90:6",
										"statements": [
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4771:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1359,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4788:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4771:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "4771:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1363,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "4834:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1362,
														"name": "ProfitTreasuryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "4812:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4812:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "EmitStatement",
												"src": "4807:37:6"
											}
										]
									},
									"functionSelector": "0f7e730b",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1355,
												"name": "onlyOwner",
												"nameLocations": [
													"4751:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4751:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4751:9:6"
										}
									],
									"name": "setProfitTreasury",
									"nameLocation": "4705:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "4731:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4723:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4722:19:6"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4761:0:6"
									},
									"scope": 1473,
									"src": "4696:155:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "4964:158:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1375,
																"name": "newThreshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "4982:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4997:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4982:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468726573686f6c64206d757374206265203e2030",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5000:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1",
																"typeString": "literal_string \"Threshold must be > 0\""
															},
															"value": "Threshold must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d01af2dfc1d0ecdd818671df74d0d259b39ccb806d0b690b3780b651c87eebb1",
																"typeString": "literal_string \"Threshold must be > 0\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4974:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4974:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "4974:50:6"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1381,
														"name": "profitThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1382,
														"name": "newThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "5052:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5034:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "5034:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1386,
															"name": "newThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "5102:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1385,
														"name": "ProfitThresholdUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "5079:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5079:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "EmitStatement",
												"src": "5074:41:6"
											}
										]
									},
									"functionSelector": "28821182",
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1372,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1371,
												"name": "onlyOwner",
												"nameLocations": [
													"4954:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4954:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4954:9:6"
										}
									],
									"name": "setProfitThreshold",
									"nameLocation": "4904:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "newThreshold",
												"nameLocation": "4931:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4923:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4922:22:6"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4964:0:6"
									},
									"scope": 1473,
									"src": "4895:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "5242:227:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1396,
																"name": "accumulatedProfit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "5260:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5280:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5260:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2070726f66697420746f207769746864726177",
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5283:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd",
																"typeString": "literal_string \"No profit to withdraw\""
															},
															"value": "No profit to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f195bcbcfd7aa6d69ef694883d92e614da7db7bda29cd7586161cfe21f6c4cdd",
																"typeString": "literal_string \"No profit to withdraw\""
															}
														],
														"id": 1395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5252:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5252:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "5252:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1403,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "5327:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "5337:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "accumulatedProfit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5353:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1402,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5317:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5317:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "5317:54:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1409,
															"name": "accumulatedProfit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5413:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1408,
														"name": "AccumulatedProfitWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "5386:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5386:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "EmitStatement",
												"src": "5381:50:6"
											},
											{
												"expression": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1412,
														"name": "accumulatedProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "5441:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5461:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5441:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "5441:21:6"
											}
										]
									},
									"functionSelector": "ff90b54d",
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1392,
												"name": "onlyOwner",
												"nameLocations": [
													"5232:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5232:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5232:9:6"
										}
									],
									"name": "withdrawAccumulatedProfit",
									"nameLocation": "5195:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5220:2:6"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5242:0:6"
									},
									"scope": 1473,
									"src": "5186:283:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "5919:372:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1442,
															"name": "buyRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "5950:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1443,
															"name": "sellRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "5971:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1444,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "5993:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6015:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1447,
																	"name": "treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "6053:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1446,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "6043:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6043:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1450,
																	"name": "profitTreasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6086:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1449,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "6076:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1455,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6133:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMMER_$1473",
																				"typeString": "contract STEMMER"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMMER_$1473",
																				"typeString": "contract STEMMER"
																			}
																		],
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6125:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1453,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6125:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6125:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1452,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "6115:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6115:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1462,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6181:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMMER_$1473",
																				"typeString": "contract STEMMER"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMMER_$1473",
																				"typeString": "contract STEMMER"
																			}
																		],
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6173:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1460,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6173:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6173:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1458,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "6153:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6163:9:6",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 834,
																"src": "6153:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6153:34:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1465,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "6201:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6201:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1467,
															"name": "accumulatedProfit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6228:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1468,
															"name": "profitThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "6259:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1469,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5936:348:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1441,
												"id": 1470,
												"nodeType": "Return",
												"src": "5929:355:6"
											}
										]
									},
									"functionSelector": "c3f909d4",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConfig",
									"nameLocation": "5516:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5525:2:6"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "_buyRate",
												"nameLocation": "5568:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5560:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "_sellRate",
												"nameLocation": "5594:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5586:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5586:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "5621:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5613:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_profitTreasury",
												"nameLocation": "5648:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5640:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "treasuryStemBalance",
												"nameLocation": "5681:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5673:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5673:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "profitStemBalance",
												"nameLocation": "5718:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5710:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "contractStemBalance",
												"nameLocation": "5753:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5745:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "contractUsdtBalance",
												"nameLocation": "5790:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5782:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5782:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "totalStemSupply",
												"nameLocation": "5827:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5819:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_accumulatedProfit",
												"nameLocation": "5860:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5852:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5852:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "_profitThreshold",
												"nameLocation": "5896:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5888:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5888:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5550:368:6"
									},
									"scope": 1473,
									"src": "5507:784:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1474,
							"src": "237:6056:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								967,
								977,
								983,
								989,
								993,
								997,
								1001,
								1005,
								1011,
								1015,
								1019
							]
						}
					],
					"src": "32:6262:6"
				},
				"id": 6
			}
		}
	}
}