{
	"id": "ada620754096c63722b1636f58055df9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/STEMToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // For USDT\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract STEMToken is ERC20, Ownable {\n\n    IERC20 public usdtToken;\n\n    uint256 public buyRate = 1e18;      // Fixed: 1 USDT = 1 STEM\n    uint256 public sellRate = 1e18;              // Dynamic: ‚â• 1 STEM per USDT\n\n    address public treasury = 0xfE09E35DfadF080A768f41df13e06629F5E80Eb9;\n    address public profitTreasury = 0xeACa0253B95730F2ae2755Af09083d69840A683C;               // üí∏ New: profit wallet\n\n    // üì¢ Events\n    event BuyStem(address indexed buyer, uint256 usdtAmount, uint256 stemAmount);\n    event SellStem(address indexed seller, uint256 stemAmount, uint256 usdtAmount, uint256 profitStems);\n    event Minted(address indexed to, uint256 amount);\n    event Burned(address indexed from, uint256 amount);\n    event SellRateUpdated(uint256 newSellRate);\n    event BuyRateUpdated(uint256 newBuyRate);\n    event TreasuryChanged(address indexed newTreasury);\n    event ProfitTreasuryChanged(address indexed newProfitTreasury);\n    event USDTWithdrawn(address indexed to, uint256 amount);\n\n    constructor(address _usdtTokenAddress, uint256 initialSupply) ERC20(\"STEM Token\", \"STEM\") Ownable(msg.sender) {\n        usdtToken = IERC20(_usdtTokenAddress);\n        _mint(treasury, initialSupply * 1e18);\n    }\n\n    // üîÅ Buy STEM with USDT (always 1 USDT = 1 STEM)\n    function buyStem(uint256 usdtAmount) external {\n        require(usdtAmount > 0, \"Amount must be greater than 0\");\n\n        uint256 stemAmount = usdtAmount * 1e18;\n        require(usdtToken.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\");\n\n        _transfer(treasury, msg.sender, stemAmount);\n        emit BuyStem(msg.sender, usdtAmount, stemAmount);\n    }\n\n    // üîÅ Sell STEM for USDT\n    function sellStem(uint256 stemAmount) external {\n        require(stemAmount > 0, \"Amount must be greater than 0\");\n\n        // Calculate USDT payout based on sellRate\n        uint256 usdtAmount = (stemAmount * 1e18) / sellRate;\n\n        // Calculate expected STEM if sellRate = 1.0 (i.e. user should have received more USDT)\n        uint256 fairUsdtAmount = stemAmount / 1e18;\n        uint256 expectedStems = fairUsdtAmount * sellRate;\n        uint256 profitStems = expectedStems > stemAmount ? expectedStems - stemAmount : 0;\n\n        // Transfer user‚Äôs STEMs to treasury, and send profitStems to profit wallet\n        _transfer(msg.sender, treasury, stemAmount);\n        if (profitStems > 0 && profitTreasury != address(0)) {\n            _transfer(treasury, profitTreasury, profitStems);\n        }\n\n        require(usdtToken.transfer(msg.sender, usdtAmount), \"USDT payout failed\");\n        emit SellStem(msg.sender, stemAmount, usdtAmount, profitStems);\n    }\n\n    // üß† Admin: Mint STEM\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount * 1e18);\n        emit Minted(to, amount);\n    }\n\n    // üßπ Admin: Burn STEM\n    function burn(address from, uint256 amount) external onlyOwner {\n        _burn(from, amount * 1e18);\n        emit Burned(from, amount);\n    }\n\n   // ‚öôÔ∏è Admin: Change STEM buy rate\n    function setBuyRate(uint256 newRate) external onlyOwner {\n        require(newRate >= 1e18, \"Buy rate must be >= 1 STEM\");\n        require(newRate <= sellRate, \"Buy rate must be <= Sell rate\");\n        buyRate = newRate;\n        emit BuyRateUpdated(newRate);\n    }\n\n\n    // ‚öôÔ∏è Admin: Set Sell Rate (can be >= 1 STEM = 1 USDT)\n    function setSellRate(uint256 newRate) external onlyOwner {\n        require(newRate >= 1e18, unicode\"Sell rate must be ‚â• 1 STEM per USDT\");\n        sellRate = newRate;\n        emit SellRateUpdated(newRate);\n    }\n\n    // üè¶ Admin: Withdraw USDT\n    function withdrawUSDT(address to, uint256 amount) external onlyOwner {\n        require(usdtToken.transfer(to, amount), \"Withdraw failed\");\n        emit USDTWithdrawn(to, amount);\n    }\n\n    // üè¶ Admin: Set main treasury (holding STEM)\n    function setTreasury(address _treasury) external onlyOwner {\n        treasury = _treasury;\n        emit TreasuryChanged(_treasury);\n    }\n\n    // üè¶ Admin: Set USDT profit receiver\n    function setProfitTreasury(address _treasury) external onlyOwner {\n        profitTreasury = _treasury;\n        emit ProfitTreasuryChanged(_treasury);\n    }\n\n    // Optional frontend helper\n    function getConfig() external view returns (\n        uint256 _buyRate,\n        uint256 _sellRate,\n        address _treasury,\n        address _profitTreasury,\n        uint256 treasuryStemBalance,\n        uint256 profitStemBalance,\n        uint256 contractStemBalance,\n        uint256 contractUsdtBalance,\n        uint256 totalStemSupply\n        ) {\n            return (\n                buyRate,\n                sellRate,\n                treasury,\n                profitTreasury,\n                balanceOf(treasury),\n                balanceOf(profitTreasury),\n                balanceOf(address(this)),\n                usdtToken.balanceOf(address(this)),\n                totalSupply()\n            );\n        }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`‚Äôs `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`‚Äôs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`‚Äôs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`‚Äôs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`‚Äôs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`‚Äôs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`‚Äôs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/STEMToken.sol": {
				"STEMToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBuyRate",
									"type": "uint256"
								}
							],
							"name": "BuyRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								}
							],
							"name": "BuyStem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newProfitTreasury",
									"type": "address"
								}
							],
							"name": "ProfitTreasuryChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSellRate",
									"type": "uint256"
								}
							],
							"name": "SellRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profitStems",
									"type": "uint256"
								}
							],
							"name": "SellStem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "USDTWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								}
							],
							"name": "buyStem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getConfig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_buyRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_profitTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "treasuryStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "profitStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractStemBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractUsdtBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStemSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stemAmount",
									"type": "uint256"
								}
							],
							"name": "sellStem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setBuyRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setProfitTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setSellRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`‚Äôs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/STEMToken.sol\":237:5216  contract STEMToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/STEMToken.sol\":336:340  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMToken.sol\":311:340  uint256 public buyRate = 1e18 */\n  0x07\n  sstore\n    /* \"contracts/STEMToken.sol\":403:407  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMToken.sol\":377:407  uint256 public sellRate = 1e18 */\n  0x08\n  sstore\n    /* \"contracts/STEMToken.sol\":485:527  0xfE09E35DfadF080A768f41df13e06629F5E80Eb9 */\n  0xfe09e35dfadf080a768f41df13e06629f5e80eb9\n    /* \"contracts/STEMToken.sol\":459:527  address public treasury = 0xfE09E35DfadF080A768f41df13e06629F5E80Eb9 */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMToken.sol\":565:607  0xeACa0253B95730F2ae2755Af09083d69840A683C */\n  0xeaca0253b95730f2ae2755af09083d69840a683c\n    /* \"contracts/STEMToken.sol\":533:607  address public profitTreasury = 0xeACa0253B95730F2ae2755Af09083d69840A683C */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMToken.sol\":1251:1462  constructor(address _usdtTokenAddress, uint256 initialSupply) ERC20(\"STEM Token\", \"STEM\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/STEMToken.sol\":1349:1359  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5354454d20546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5354454d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/STEMToken.sol\":1390:1407  _usdtTokenAddress */\n  dup2\n    /* \"contracts/STEMToken.sol\":1371:1380  usdtToken */\n  0x06\n  0x00\n    /* \"contracts/STEMToken.sol\":1371:1408  usdtToken = IERC20(_usdtTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/STEMToken.sol\":1418:1455  _mint(treasury, initialSupply * 1e18) */\n  tag_18\n    /* \"contracts/STEMToken.sol\":1424:1432  treasury */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/STEMToken.sol\":1450:1454  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/STEMToken.sol\":1434:1447  initialSupply */\n  dup4\n    /* \"contracts/STEMToken.sol\":1434:1454  initialSupply * 1e18 */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/STEMToken.sol\":1418:1423  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/STEMToken.sol\":1418:1455  _mint(treasury, initialSupply * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/STEMToken.sol\":1251:1462  constructor(address _usdtTokenAddress, uint256 initialSupply) ERC20(\"STEM Token\", \"STEM\") Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/STEMToken.sol\":237:5216  contract STEMToken is ERC20, Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_44:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_45:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_79\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_44\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_46:\n    /* \"#utility.yul\":641:665   */\n  tag_81\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_82:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_47:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_84\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_48:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_49:\n    /* \"#utility.yul\":1001:1025   */\n  tag_87\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_88:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_50:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_90\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_49\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_93\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1309:1428   */\ntag_92:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_94\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_95\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_50\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_51:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_52:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_53:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_54:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_100:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_102\n  tag_53\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2425:2509   */\ntag_101:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_55:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_56:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_57:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_58:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_107\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_57\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3140:3179   */\n  tag_108\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_57\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_59:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_60:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_111\n    /* \"#utility.yul\":3446:3480   */\n  tag_112\n    /* \"#utility.yul\":3455:3479   */\n  tag_113\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_48\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3446:3480   */\n  tag_59\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3428:3481   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_61:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_62:\n    /* \"#utility.yul\":3684:3723   */\n  tag_116\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_60\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3745:3836   */\n  tag_117\n    /* \"#utility.yul\":3794:3835   */\n  tag_118\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_61\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_58\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_63:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_64:\n    /* \"#utility.yul\":4005:4037   */\n  tag_121\n  tag_63\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4046:4111   */\n  tag_122\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_62\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_65:\n    /* \"#utility.yul\":4183:4303   */\ntag_124:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_127\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_64\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_124)\ntag_126:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_66:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_130\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_55\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4534:4563   */\n  tag_131\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_56\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_132:\n    /* \"#utility.yul\":4761:4841   */\n  tag_133\n    /* \"#utility.yul\":4817:4839   */\n  tag_134\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_56\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_65\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_129:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_67:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_68:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_137\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_67\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_69:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_139\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_68\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_141\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_51\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_143\n  tag_52\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5666:5722   */\ntag_142:\n    /* \"#utility.yul\":5746:5784   */\n  tag_144\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_54\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5831:5898   */\n  tag_145\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_66\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_147\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_148:\n    /* \"#utility.yul\":6772:6839   */\n  tag_149\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_69\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_146)\n    /* \"#utility.yul\":5993:6611   */\ntag_147:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_150\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_55\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_151:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_155\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_68\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_154:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_146:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_70:\n    /* \"#utility.yul\":6949:6973   */\n  tag_157\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_45\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_159\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_70\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7394   */\ntag_71:\n    /* \"#utility.yul\":7262:7339   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7340   */\n  mstore\n    /* \"#utility.yul\":7359:7363   */\n  0x11\n    /* \"#utility.yul\":7356:7357   */\n  0x04\n    /* \"#utility.yul\":7349:7364   */\n  mstore\n    /* \"#utility.yul\":7383:7387   */\n  0x24\n    /* \"#utility.yul\":7380:7381   */\n  0x00\n    /* \"#utility.yul\":7373:7388   */\n  revert\n    /* \"#utility.yul\":7400:7810   */\ntag_20:\n    /* \"#utility.yul\":7440:7447   */\n  0x00\n    /* \"#utility.yul\":7463:7483   */\n  tag_162\n    /* \"#utility.yul\":7481:7482   */\n  dup3\n    /* \"#utility.yul\":7463:7483   */\n  tag_48\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7458:7483   */\n  swap2\n  pop\n    /* \"#utility.yul\":7497:7517   */\n  tag_163\n    /* \"#utility.yul\":7515:7516   */\n  dup4\n    /* \"#utility.yul\":7497:7517   */\n  tag_48\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7492:7517   */\n  swap3\n  pop\n    /* \"#utility.yul\":7552:7553   */\n  dup3\n    /* \"#utility.yul\":7549:7550   */\n  dup3\n    /* \"#utility.yul\":7545:7554   */\n  mul\n    /* \"#utility.yul\":7574:7604   */\n  tag_164\n    /* \"#utility.yul\":7592:7603   */\n  dup2\n    /* \"#utility.yul\":7574:7604   */\n  tag_48\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7563:7604   */\n  swap2\n  pop\n    /* \"#utility.yul\":7753:7754   */\n  dup3\n    /* \"#utility.yul\":7744:7751   */\n  dup3\n    /* \"#utility.yul\":7740:7755   */\n  div\n    /* \"#utility.yul\":7737:7738   */\n  dup5\n    /* \"#utility.yul\":7734:7756   */\n  eq\n    /* \"#utility.yul\":7714:7715   */\n  dup4\n    /* \"#utility.yul\":7707:7716   */\n  iszero\n    /* \"#utility.yul\":7687:7770   */\n  or\n    /* \"#utility.yul\":7664:7803   */\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7783:7801   */\n  tag_166\n  tag_71\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7664:7803   */\ntag_165:\n    /* \"#utility.yul\":7448:7810   */\n  pop\n    /* \"#utility.yul\":7400:7810   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7816:8007   */\ntag_32:\n    /* \"#utility.yul\":7856:7859   */\n  0x00\n    /* \"#utility.yul\":7875:7895   */\n  tag_168\n    /* \"#utility.yul\":7893:7894   */\n  dup3\n    /* \"#utility.yul\":7875:7895   */\n  tag_48\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7870:7895   */\n  swap2\n  pop\n    /* \"#utility.yul\":7909:7929   */\n  tag_169\n    /* \"#utility.yul\":7927:7928   */\n  dup4\n    /* \"#utility.yul\":7909:7929   */\n  tag_48\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7904:7929   */\n  swap3\n  pop\n    /* \"#utility.yul\":7952:7953   */\n  dup3\n    /* \"#utility.yul\":7949:7950   */\n  dup3\n    /* \"#utility.yul\":7945:7954   */\n  add\n    /* \"#utility.yul\":7938:7954   */\n  swap1\n  pop\n    /* \"#utility.yul\":7973:7976   */\n  dup1\n    /* \"#utility.yul\":7970:7971   */\n  dup3\n    /* \"#utility.yul\":7967:7977   */\n  gt\n    /* \"#utility.yul\":7964:8000   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7980:7998   */\n  tag_171\n  tag_71\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7964:8000   */\ntag_170:\n    /* \"#utility.yul\":7816:8007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8013:8131   */\ntag_72:\n    /* \"#utility.yul\":8100:8124   */\n  tag_173\n    /* \"#utility.yul\":8118:8123   */\n  dup2\n    /* \"#utility.yul\":8100:8124   */\n  tag_48\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8095:8098   */\n  dup3\n    /* \"#utility.yul\":8088:8125   */\n  mstore\n    /* \"#utility.yul\":8013:8131   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8137:8579   */\ntag_36:\n    /* \"#utility.yul\":8286:8290   */\n  0x00\n    /* \"#utility.yul\":8324:8326   */\n  0x60\n    /* \"#utility.yul\":8313:8322   */\n  dup3\n    /* \"#utility.yul\":8309:8327   */\n  add\n    /* \"#utility.yul\":8301:8327   */\n  swap1\n  pop\n    /* \"#utility.yul\":8337:8408   */\n  tag_175\n    /* \"#utility.yul\":8405:8406   */\n  0x00\n    /* \"#utility.yul\":8394:8403   */\n  dup4\n    /* \"#utility.yul\":8390:8407   */\n  add\n    /* \"#utility.yul\":8381:8387   */\n  dup7\n    /* \"#utility.yul\":8337:8408   */\n  tag_70\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8418:8490   */\n  tag_176\n    /* \"#utility.yul\":8486:8488   */\n  0x20\n    /* \"#utility.yul\":8475:8484   */\n  dup4\n    /* \"#utility.yul\":8471:8489   */\n  add\n    /* \"#utility.yul\":8462:8468   */\n  dup6\n    /* \"#utility.yul\":8418:8490   */\n  tag_72\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8500:8572   */\n  tag_177\n    /* \"#utility.yul\":8568:8570   */\n  0x40\n    /* \"#utility.yul\":8557:8566   */\n  dup4\n    /* \"#utility.yul\":8553:8571   */\n  add\n    /* \"#utility.yul\":8544:8550   */\n  dup5\n    /* \"#utility.yul\":8500:8572   */\n  tag_72\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8137:8579   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8585:8807   */\ntag_40:\n    /* \"#utility.yul\":8678:8682   */\n  0x00\n    /* \"#utility.yul\":8716:8718   */\n  0x20\n    /* \"#utility.yul\":8705:8714   */\n  dup3\n    /* \"#utility.yul\":8701:8719   */\n  add\n    /* \"#utility.yul\":8693:8719   */\n  swap1\n  pop\n    /* \"#utility.yul\":8729:8800   */\n  tag_179\n    /* \"#utility.yul\":8797:8798   */\n  0x00\n    /* \"#utility.yul\":8786:8795   */\n  dup4\n    /* \"#utility.yul\":8782:8799   */\n  add\n    /* \"#utility.yul\":8773:8779   */\n  dup5\n    /* \"#utility.yul\":8729:8800   */\n  tag_72\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8585:8807   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/STEMToken.sol\":237:5216  contract STEMToken is ERC20, Ownable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/STEMToken.sol\":237:5216  contract STEMToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85e436bf\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xbb285554\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xf0f44260\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf203787c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfc37987b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xbb285554\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc3f909d4\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x95d89b41\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x85e436bf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8e0b017d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x313ce567\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x61d027b3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6217229b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5d91e3f8\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0f7e730b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1481794e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":4315:4470  function setProfitTreasury(address _treasury) external onlyOwner {... */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/STEMToken.sol\":3886:4070  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":2943:3078  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/STEMToken.sol\":1945:2908  function sellStem(uint256 stemAmount) external {... */\n    tag_11:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/STEMToken.sol\":459:527  address public treasury = 0xfE09E35DfadF080A768f41df13e06629F5E80Eb9 */\n    tag_12:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":377:407  uint256 public sellRate = 1e18 */\n    tag_13:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/STEMToken.sol\":3301:3564  function setBuyRate(uint256 newRate) external onlyOwner {... */\n    tag_16:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":3634:3847  function setSellRate(uint256 newRate) external onlyOwner {... */\n    tag_18:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":3113:3254  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_20:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":281:304  IERC20 public usdtToken */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":1524:1908  function buyStem(uint256 usdtAmount) external {... */\n    tag_23:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/STEMToken.sol\":4508:5214  function getConfig() external view returns (... */\n    tag_24:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/STEMToken.sol\":4128:4265  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_26:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/STEMToken.sol\":533:607  address public profitTreasury = 0xeACa0253B95730F2ae2755Af09083d69840A683C */\n    tag_27:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"contracts/STEMToken.sol\":311:340  uint256 public buyRate = 1e18 */\n    tag_29:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_135\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":4315:4470  function setProfitTreasury(address _treasury) external onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/STEMToken.sol\":4407:4416  _treasury */\n      dup1\n        /* \"contracts/STEMToken.sol\":4390:4404  profitTreasury */\n      0x0a\n      0x00\n        /* \"contracts/STEMToken.sol\":4390:4416  profitTreasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMToken.sol\":4453:4462  _treasury */\n      dup1\n        /* \"contracts/STEMToken.sol\":4431:4463  ProfitTreasuryChanged(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":4315:4470  function setProfitTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":3886:4070  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/STEMToken.sol\":3973:3982  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":3973:3991  usdtToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/STEMToken.sol\":3992:3994  to */\n      dup4\n        /* \"contracts/STEMToken.sol\":3996:4002  amount */\n      dup4\n        /* \"contracts/STEMToken.sol\":3973:4003  usdtToken.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/STEMToken.sol\":3965:4023  require(usdtToken.transfer(to, amount), \"Withdraw failed\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/STEMToken.sol\":4052:4054  to */\n      dup2\n        /* \"contracts/STEMToken.sol\":4038:4063  USDTWithdrawn(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b\n        /* \"contracts/STEMToken.sol\":4056:4062  amount */\n      dup3\n        /* \"contracts/STEMToken.sol\":4038:4063  USDTWithdrawn(to, amount) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":3886:4070  function withdrawUSDT(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":2943:3078  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/STEMToken.sol\":3014:3038  _mint(to, amount * 1e18) */\n      tag_173\n        /* \"contracts/STEMToken.sol\":3020:3022  to */\n      dup3\n        /* \"contracts/STEMToken.sol\":3033:3037  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":3024:3030  amount */\n      dup4\n        /* \"contracts/STEMToken.sol\":3024:3037  amount * 1e18 */\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"contracts/STEMToken.sol\":3014:3019  _mint */\n      tag_176\n        /* \"contracts/STEMToken.sol\":3014:3038  _mint(to, amount * 1e18) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/STEMToken.sol\":3060:3062  to */\n      dup2\n        /* \"contracts/STEMToken.sol\":3053:3071  Minted(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/STEMToken.sol\":3064:3070  amount */\n      dup3\n        /* \"contracts/STEMToken.sol\":3053:3071  Minted(to, amount) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":2943:3078  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":1945:2908  function sellStem(uint256 stemAmount) external {... */\n    tag_72:\n        /* \"contracts/STEMToken.sol\":2023:2024  0 */\n      0x00\n        /* \"contracts/STEMToken.sol\":2010:2020  stemAmount */\n      dup2\n        /* \"contracts/STEMToken.sol\":2010:2024  stemAmount > 0 */\n      gt\n        /* \"contracts/STEMToken.sol\":2002:2058  require(stemAmount > 0, \"Amount must be greater than 0\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/STEMToken.sol\":2120:2138  uint256 usdtAmount */\n      0x00\n        /* \"contracts/STEMToken.sol\":2163:2171  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMToken.sol\":2155:2159  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":2142:2152  stemAmount */\n      dup4\n        /* \"contracts/STEMToken.sol\":2142:2159  stemAmount * 1e18 */\n      tag_182\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_182:\n        /* \"contracts/STEMToken.sol\":2141:2171  (stemAmount * 1e18) / sellRate */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/STEMToken.sol\":2120:2171  uint256 usdtAmount = (stemAmount * 1e18) / sellRate */\n      swap1\n      pop\n        /* \"contracts/STEMToken.sol\":2278:2300  uint256 fairUsdtAmount */\n      0x00\n        /* \"contracts/STEMToken.sol\":2316:2320  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":2303:2313  stemAmount */\n      dup4\n        /* \"contracts/STEMToken.sol\":2303:2320  stemAmount / 1e18 */\n      tag_185\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_185:\n        /* \"contracts/STEMToken.sol\":2278:2320  uint256 fairUsdtAmount = stemAmount / 1e18 */\n      swap1\n      pop\n        /* \"contracts/STEMToken.sol\":2330:2351  uint256 expectedStems */\n      0x00\n        /* \"contracts/STEMToken.sol\":2371:2379  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMToken.sol\":2354:2368  fairUsdtAmount */\n      dup3\n        /* \"contracts/STEMToken.sol\":2354:2379  fairUsdtAmount * sellRate */\n      tag_186\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_186:\n        /* \"contracts/STEMToken.sol\":2330:2379  uint256 expectedStems = fairUsdtAmount * sellRate */\n      swap1\n      pop\n        /* \"contracts/STEMToken.sol\":2389:2408  uint256 profitStems */\n      0x00\n        /* \"contracts/STEMToken.sol\":2427:2437  stemAmount */\n      dup5\n        /* \"contracts/STEMToken.sol\":2411:2424  expectedStems */\n      dup3\n        /* \"contracts/STEMToken.sol\":2411:2437  expectedStems > stemAmount */\n      gt\n        /* \"contracts/STEMToken.sol\":2411:2470  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      tag_187\n      jumpi\n        /* \"contracts/STEMToken.sol\":2469:2470  0 */\n      0x00\n        /* \"contracts/STEMToken.sol\":2411:2470  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      jump(tag_188)\n    tag_187:\n        /* \"contracts/STEMToken.sol\":2456:2466  stemAmount */\n      dup5\n        /* \"contracts/STEMToken.sol\":2440:2453  expectedStems */\n      dup3\n        /* \"contracts/STEMToken.sol\":2440:2466  expectedStems - stemAmount */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/STEMToken.sol\":2411:2470  expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n    tag_188:\n        /* \"contracts/STEMToken.sol\":2389:2470  uint256 profitStems = expectedStems > stemAmount ? expectedStems - stemAmount : 0 */\n      swap1\n      pop\n        /* \"contracts/STEMToken.sol\":2567:2610  _transfer(msg.sender, treasury, stemAmount) */\n      tag_191\n        /* \"contracts/STEMToken.sol\":2577:2587  msg.sender */\n      caller\n        /* \"contracts/STEMToken.sol\":2589:2597  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":2599:2609  stemAmount */\n      dup8\n        /* \"contracts/STEMToken.sol\":2567:2576  _transfer */\n      tag_168\n        /* \"contracts/STEMToken.sol\":2567:2610  _transfer(msg.sender, treasury, stemAmount) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/STEMToken.sol\":2638:2639  0 */\n      0x00\n        /* \"contracts/STEMToken.sol\":2624:2635  profitStems */\n      dup2\n        /* \"contracts/STEMToken.sol\":2624:2639  profitStems > 0 */\n      gt\n        /* \"contracts/STEMToken.sol\":2624:2671  profitStems > 0 && profitTreasury != address(0) */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/STEMToken.sol\":2669:2670  0 */\n      0x00\n        /* \"contracts/STEMToken.sol\":2643:2671  profitTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":2643:2657  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":2643:2671  profitTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/STEMToken.sol\":2624:2671  profitStems > 0 && profitTreasury != address(0) */\n    tag_192:\n        /* \"contracts/STEMToken.sol\":2620:2746  if (profitStems > 0 && profitTreasury != address(0)) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/STEMToken.sol\":2687:2735  _transfer(treasury, profitTreasury, profitStems) */\n      tag_194\n        /* \"contracts/STEMToken.sol\":2697:2705  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":2707:2721  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":2723:2734  profitStems */\n      dup4\n        /* \"contracts/STEMToken.sol\":2687:2696  _transfer */\n      tag_168\n        /* \"contracts/STEMToken.sol\":2687:2735  _transfer(treasury, profitTreasury, profitStems) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/STEMToken.sol\":2620:2746  if (profitStems > 0 && profitTreasury != address(0)) {... */\n    tag_193:\n        /* \"contracts/STEMToken.sol\":2764:2773  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":2764:2782  usdtToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/STEMToken.sol\":2783:2793  msg.sender */\n      caller\n        /* \"contracts/STEMToken.sol\":2795:2805  usdtAmount */\n      dup7\n        /* \"contracts/STEMToken.sol\":2764:2806  usdtToken.transfer(msg.sender, usdtAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_198:\n        /* \"contracts/STEMToken.sol\":2756:2829  require(usdtToken.transfer(msg.sender, usdtAmount), \"USDT payout failed\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/STEMToken.sol\":2853:2863  msg.sender */\n      caller\n        /* \"contracts/STEMToken.sol\":2844:2901  SellStem(msg.sender, stemAmount, usdtAmount, profitStems) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420\n        /* \"contracts/STEMToken.sol\":2865:2875  stemAmount */\n      dup7\n        /* \"contracts/STEMToken.sol\":2877:2887  usdtAmount */\n      dup7\n        /* \"contracts/STEMToken.sol\":2889:2900  profitStems */\n      dup5\n        /* \"contracts/STEMToken.sol\":2844:2901  SellStem(msg.sender, stemAmount, usdtAmount, profitStems) */\n      mload(0x40)\n      tag_202\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":1992:2908  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/STEMToken.sol\":1945:2908  function sellStem(uint256 stemAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":459:527  address public treasury = 0xfE09E35DfadF080A768f41df13e06629F5E80Eb9 */\n    tag_74:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":377:407  uint256 public sellRate = 1e18 */\n    tag_78:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":3301:3564  function setBuyRate(uint256 newRate) external onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/STEMToken.sol\":3386:3390  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":3375:3382  newRate */\n      dup2\n        /* \"contracts/STEMToken.sol\":3375:3390  newRate >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/STEMToken.sol\":3367:3421  require(newRate >= 1e18, \"Buy rate must be >= 1 STEM\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/STEMToken.sol\":3450:3458  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMToken.sol\":3439:3446  newRate */\n      dup2\n        /* \"contracts/STEMToken.sol\":3439:3458  newRate <= sellRate */\n      gt\n      iszero\n        /* \"contracts/STEMToken.sol\":3431:3492  require(newRate <= sellRate, \"Buy rate must be <= Sell rate\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/STEMToken.sol\":3512:3519  newRate */\n      dup1\n        /* \"contracts/STEMToken.sol\":3502:3509  buyRate */\n      0x07\n        /* \"contracts/STEMToken.sol\":3502:3519  buyRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMToken.sol\":3534:3557  BuyRateUpdated(newRate) */\n      0xedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb1\n        /* \"contracts/STEMToken.sol\":3549:3556  newRate */\n      dup2\n        /* \"contracts/STEMToken.sol\":3534:3557  BuyRateUpdated(newRate) */\n      mload(0x40)\n      tag_219\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMToken.sol\":3301:3564  function setBuyRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":3634:3847  function setSellRate(uint256 newRate) external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/STEMToken.sol\":3720:3724  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":3709:3716  newRate */\n      dup2\n        /* \"contracts/STEMToken.sol\":3709:3724  newRate >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/STEMToken.sol\":3701:3773  require(newRate >= 1e18, unicode\"Sell rate must be ‚â• 1 STEM per USDT\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/STEMToken.sol\":3794:3801  newRate */\n      dup1\n        /* \"contracts/STEMToken.sol\":3783:3791  sellRate */\n      0x08\n        /* \"contracts/STEMToken.sol\":3783:3801  sellRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMToken.sol\":3816:3840  SellRateUpdated(newRate) */\n      0xbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab\n        /* \"contracts/STEMToken.sol\":3832:3839  newRate */\n      dup2\n        /* \"contracts/STEMToken.sol\":3816:3840  SellRateUpdated(newRate) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/STEMToken.sol\":3634:3847  function setSellRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_229\n      swap1\n      tag_135\n      jump\t// in\n    tag_229:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_135\n      jump\t// in\n    tag_230:\n      dup1\n      iszero\n      tag_231\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_232\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_231)\n    tag_232:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_233:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_233\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":3113:3254  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/STEMToken.sol\":3186:3212  _burn(from, amount * 1e18) */\n      tag_237\n        /* \"contracts/STEMToken.sol\":3192:3196  from */\n      dup3\n        /* \"contracts/STEMToken.sol\":3207:3211  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":3198:3204  amount */\n      dup4\n        /* \"contracts/STEMToken.sol\":3198:3211  amount * 1e18 */\n      tag_238\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_238:\n        /* \"contracts/STEMToken.sol\":3186:3191  _burn */\n      tag_239\n        /* \"contracts/STEMToken.sol\":3186:3212  _burn(from, amount * 1e18) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/STEMToken.sol\":3234:3238  from */\n      dup2\n        /* \"contracts/STEMToken.sol\":3227:3247  Burned(from, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7\n        /* \"contracts/STEMToken.sol\":3240:3246  amount */\n      dup3\n        /* \"contracts/STEMToken.sol\":3227:3247  Burned(from, amount) */\n      mload(0x40)\n      tag_240\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":3113:3254  function burn(address from, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":281:304  IERC20 public usdtToken */\n    tag_106:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":1524:1908  function buyStem(uint256 usdtAmount) external {... */\n    tag_111:\n        /* \"contracts/STEMToken.sol\":1601:1602  0 */\n      0x00\n        /* \"contracts/STEMToken.sol\":1588:1598  usdtAmount */\n      dup2\n        /* \"contracts/STEMToken.sol\":1588:1602  usdtAmount > 0 */\n      gt\n        /* \"contracts/STEMToken.sol\":1580:1636  require(usdtAmount > 0, \"Amount must be greater than 0\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_181\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/STEMToken.sol\":1647:1665  uint256 stemAmount */\n      0x00\n        /* \"contracts/STEMToken.sol\":1681:1685  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/STEMToken.sol\":1668:1678  usdtAmount */\n      dup3\n        /* \"contracts/STEMToken.sol\":1668:1685  usdtAmount * 1e18 */\n      tag_247\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_247:\n        /* \"contracts/STEMToken.sol\":1647:1685  uint256 stemAmount = usdtAmount * 1e18 */\n      swap1\n      pop\n        /* \"contracts/STEMToken.sol\":1703:1712  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":1703:1725  usdtToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/STEMToken.sol\":1726:1736  msg.sender */\n      caller\n        /* \"contracts/STEMToken.sol\":1746:1750  this */\n      address\n        /* \"contracts/STEMToken.sol\":1753:1763  usdtAmount */\n      dup6\n        /* \"contracts/STEMToken.sol\":1703:1764  usdtToken.transferFrom(msg.sender, address(this), usdtAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_252:\n        /* \"contracts/STEMToken.sol\":1695:1789  require(usdtToken.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/STEMToken.sol\":1800:1843  _transfer(treasury, msg.sender, stemAmount) */\n      tag_256\n        /* \"contracts/STEMToken.sol\":1810:1818  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":1820:1830  msg.sender */\n      caller\n        /* \"contracts/STEMToken.sol\":1832:1842  stemAmount */\n      dup4\n        /* \"contracts/STEMToken.sol\":1800:1809  _transfer */\n      tag_168\n        /* \"contracts/STEMToken.sol\":1800:1843  _transfer(treasury, msg.sender, stemAmount) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/STEMToken.sol\":1866:1876  msg.sender */\n      caller\n        /* \"contracts/STEMToken.sol\":1858:1901  BuyStem(msg.sender, usdtAmount, stemAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb\n        /* \"contracts/STEMToken.sol\":1878:1888  usdtAmount */\n      dup4\n        /* \"contracts/STEMToken.sol\":1890:1900  stemAmount */\n      dup4\n        /* \"contracts/STEMToken.sol\":1858:1901  BuyStem(msg.sender, usdtAmount, stemAmount) */\n      mload(0x40)\n      tag_257\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":1570:1908  {... */\n      pop\n        /* \"contracts/STEMToken.sol\":1524:1908  function buyStem(uint256 usdtAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":4508:5214  function getConfig() external view returns (... */\n    tag_113:\n        /* \"contracts/STEMToken.sol\":4561:4577  uint256 _buyRate */\n      0x00\n        /* \"contracts/STEMToken.sol\":4587:4604  uint256 _sellRate */\n      dup1\n        /* \"contracts/STEMToken.sol\":4614:4631  address _treasury */\n      0x00\n        /* \"contracts/STEMToken.sol\":4641:4664  address _profitTreasury */\n      dup1\n        /* \"contracts/STEMToken.sol\":4674:4701  uint256 treasuryStemBalance */\n      0x00\n        /* \"contracts/STEMToken.sol\":4711:4736  uint256 profitStemBalance */\n      dup1\n        /* \"contracts/STEMToken.sol\":4746:4773  uint256 contractStemBalance */\n      0x00\n        /* \"contracts/STEMToken.sol\":4783:4810  uint256 contractUsdtBalance */\n      dup1\n        /* \"contracts/STEMToken.sol\":4820:4843  uint256 totalStemSupply */\n      0x00\n        /* \"contracts/STEMToken.sol\":4893:4900  buyRate */\n      sload(0x07)\n        /* \"contracts/STEMToken.sol\":4918:4926  sellRate */\n      sload(0x08)\n        /* \"contracts/STEMToken.sol\":4944:4952  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":4970:4984  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":5002:5021  balanceOf(treasury) */\n      tag_260\n        /* \"contracts/STEMToken.sol\":5012:5020  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":5002:5011  balanceOf */\n      tag_82\n        /* \"contracts/STEMToken.sol\":5002:5021  balanceOf(treasury) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/STEMToken.sol\":5039:5064  balanceOf(profitTreasury) */\n      tag_261\n        /* \"contracts/STEMToken.sol\":5049:5063  profitTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":5039:5048  balanceOf */\n      tag_82\n        /* \"contracts/STEMToken.sol\":5039:5064  balanceOf(profitTreasury) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/STEMToken.sol\":5082:5106  balanceOf(address(this)) */\n      tag_262\n        /* \"contracts/STEMToken.sol\":5100:5104  this */\n      address\n        /* \"contracts/STEMToken.sol\":5082:5091  balanceOf */\n      tag_82\n        /* \"contracts/STEMToken.sol\":5082:5106  balanceOf(address(this)) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/STEMToken.sol\":5124:5133  usdtToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/STEMToken.sol\":5124:5143  usdtToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/STEMToken.sol\":5152:5156  this */\n      address\n        /* \"contracts/STEMToken.sol\":5124:5158  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_263:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"contracts/STEMToken.sol\":5176:5189  totalSupply() */\n      tag_268\n        /* \"contracts/STEMToken.sol\":5176:5187  totalSupply */\n      tag_54\n        /* \"contracts/STEMToken.sol\":5176:5189  totalSupply() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/STEMToken.sol\":4868:5203  return (... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n        /* \"contracts/STEMToken.sol\":4508:5214  function getConfig() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":4128:4265  function setTreasury(address _treasury) external onlyOwner {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/STEMToken.sol\":4208:4217  _treasury */\n      dup1\n        /* \"contracts/STEMToken.sol\":4197:4205  treasury */\n      0x09\n      0x00\n        /* \"contracts/STEMToken.sol\":4197:4217  treasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/STEMToken.sol\":4248:4257  _treasury */\n      dup1\n        /* \"contracts/STEMToken.sol\":4232:4258  TreasuryChanged(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/STEMToken.sol\":4128:4265  function setTreasury(address _treasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":533:607  address public profitTreasury = 0xeACa0253B95730F2ae2755Af09083d69840A683C */\n    tag_125:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/STEMToken.sol\":311:340  uint256 public buyRate = 1e18 */\n    tag_131:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_318\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_323)\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_327)\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_328\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_329:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_330:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_331:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_332:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_333:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_381\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_329\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":711:782   */\n      tag_382\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_330\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_383\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_331\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":881:910   */\n      tag_384\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_332\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_386\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_333\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_335:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_337:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_338:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_392\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_337\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_339:\n        /* \"#utility.yul\":1876:1900   */\n      tag_394\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_338\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_395:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_340:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_397\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_339\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_341:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_342:\n        /* \"#utility.yul\":2232:2256   */\n      tag_400\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_341\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_401:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_343:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_403\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_342\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_42:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_406\n      tag_335\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2525:2644   */\n    tag_405:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_407\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_340\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_408\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_343\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_344:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_345:\n        /* \"#utility.yul\":3089:3110   */\n      tag_411\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_344\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_45:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_413\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_345\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_48:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_416\n      tag_335\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3415:3534   */\n    tag_415:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_417\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_340\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_346:\n        /* \"#utility.yul\":3761:3785   */\n      tag_419\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_341\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_56:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_421\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_346\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_59:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_424\n      tag_335\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4136:4255   */\n    tag_423:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_425\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_340\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_426\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_340\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_427\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_343\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_347:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_348:\n        /* \"#utility.yul\":4826:4848   */\n      tag_430\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_347\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_65:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_432\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_348\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_71:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_435\n      tag_335\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5157:5276   */\n    tag_434:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_436\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_343\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_349:\n        /* \"#utility.yul\":5503:5527   */\n      tag_438\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_338\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_76:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_440\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_349\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5828   */\n    tag_350:\n        /* \"#utility.yul\":5796:5799   */\n      0x00\n        /* \"#utility.yul\":5817:5822   */\n      dup2\n        /* \"#utility.yul\":5810:5822   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5834:5976   */\n    tag_351:\n        /* \"#utility.yul\":5884:5893   */\n      0x00\n        /* \"#utility.yul\":5917:5970   */\n      tag_443\n        /* \"#utility.yul\":5935:5969   */\n      tag_444\n        /* \"#utility.yul\":5944:5968   */\n      tag_445\n        /* \"#utility.yul\":5962:5967   */\n      dup5\n        /* \"#utility.yul\":5944:5968   */\n      tag_337\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5935:5969   */\n      tag_350\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5917:5970   */\n      tag_337\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5904:5970   */\n      swap1\n      pop\n        /* \"#utility.yul\":5834:5976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5982:6108   */\n    tag_352:\n        /* \"#utility.yul\":6032:6041   */\n      0x00\n        /* \"#utility.yul\":6065:6102   */\n      tag_447\n        /* \"#utility.yul\":6096:6101   */\n      dup3\n        /* \"#utility.yul\":6065:6102   */\n      tag_351\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6052:6102   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:6108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6114:6254   */\n    tag_353:\n        /* \"#utility.yul\":6178:6187   */\n      0x00\n        /* \"#utility.yul\":6211:6248   */\n      tag_449\n        /* \"#utility.yul\":6242:6247   */\n      dup3\n        /* \"#utility.yul\":6211:6248   */\n      tag_352\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6198:6248   */\n      swap1\n      pop\n        /* \"#utility.yul\":6114:6254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6260:6419   */\n    tag_354:\n        /* \"#utility.yul\":6361:6412   */\n      tag_451\n        /* \"#utility.yul\":6406:6411   */\n      dup2\n        /* \"#utility.yul\":6361:6412   */\n      tag_353\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6356:6359   */\n      dup3\n        /* \"#utility.yul\":6349:6413   */\n      mstore\n        /* \"#utility.yul\":6260:6419   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6675   */\n    tag_108:\n        /* \"#utility.yul\":6532:6536   */\n      0x00\n        /* \"#utility.yul\":6570:6572   */\n      0x20\n        /* \"#utility.yul\":6559:6568   */\n      dup3\n        /* \"#utility.yul\":6555:6573   */\n      add\n        /* \"#utility.yul\":6547:6573   */\n      swap1\n      pop\n        /* \"#utility.yul\":6583:6668   */\n      tag_453\n        /* \"#utility.yul\":6665:6666   */\n      0x00\n        /* \"#utility.yul\":6654:6663   */\n      dup4\n        /* \"#utility.yul\":6650:6667   */\n      add\n        /* \"#utility.yul\":6641:6647   */\n      dup5\n        /* \"#utility.yul\":6583:6668   */\n      tag_354\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6425:6675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6681:7789   */\n    tag_115:\n        /* \"#utility.yul\":6998:7002   */\n      0x00\n        /* \"#utility.yul\":7036:7039   */\n      0x0120\n        /* \"#utility.yul\":7025:7034   */\n      dup3\n        /* \"#utility.yul\":7021:7040   */\n      add\n        /* \"#utility.yul\":7013:7040   */\n      swap1\n      pop\n        /* \"#utility.yul\":7050:7121   */\n      tag_455\n        /* \"#utility.yul\":7118:7119   */\n      0x00\n        /* \"#utility.yul\":7107:7116   */\n      dup4\n        /* \"#utility.yul\":7103:7120   */\n      add\n        /* \"#utility.yul\":7094:7100   */\n      dup13\n        /* \"#utility.yul\":7050:7121   */\n      tag_346\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7131:7203   */\n      tag_456\n        /* \"#utility.yul\":7199:7201   */\n      0x20\n        /* \"#utility.yul\":7188:7197   */\n      dup4\n        /* \"#utility.yul\":7184:7202   */\n      add\n        /* \"#utility.yul\":7175:7181   */\n      dup12\n        /* \"#utility.yul\":7131:7203   */\n      tag_346\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":7213:7285   */\n      tag_457\n        /* \"#utility.yul\":7281:7283   */\n      0x40\n        /* \"#utility.yul\":7270:7279   */\n      dup4\n        /* \"#utility.yul\":7266:7284   */\n      add\n        /* \"#utility.yul\":7257:7263   */\n      dup11\n        /* \"#utility.yul\":7213:7285   */\n      tag_349\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7295:7367   */\n      tag_458\n        /* \"#utility.yul\":7363:7365   */\n      0x60\n        /* \"#utility.yul\":7352:7361   */\n      dup4\n        /* \"#utility.yul\":7348:7366   */\n      add\n        /* \"#utility.yul\":7339:7345   */\n      dup10\n        /* \"#utility.yul\":7295:7367   */\n      tag_349\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7377:7450   */\n      tag_459\n        /* \"#utility.yul\":7445:7448   */\n      0x80\n        /* \"#utility.yul\":7434:7443   */\n      dup4\n        /* \"#utility.yul\":7430:7449   */\n      add\n        /* \"#utility.yul\":7421:7427   */\n      dup9\n        /* \"#utility.yul\":7377:7450   */\n      tag_346\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":7460:7533   */\n      tag_460\n        /* \"#utility.yul\":7528:7531   */\n      0xa0\n        /* \"#utility.yul\":7517:7526   */\n      dup4\n        /* \"#utility.yul\":7513:7532   */\n      add\n        /* \"#utility.yul\":7504:7510   */\n      dup8\n        /* \"#utility.yul\":7460:7533   */\n      tag_346\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7543:7616   */\n      tag_461\n        /* \"#utility.yul\":7611:7614   */\n      0xc0\n        /* \"#utility.yul\":7600:7609   */\n      dup4\n        /* \"#utility.yul\":7596:7615   */\n      add\n        /* \"#utility.yul\":7587:7593   */\n      dup7\n        /* \"#utility.yul\":7543:7616   */\n      tag_346\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7626:7699   */\n      tag_462\n        /* \"#utility.yul\":7694:7697   */\n      0xe0\n        /* \"#utility.yul\":7683:7692   */\n      dup4\n        /* \"#utility.yul\":7679:7698   */\n      add\n        /* \"#utility.yul\":7670:7676   */\n      dup6\n        /* \"#utility.yul\":7626:7699   */\n      tag_346\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7709:7782   */\n      tag_463\n        /* \"#utility.yul\":7777:7780   */\n      0x0100\n        /* \"#utility.yul\":7766:7775   */\n      dup4\n        /* \"#utility.yul\":7762:7781   */\n      add\n        /* \"#utility.yul\":7753:7759   */\n      dup5\n        /* \"#utility.yul\":7709:7782   */\n      tag_346\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6681:7789   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7795:8269   */\n    tag_118:\n        /* \"#utility.yul\":7863:7869   */\n      0x00\n        /* \"#utility.yul\":7871:7877   */\n      dup1\n        /* \"#utility.yul\":7920:7922   */\n      0x40\n        /* \"#utility.yul\":7908:7917   */\n      dup4\n        /* \"#utility.yul\":7899:7906   */\n      dup6\n        /* \"#utility.yul\":7895:7918   */\n      sub\n        /* \"#utility.yul\":7891:7923   */\n      slt\n        /* \"#utility.yul\":7888:8007   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":7926:8005   */\n      tag_466\n      tag_335\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7888:8007   */\n    tag_465:\n        /* \"#utility.yul\":8046:8047   */\n      0x00\n        /* \"#utility.yul\":8071:8124   */\n      tag_467\n        /* \"#utility.yul\":8116:8123   */\n      dup6\n        /* \"#utility.yul\":8107:8113   */\n      dup3\n        /* \"#utility.yul\":8096:8105   */\n      dup7\n        /* \"#utility.yul\":8092:8114   */\n      add\n        /* \"#utility.yul\":8071:8124   */\n      tag_340\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8061:8124   */\n      swap3\n      pop\n        /* \"#utility.yul\":8017:8134   */\n      pop\n        /* \"#utility.yul\":8173:8175   */\n      0x20\n        /* \"#utility.yul\":8199:8252   */\n      tag_468\n        /* \"#utility.yul\":8244:8251   */\n      dup6\n        /* \"#utility.yul\":8235:8241   */\n      dup3\n        /* \"#utility.yul\":8224:8233   */\n      dup7\n        /* \"#utility.yul\":8220:8242   */\n      add\n        /* \"#utility.yul\":8199:8252   */\n      tag_340\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8189:8252   */\n      swap2\n      pop\n        /* \"#utility.yul\":8144:8262   */\n      pop\n        /* \"#utility.yul\":7795:8269   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8275:8455   */\n    tag_355:\n        /* \"#utility.yul\":8323:8400   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8320:8321   */\n      0x00\n        /* \"#utility.yul\":8313:8401   */\n      mstore\n        /* \"#utility.yul\":8420:8424   */\n      0x22\n        /* \"#utility.yul\":8417:8418   */\n      0x04\n        /* \"#utility.yul\":8410:8425   */\n      mstore\n        /* \"#utility.yul\":8444:8448   */\n      0x24\n        /* \"#utility.yul\":8441:8442   */\n      0x00\n        /* \"#utility.yul\":8434:8449   */\n      revert\n        /* \"#utility.yul\":8461:8781   */\n    tag_135:\n        /* \"#utility.yul\":8505:8511   */\n      0x00\n        /* \"#utility.yul\":8542:8543   */\n      0x02\n        /* \"#utility.yul\":8536:8540   */\n      dup3\n        /* \"#utility.yul\":8532:8544   */\n      div\n        /* \"#utility.yul\":8522:8544   */\n      swap1\n      pop\n        /* \"#utility.yul\":8589:8590   */\n      0x01\n        /* \"#utility.yul\":8583:8587   */\n      dup3\n        /* \"#utility.yul\":8579:8591   */\n      and\n        /* \"#utility.yul\":8610:8628   */\n      dup1\n        /* \"#utility.yul\":8600:8681   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":8666:8670   */\n      0x7f\n        /* \"#utility.yul\":8658:8664   */\n      dup3\n        /* \"#utility.yul\":8654:8671   */\n      and\n        /* \"#utility.yul\":8644:8671   */\n      swap2\n      pop\n        /* \"#utility.yul\":8600:8681   */\n    tag_471:\n        /* \"#utility.yul\":8728:8730   */\n      0x20\n        /* \"#utility.yul\":8720:8726   */\n      dup3\n        /* \"#utility.yul\":8717:8731   */\n      lt\n        /* \"#utility.yul\":8697:8715   */\n      dup2\n        /* \"#utility.yul\":8694:8732   */\n      sub\n        /* \"#utility.yul\":8691:8775   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":8747:8765   */\n      tag_473\n      tag_355\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8691:8775   */\n    tag_472:\n        /* \"#utility.yul\":8512:8781   */\n      pop\n        /* \"#utility.yul\":8461:8781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8787:9119   */\n    tag_153:\n        /* \"#utility.yul\":8908:8912   */\n      0x00\n        /* \"#utility.yul\":8946:8948   */\n      0x40\n        /* \"#utility.yul\":8935:8944   */\n      dup3\n        /* \"#utility.yul\":8931:8949   */\n      add\n        /* \"#utility.yul\":8923:8949   */\n      swap1\n      pop\n        /* \"#utility.yul\":8959:9030   */\n      tag_475\n        /* \"#utility.yul\":9027:9028   */\n      0x00\n        /* \"#utility.yul\":9016:9025   */\n      dup4\n        /* \"#utility.yul\":9012:9029   */\n      add\n        /* \"#utility.yul\":9003:9009   */\n      dup6\n        /* \"#utility.yul\":8959:9030   */\n      tag_349\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9040:9112   */\n      tag_476\n        /* \"#utility.yul\":9108:9110   */\n      0x20\n        /* \"#utility.yul\":9097:9106   */\n      dup4\n        /* \"#utility.yul\":9093:9111   */\n      add\n        /* \"#utility.yul\":9084:9090   */\n      dup5\n        /* \"#utility.yul\":9040:9112   */\n      tag_346\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8787:9119   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9125:9241   */\n    tag_356:\n        /* \"#utility.yul\":9195:9216   */\n      tag_478\n        /* \"#utility.yul\":9210:9215   */\n      dup2\n        /* \"#utility.yul\":9195:9216   */\n      tag_344\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9188:9193   */\n      dup2\n        /* \"#utility.yul\":9185:9217   */\n      eq\n        /* \"#utility.yul\":9175:9235   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":9231:9232   */\n      0x00\n        /* \"#utility.yul\":9228:9229   */\n      dup1\n        /* \"#utility.yul\":9221:9233   */\n      revert\n        /* \"#utility.yul\":9175:9235   */\n    tag_479:\n        /* \"#utility.yul\":9125:9241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9247:9384   */\n    tag_357:\n        /* \"#utility.yul\":9301:9306   */\n      0x00\n        /* \"#utility.yul\":9332:9338   */\n      dup2\n        /* \"#utility.yul\":9326:9339   */\n      mload\n        /* \"#utility.yul\":9317:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9348:9378   */\n      tag_481\n        /* \"#utility.yul\":9372:9377   */\n      dup2\n        /* \"#utility.yul\":9348:9378   */\n      tag_356\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9247:9384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9390:9735   */\n    tag_157:\n        /* \"#utility.yul\":9457:9463   */\n      0x00\n        /* \"#utility.yul\":9506:9508   */\n      0x20\n        /* \"#utility.yul\":9494:9503   */\n      dup3\n        /* \"#utility.yul\":9485:9492   */\n      dup5\n        /* \"#utility.yul\":9481:9504   */\n      sub\n        /* \"#utility.yul\":9477:9509   */\n      slt\n        /* \"#utility.yul\":9474:9593   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":9512:9591   */\n      tag_484\n      tag_335\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9474:9593   */\n    tag_483:\n        /* \"#utility.yul\":9632:9633   */\n      0x00\n        /* \"#utility.yul\":9657:9718   */\n      tag_485\n        /* \"#utility.yul\":9710:9717   */\n      dup5\n        /* \"#utility.yul\":9701:9707   */\n      dup3\n        /* \"#utility.yul\":9690:9699   */\n      dup6\n        /* \"#utility.yul\":9686:9708   */\n      add\n        /* \"#utility.yul\":9657:9718   */\n      tag_357\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9647:9718   */\n      swap2\n      pop\n        /* \"#utility.yul\":9603:9728   */\n      pop\n        /* \"#utility.yul\":9390:9735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9741:9906   */\n    tag_358:\n        /* \"#utility.yul\":9881:9898   */\n      0x5769746864726177206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":9877:9878   */\n      0x00\n        /* \"#utility.yul\":9869:9875   */\n      dup3\n        /* \"#utility.yul\":9865:9879   */\n      add\n        /* \"#utility.yul\":9858:9899   */\n      mstore\n        /* \"#utility.yul\":9741:9906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9912:10278   */\n    tag_359:\n        /* \"#utility.yul\":10054:10057   */\n      0x00\n        /* \"#utility.yul\":10075:10142   */\n      tag_488\n        /* \"#utility.yul\":10139:10141   */\n      0x0f\n        /* \"#utility.yul\":10134:10137   */\n      dup4\n        /* \"#utility.yul\":10075:10142   */\n      tag_330\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10068:10142   */\n      swap2\n      pop\n        /* \"#utility.yul\":10151:10244   */\n      tag_489\n        /* \"#utility.yul\":10240:10243   */\n      dup3\n        /* \"#utility.yul\":10151:10244   */\n      tag_358\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10269:10271   */\n      0x20\n        /* \"#utility.yul\":10264:10267   */\n      dup3\n        /* \"#utility.yul\":10260:10272   */\n      add\n        /* \"#utility.yul\":10253:10272   */\n      swap1\n      pop\n        /* \"#utility.yul\":9912:10278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10284:10703   */\n    tag_160:\n        /* \"#utility.yul\":10450:10454   */\n      0x00\n        /* \"#utility.yul\":10488:10490   */\n      0x20\n        /* \"#utility.yul\":10477:10486   */\n      dup3\n        /* \"#utility.yul\":10473:10491   */\n      add\n        /* \"#utility.yul\":10465:10491   */\n      swap1\n      pop\n        /* \"#utility.yul\":10537:10546   */\n      dup2\n        /* \"#utility.yul\":10531:10535   */\n      dup2\n        /* \"#utility.yul\":10527:10547   */\n      sub\n        /* \"#utility.yul\":10523:10524   */\n      0x00\n        /* \"#utility.yul\":10512:10521   */\n      dup4\n        /* \"#utility.yul\":10508:10525   */\n      add\n        /* \"#utility.yul\":10501:10548   */\n      mstore\n        /* \"#utility.yul\":10565:10696   */\n      tag_491\n        /* \"#utility.yul\":10691:10695   */\n      dup2\n        /* \"#utility.yul\":10565:10696   */\n      tag_359\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10557:10696   */\n      swap1\n      pop\n        /* \"#utility.yul\":10284:10703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10709:10889   */\n    tag_360:\n        /* \"#utility.yul\":10757:10834   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10754:10755   */\n      0x00\n        /* \"#utility.yul\":10747:10835   */\n      mstore\n        /* \"#utility.yul\":10854:10858   */\n      0x11\n        /* \"#utility.yul\":10851:10852   */\n      0x04\n        /* \"#utility.yul\":10844:10859   */\n      mstore\n        /* \"#utility.yul\":10878:10882   */\n      0x24\n        /* \"#utility.yul\":10875:10876   */\n      0x00\n        /* \"#utility.yul\":10868:10883   */\n      revert\n        /* \"#utility.yul\":10895:11305   */\n    tag_175:\n        /* \"#utility.yul\":10935:10942   */\n      0x00\n        /* \"#utility.yul\":10958:10978   */\n      tag_494\n        /* \"#utility.yul\":10976:10977   */\n      dup3\n        /* \"#utility.yul\":10958:10978   */\n      tag_341\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10953:10978   */\n      swap2\n      pop\n        /* \"#utility.yul\":10992:11012   */\n      tag_495\n        /* \"#utility.yul\":11010:11011   */\n      dup4\n        /* \"#utility.yul\":10992:11012   */\n      tag_341\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10987:11012   */\n      swap3\n      pop\n        /* \"#utility.yul\":11047:11048   */\n      dup3\n        /* \"#utility.yul\":11044:11045   */\n      dup3\n        /* \"#utility.yul\":11040:11049   */\n      mul\n        /* \"#utility.yul\":11069:11099   */\n      tag_496\n        /* \"#utility.yul\":11087:11098   */\n      dup2\n        /* \"#utility.yul\":11069:11099   */\n      tag_341\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11058:11099   */\n      swap2\n      pop\n        /* \"#utility.yul\":11248:11249   */\n      dup3\n        /* \"#utility.yul\":11239:11246   */\n      dup3\n        /* \"#utility.yul\":11235:11250   */\n      div\n        /* \"#utility.yul\":11232:11233   */\n      dup5\n        /* \"#utility.yul\":11229:11251   */\n      eq\n        /* \"#utility.yul\":11209:11210   */\n      dup4\n        /* \"#utility.yul\":11202:11211   */\n      iszero\n        /* \"#utility.yul\":11182:11265   */\n      or\n        /* \"#utility.yul\":11159:11298   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":11278:11296   */\n      tag_498\n      tag_360\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11159:11298   */\n    tag_497:\n        /* \"#utility.yul\":10943:11305   */\n      pop\n        /* \"#utility.yul\":10895:11305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11311:11490   */\n    tag_361:\n        /* \"#utility.yul\":11451:11482   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":11447:11448   */\n      0x00\n        /* \"#utility.yul\":11439:11445   */\n      dup3\n        /* \"#utility.yul\":11435:11449   */\n      add\n        /* \"#utility.yul\":11428:11483   */\n      mstore\n        /* \"#utility.yul\":11311:11490   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11496:11862   */\n    tag_362:\n        /* \"#utility.yul\":11638:11641   */\n      0x00\n        /* \"#utility.yul\":11659:11726   */\n      tag_501\n        /* \"#utility.yul\":11723:11725   */\n      0x1d\n        /* \"#utility.yul\":11718:11721   */\n      dup4\n        /* \"#utility.yul\":11659:11726   */\n      tag_330\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11652:11726   */\n      swap2\n      pop\n        /* \"#utility.yul\":11735:11828   */\n      tag_502\n        /* \"#utility.yul\":11824:11827   */\n      dup3\n        /* \"#utility.yul\":11735:11828   */\n      tag_361\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11848:11851   */\n      dup3\n        /* \"#utility.yul\":11844:11856   */\n      add\n        /* \"#utility.yul\":11837:11856   */\n      swap1\n      pop\n        /* \"#utility.yul\":11496:11862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11868:12287   */\n    tag_181:\n        /* \"#utility.yul\":12034:12038   */\n      0x00\n        /* \"#utility.yul\":12072:12074   */\n      0x20\n        /* \"#utility.yul\":12061:12070   */\n      dup3\n        /* \"#utility.yul\":12057:12075   */\n      add\n        /* \"#utility.yul\":12049:12075   */\n      swap1\n      pop\n        /* \"#utility.yul\":12121:12130   */\n      dup2\n        /* \"#utility.yul\":12115:12119   */\n      dup2\n        /* \"#utility.yul\":12111:12131   */\n      sub\n        /* \"#utility.yul\":12107:12108   */\n      0x00\n        /* \"#utility.yul\":12096:12105   */\n      dup4\n        /* \"#utility.yul\":12092:12109   */\n      add\n        /* \"#utility.yul\":12085:12132   */\n      mstore\n        /* \"#utility.yul\":12149:12280   */\n      tag_504\n        /* \"#utility.yul\":12275:12279   */\n      dup2\n        /* \"#utility.yul\":12149:12280   */\n      tag_362\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12141:12280   */\n      swap1\n      pop\n        /* \"#utility.yul\":11868:12287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12293:12473   */\n    tag_363:\n        /* \"#utility.yul\":12341:12418   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12338:12339   */\n      0x00\n        /* \"#utility.yul\":12331:12419   */\n      mstore\n        /* \"#utility.yul\":12438:12442   */\n      0x12\n        /* \"#utility.yul\":12435:12436   */\n      0x04\n        /* \"#utility.yul\":12428:12443   */\n      mstore\n        /* \"#utility.yul\":12462:12466   */\n      0x24\n        /* \"#utility.yul\":12459:12460   */\n      0x00\n        /* \"#utility.yul\":12452:12467   */\n      revert\n        /* \"#utility.yul\":12479:12664   */\n    tag_184:\n        /* \"#utility.yul\":12519:12520   */\n      0x00\n        /* \"#utility.yul\":12536:12556   */\n      tag_507\n        /* \"#utility.yul\":12554:12555   */\n      dup3\n        /* \"#utility.yul\":12536:12556   */\n      tag_341\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12531:12556   */\n      swap2\n      pop\n        /* \"#utility.yul\":12570:12590   */\n      tag_508\n        /* \"#utility.yul\":12588:12589   */\n      dup4\n        /* \"#utility.yul\":12570:12590   */\n      tag_341\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12565:12590   */\n      swap3\n      pop\n        /* \"#utility.yul\":12609:12610   */\n      dup3\n        /* \"#utility.yul\":12599:12634   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":12614:12632   */\n      tag_510\n      tag_363\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12599:12634   */\n    tag_509:\n        /* \"#utility.yul\":12656:12657   */\n      dup3\n        /* \"#utility.yul\":12653:12654   */\n      dup3\n        /* \"#utility.yul\":12649:12658   */\n      div\n        /* \"#utility.yul\":12644:12658   */\n      swap1\n      pop\n        /* \"#utility.yul\":12479:12664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12670:12864   */\n    tag_190:\n        /* \"#utility.yul\":12710:12714   */\n      0x00\n        /* \"#utility.yul\":12730:12750   */\n      tag_512\n        /* \"#utility.yul\":12748:12749   */\n      dup3\n        /* \"#utility.yul\":12730:12750   */\n      tag_341\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12725:12750   */\n      swap2\n      pop\n        /* \"#utility.yul\":12764:12784   */\n      tag_513\n        /* \"#utility.yul\":12782:12783   */\n      dup4\n        /* \"#utility.yul\":12764:12784   */\n      tag_341\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12759:12784   */\n      swap3\n      pop\n        /* \"#utility.yul\":12808:12809   */\n      dup3\n        /* \"#utility.yul\":12805:12806   */\n      dup3\n        /* \"#utility.yul\":12801:12810   */\n      sub\n        /* \"#utility.yul\":12793:12810   */\n      swap1\n      pop\n        /* \"#utility.yul\":12832:12833   */\n      dup2\n        /* \"#utility.yul\":12826:12830   */\n      dup2\n        /* \"#utility.yul\":12823:12834   */\n      gt\n        /* \"#utility.yul\":12820:12857   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":12837:12855   */\n      tag_515\n      tag_360\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12820:12857   */\n    tag_514:\n        /* \"#utility.yul\":12670:12864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12870:13038   */\n    tag_364:\n        /* \"#utility.yul\":13010:13030   */\n      0x55534454207061796f7574206661696c65640000000000000000000000000000\n        /* \"#utility.yul\":13006:13007   */\n      0x00\n        /* \"#utility.yul\":12998:13004   */\n      dup3\n        /* \"#utility.yul\":12994:13008   */\n      add\n        /* \"#utility.yul\":12987:13031   */\n      mstore\n        /* \"#utility.yul\":12870:13038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13044:13410   */\n    tag_365:\n        /* \"#utility.yul\":13186:13189   */\n      0x00\n        /* \"#utility.yul\":13207:13274   */\n      tag_518\n        /* \"#utility.yul\":13271:13273   */\n      0x12\n        /* \"#utility.yul\":13266:13269   */\n      dup4\n        /* \"#utility.yul\":13207:13274   */\n      tag_330\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":13200:13274   */\n      swap2\n      pop\n        /* \"#utility.yul\":13283:13376   */\n      tag_519\n        /* \"#utility.yul\":13372:13375   */\n      dup3\n        /* \"#utility.yul\":13283:13376   */\n      tag_364\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13401:13403   */\n      0x20\n        /* \"#utility.yul\":13396:13399   */\n      dup3\n        /* \"#utility.yul\":13392:13404   */\n      add\n        /* \"#utility.yul\":13385:13404   */\n      swap1\n      pop\n        /* \"#utility.yul\":13044:13410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13416:13835   */\n    tag_201:\n        /* \"#utility.yul\":13582:13586   */\n      0x00\n        /* \"#utility.yul\":13620:13622   */\n      0x20\n        /* \"#utility.yul\":13609:13618   */\n      dup3\n        /* \"#utility.yul\":13605:13623   */\n      add\n        /* \"#utility.yul\":13597:13623   */\n      swap1\n      pop\n        /* \"#utility.yul\":13669:13678   */\n      dup2\n        /* \"#utility.yul\":13663:13667   */\n      dup2\n        /* \"#utility.yul\":13659:13679   */\n      sub\n        /* \"#utility.yul\":13655:13656   */\n      0x00\n        /* \"#utility.yul\":13644:13653   */\n      dup4\n        /* \"#utility.yul\":13640:13657   */\n      add\n        /* \"#utility.yul\":13633:13680   */\n      mstore\n        /* \"#utility.yul\":13697:13828   */\n      tag_521\n        /* \"#utility.yul\":13823:13827   */\n      dup2\n        /* \"#utility.yul\":13697:13828   */\n      tag_365\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13689:13828   */\n      swap1\n      pop\n        /* \"#utility.yul\":13416:13835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13841:14283   */\n    tag_203:\n        /* \"#utility.yul\":13990:13994   */\n      0x00\n        /* \"#utility.yul\":14028:14030   */\n      0x60\n        /* \"#utility.yul\":14017:14026   */\n      dup3\n        /* \"#utility.yul\":14013:14031   */\n      add\n        /* \"#utility.yul\":14005:14031   */\n      swap1\n      pop\n        /* \"#utility.yul\":14041:14112   */\n      tag_523\n        /* \"#utility.yul\":14109:14110   */\n      0x00\n        /* \"#utility.yul\":14098:14107   */\n      dup4\n        /* \"#utility.yul\":14094:14111   */\n      add\n        /* \"#utility.yul\":14085:14091   */\n      dup7\n        /* \"#utility.yul\":14041:14112   */\n      tag_346\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14122:14194   */\n      tag_524\n        /* \"#utility.yul\":14190:14192   */\n      0x20\n        /* \"#utility.yul\":14179:14188   */\n      dup4\n        /* \"#utility.yul\":14175:14193   */\n      add\n        /* \"#utility.yul\":14166:14172   */\n      dup6\n        /* \"#utility.yul\":14122:14194   */\n      tag_346\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14204:14276   */\n      tag_525\n        /* \"#utility.yul\":14272:14274   */\n      0x40\n        /* \"#utility.yul\":14261:14270   */\n      dup4\n        /* \"#utility.yul\":14257:14275   */\n      add\n        /* \"#utility.yul\":14248:14254   */\n      dup5\n        /* \"#utility.yul\":14204:14276   */\n      tag_346\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13841:14283   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14289:14465   */\n    tag_366:\n        /* \"#utility.yul\":14429:14457   */\n      0x4275792072617465206d757374206265203e3d2031205354454d000000000000\n        /* \"#utility.yul\":14425:14426   */\n      0x00\n        /* \"#utility.yul\":14417:14423   */\n      dup3\n        /* \"#utility.yul\":14413:14427   */\n      add\n        /* \"#utility.yul\":14406:14458   */\n      mstore\n        /* \"#utility.yul\":14289:14465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14471:14837   */\n    tag_367:\n        /* \"#utility.yul\":14613:14616   */\n      0x00\n        /* \"#utility.yul\":14634:14701   */\n      tag_528\n        /* \"#utility.yul\":14698:14700   */\n      0x1a\n        /* \"#utility.yul\":14693:14696   */\n      dup4\n        /* \"#utility.yul\":14634:14701   */\n      tag_330\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14627:14701   */\n      swap2\n      pop\n        /* \"#utility.yul\":14710:14803   */\n      tag_529\n        /* \"#utility.yul\":14799:14802   */\n      dup3\n        /* \"#utility.yul\":14710:14803   */\n      tag_366\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14828:14830   */\n      0x20\n        /* \"#utility.yul\":14823:14826   */\n      dup3\n        /* \"#utility.yul\":14819:14831   */\n      add\n        /* \"#utility.yul\":14812:14831   */\n      swap1\n      pop\n        /* \"#utility.yul\":14471:14837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14843:15262   */\n    tag_215:\n        /* \"#utility.yul\":15009:15013   */\n      0x00\n        /* \"#utility.yul\":15047:15049   */\n      0x20\n        /* \"#utility.yul\":15036:15045   */\n      dup3\n        /* \"#utility.yul\":15032:15050   */\n      add\n        /* \"#utility.yul\":15024:15050   */\n      swap1\n      pop\n        /* \"#utility.yul\":15096:15105   */\n      dup2\n        /* \"#utility.yul\":15090:15094   */\n      dup2\n        /* \"#utility.yul\":15086:15106   */\n      sub\n        /* \"#utility.yul\":15082:15083   */\n      0x00\n        /* \"#utility.yul\":15071:15080   */\n      dup4\n        /* \"#utility.yul\":15067:15084   */\n      add\n        /* \"#utility.yul\":15060:15107   */\n      mstore\n        /* \"#utility.yul\":15124:15255   */\n      tag_531\n        /* \"#utility.yul\":15250:15254   */\n      dup2\n        /* \"#utility.yul\":15124:15255   */\n      tag_367\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":15116:15255   */\n      swap1\n      pop\n        /* \"#utility.yul\":14843:15262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15268:15447   */\n    tag_368:\n        /* \"#utility.yul\":15408:15439   */\n      0x4275792072617465206d757374206265203c3d2053656c6c2072617465000000\n        /* \"#utility.yul\":15404:15405   */\n      0x00\n        /* \"#utility.yul\":15396:15402   */\n      dup3\n        /* \"#utility.yul\":15392:15406   */\n      add\n        /* \"#utility.yul\":15385:15440   */\n      mstore\n        /* \"#utility.yul\":15268:15447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15453:15819   */\n    tag_369:\n        /* \"#utility.yul\":15595:15598   */\n      0x00\n        /* \"#utility.yul\":15616:15683   */\n      tag_534\n        /* \"#utility.yul\":15680:15682   */\n      0x1d\n        /* \"#utility.yul\":15675:15678   */\n      dup4\n        /* \"#utility.yul\":15616:15683   */\n      tag_330\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15609:15683   */\n      swap2\n      pop\n        /* \"#utility.yul\":15692:15785   */\n      tag_535\n        /* \"#utility.yul\":15781:15784   */\n      dup3\n        /* \"#utility.yul\":15692:15785   */\n      tag_368\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15810:15812   */\n      0x20\n        /* \"#utility.yul\":15805:15808   */\n      dup3\n        /* \"#utility.yul\":15801:15813   */\n      add\n        /* \"#utility.yul\":15794:15813   */\n      swap1\n      pop\n        /* \"#utility.yul\":15453:15819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15825:16244   */\n    tag_218:\n        /* \"#utility.yul\":15991:15995   */\n      0x00\n        /* \"#utility.yul\":16029:16031   */\n      0x20\n        /* \"#utility.yul\":16018:16027   */\n      dup3\n        /* \"#utility.yul\":16014:16032   */\n      add\n        /* \"#utility.yul\":16006:16032   */\n      swap1\n      pop\n        /* \"#utility.yul\":16078:16087   */\n      dup2\n        /* \"#utility.yul\":16072:16076   */\n      dup2\n        /* \"#utility.yul\":16068:16088   */\n      sub\n        /* \"#utility.yul\":16064:16065   */\n      0x00\n        /* \"#utility.yul\":16053:16062   */\n      dup4\n        /* \"#utility.yul\":16049:16066   */\n      add\n        /* \"#utility.yul\":16042:16089   */\n      mstore\n        /* \"#utility.yul\":16106:16237   */\n      tag_537\n        /* \"#utility.yul\":16232:16236   */\n      dup2\n        /* \"#utility.yul\":16106:16237   */\n      tag_369\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16098:16237   */\n      swap1\n      pop\n        /* \"#utility.yul\":15825:16244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16250:16506   */\n    tag_370:\n        /* \"#utility.yul\":16390:16456   */\n      0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572\n        /* \"#utility.yul\":16386:16387   */\n      0x00\n        /* \"#utility.yul\":16378:16384   */\n      dup3\n        /* \"#utility.yul\":16374:16388   */\n      add\n        /* \"#utility.yul\":16367:16457   */\n      mstore\n        /* \"#utility.yul\":16491:16498   */\n      0x2055534454000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16486:16488   */\n      0x20\n        /* \"#utility.yul\":16478:16484   */\n      dup3\n        /* \"#utility.yul\":16474:16489   */\n      add\n        /* \"#utility.yul\":16467:16499   */\n      mstore\n        /* \"#utility.yul\":16250:16506   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16512:16878   */\n    tag_371:\n        /* \"#utility.yul\":16654:16657   */\n      0x00\n        /* \"#utility.yul\":16675:16742   */\n      tag_540\n        /* \"#utility.yul\":16739:16741   */\n      0x25\n        /* \"#utility.yul\":16734:16737   */\n      dup4\n        /* \"#utility.yul\":16675:16742   */\n      tag_330\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16668:16742   */\n      swap2\n      pop\n        /* \"#utility.yul\":16751:16844   */\n      tag_541\n        /* \"#utility.yul\":16840:16843   */\n      dup3\n        /* \"#utility.yul\":16751:16844   */\n      tag_370\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16869:16871   */\n      0x40\n        /* \"#utility.yul\":16864:16867   */\n      dup3\n        /* \"#utility.yul\":16860:16872   */\n      add\n        /* \"#utility.yul\":16853:16872   */\n      swap1\n      pop\n        /* \"#utility.yul\":16512:16878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16884:17303   */\n    tag_226:\n        /* \"#utility.yul\":17050:17054   */\n      0x00\n        /* \"#utility.yul\":17088:17090   */\n      0x20\n        /* \"#utility.yul\":17077:17086   */\n      dup3\n        /* \"#utility.yul\":17073:17091   */\n      add\n        /* \"#utility.yul\":17065:17091   */\n      swap1\n      pop\n        /* \"#utility.yul\":17137:17146   */\n      dup2\n        /* \"#utility.yul\":17131:17135   */\n      dup2\n        /* \"#utility.yul\":17127:17147   */\n      sub\n        /* \"#utility.yul\":17123:17124   */\n      0x00\n        /* \"#utility.yul\":17112:17121   */\n      dup4\n        /* \"#utility.yul\":17108:17125   */\n      add\n        /* \"#utility.yul\":17101:17148   */\n      mstore\n        /* \"#utility.yul\":17165:17296   */\n      tag_543\n        /* \"#utility.yul\":17291:17295   */\n      dup2\n        /* \"#utility.yul\":17165:17296   */\n      tag_371\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17157:17296   */\n      swap1\n      pop\n        /* \"#utility.yul\":16884:17303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17309:17751   */\n    tag_249:\n        /* \"#utility.yul\":17458:17462   */\n      0x00\n        /* \"#utility.yul\":17496:17498   */\n      0x60\n        /* \"#utility.yul\":17485:17494   */\n      dup3\n        /* \"#utility.yul\":17481:17499   */\n      add\n        /* \"#utility.yul\":17473:17499   */\n      swap1\n      pop\n        /* \"#utility.yul\":17509:17580   */\n      tag_545\n        /* \"#utility.yul\":17577:17578   */\n      0x00\n        /* \"#utility.yul\":17566:17575   */\n      dup4\n        /* \"#utility.yul\":17562:17579   */\n      add\n        /* \"#utility.yul\":17553:17559   */\n      dup7\n        /* \"#utility.yul\":17509:17580   */\n      tag_349\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":17590:17662   */\n      tag_546\n        /* \"#utility.yul\":17658:17660   */\n      0x20\n        /* \"#utility.yul\":17647:17656   */\n      dup4\n        /* \"#utility.yul\":17643:17661   */\n      add\n        /* \"#utility.yul\":17634:17640   */\n      dup6\n        /* \"#utility.yul\":17590:17662   */\n      tag_349\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17672:17744   */\n      tag_547\n        /* \"#utility.yul\":17740:17742   */\n      0x40\n        /* \"#utility.yul\":17729:17738   */\n      dup4\n        /* \"#utility.yul\":17725:17743   */\n      add\n        /* \"#utility.yul\":17716:17722   */\n      dup5\n        /* \"#utility.yul\":17672:17744   */\n      tag_346\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17309:17751   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17757:17927   */\n    tag_372:\n        /* \"#utility.yul\":17897:17919   */\n      0x55534454207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":17893:17894   */\n      0x00\n        /* \"#utility.yul\":17885:17891   */\n      dup3\n        /* \"#utility.yul\":17881:17895   */\n      add\n        /* \"#utility.yul\":17874:17920   */\n      mstore\n        /* \"#utility.yul\":17757:17927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17933:18299   */\n    tag_373:\n        /* \"#utility.yul\":18075:18078   */\n      0x00\n        /* \"#utility.yul\":18096:18163   */\n      tag_550\n        /* \"#utility.yul\":18160:18162   */\n      0x14\n        /* \"#utility.yul\":18155:18158   */\n      dup4\n        /* \"#utility.yul\":18096:18163   */\n      tag_330\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":18089:18163   */\n      swap2\n      pop\n        /* \"#utility.yul\":18172:18265   */\n      tag_551\n        /* \"#utility.yul\":18261:18264   */\n      dup3\n        /* \"#utility.yul\":18172:18265   */\n      tag_372\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":18290:18292   */\n      0x20\n        /* \"#utility.yul\":18285:18288   */\n      dup3\n        /* \"#utility.yul\":18281:18293   */\n      add\n        /* \"#utility.yul\":18274:18293   */\n      swap1\n      pop\n        /* \"#utility.yul\":17933:18299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18305:18724   */\n    tag_255:\n        /* \"#utility.yul\":18471:18475   */\n      0x00\n        /* \"#utility.yul\":18509:18511   */\n      0x20\n        /* \"#utility.yul\":18498:18507   */\n      dup3\n        /* \"#utility.yul\":18494:18512   */\n      add\n        /* \"#utility.yul\":18486:18512   */\n      swap1\n      pop\n        /* \"#utility.yul\":18558:18567   */\n      dup2\n        /* \"#utility.yul\":18552:18556   */\n      dup2\n        /* \"#utility.yul\":18548:18568   */\n      sub\n        /* \"#utility.yul\":18544:18545   */\n      0x00\n        /* \"#utility.yul\":18533:18542   */\n      dup4\n        /* \"#utility.yul\":18529:18546   */\n      add\n        /* \"#utility.yul\":18522:18569   */\n      mstore\n        /* \"#utility.yul\":18586:18717   */\n      tag_553\n        /* \"#utility.yul\":18712:18716   */\n      dup2\n        /* \"#utility.yul\":18586:18717   */\n      tag_373\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18578:18717   */\n      swap1\n      pop\n        /* \"#utility.yul\":18305:18724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18730:19062   */\n    tag_258:\n        /* \"#utility.yul\":18851:18855   */\n      0x00\n        /* \"#utility.yul\":18889:18891   */\n      0x40\n        /* \"#utility.yul\":18878:18887   */\n      dup3\n        /* \"#utility.yul\":18874:18892   */\n      add\n        /* \"#utility.yul\":18866:18892   */\n      swap1\n      pop\n        /* \"#utility.yul\":18902:18973   */\n      tag_555\n        /* \"#utility.yul\":18970:18971   */\n      0x00\n        /* \"#utility.yul\":18959:18968   */\n      dup4\n        /* \"#utility.yul\":18955:18972   */\n      add\n        /* \"#utility.yul\":18946:18952   */\n      dup6\n        /* \"#utility.yul\":18902:18973   */\n      tag_346\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18983:19055   */\n      tag_556\n        /* \"#utility.yul\":19051:19053   */\n      0x20\n        /* \"#utility.yul\":19040:19049   */\n      dup4\n        /* \"#utility.yul\":19036:19054   */\n      add\n        /* \"#utility.yul\":19027:19033   */\n      dup5\n        /* \"#utility.yul\":18983:19055   */\n      tag_346\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18730:19062   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19068:19211   */\n    tag_374:\n        /* \"#utility.yul\":19125:19130   */\n      0x00\n        /* \"#utility.yul\":19156:19162   */\n      dup2\n        /* \"#utility.yul\":19150:19163   */\n      mload\n        /* \"#utility.yul\":19141:19163   */\n      swap1\n      pop\n        /* \"#utility.yul\":19172:19205   */\n      tag_558\n        /* \"#utility.yul\":19199:19204   */\n      dup2\n        /* \"#utility.yul\":19172:19205   */\n      tag_342\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19068:19211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19217:19568   */\n    tag_267:\n        /* \"#utility.yul\":19287:19293   */\n      0x00\n        /* \"#utility.yul\":19336:19338   */\n      0x20\n        /* \"#utility.yul\":19324:19333   */\n      dup3\n        /* \"#utility.yul\":19315:19322   */\n      dup5\n        /* \"#utility.yul\":19311:19334   */\n      sub\n        /* \"#utility.yul\":19307:19339   */\n      slt\n        /* \"#utility.yul\":19304:19423   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":19342:19421   */\n      tag_561\n      tag_335\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":19304:19423   */\n    tag_560:\n        /* \"#utility.yul\":19462:19463   */\n      0x00\n        /* \"#utility.yul\":19487:19551   */\n      tag_562\n        /* \"#utility.yul\":19543:19550   */\n      dup5\n        /* \"#utility.yul\":19534:19540   */\n      dup3\n        /* \"#utility.yul\":19523:19532   */\n      dup6\n        /* \"#utility.yul\":19519:19541   */\n      add\n        /* \"#utility.yul\":19487:19551   */\n      tag_374\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19477:19551   */\n      swap2\n      pop\n        /* \"#utility.yul\":19433:19561   */\n      pop\n        /* \"#utility.yul\":19217:19568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19574:20016   */\n    tag_294:\n        /* \"#utility.yul\":19723:19727   */\n      0x00\n        /* \"#utility.yul\":19761:19763   */\n      0x60\n        /* \"#utility.yul\":19750:19759   */\n      dup3\n        /* \"#utility.yul\":19746:19764   */\n      add\n        /* \"#utility.yul\":19738:19764   */\n      swap1\n      pop\n        /* \"#utility.yul\":19774:19845   */\n      tag_564\n        /* \"#utility.yul\":19842:19843   */\n      0x00\n        /* \"#utility.yul\":19831:19840   */\n      dup4\n        /* \"#utility.yul\":19827:19844   */\n      add\n        /* \"#utility.yul\":19818:19824   */\n      dup7\n        /* \"#utility.yul\":19774:19845   */\n      tag_349\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19855:19927   */\n      tag_565\n        /* \"#utility.yul\":19923:19925   */\n      0x20\n        /* \"#utility.yul\":19912:19921   */\n      dup4\n        /* \"#utility.yul\":19908:19926   */\n      add\n        /* \"#utility.yul\":19899:19905   */\n      dup6\n        /* \"#utility.yul\":19855:19927   */\n      tag_346\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19937:20009   */\n      tag_566\n        /* \"#utility.yul\":20005:20007   */\n      0x40\n        /* \"#utility.yul\":19994:20003   */\n      dup4\n        /* \"#utility.yul\":19990:20008   */\n      add\n        /* \"#utility.yul\":19981:19987   */\n      dup5\n        /* \"#utility.yul\":19937:20009   */\n      tag_346\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":19574:20016   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20022:20213   */\n    tag_322:\n        /* \"#utility.yul\":20062:20065   */\n      0x00\n        /* \"#utility.yul\":20081:20101   */\n      tag_568\n        /* \"#utility.yul\":20099:20100   */\n      dup3\n        /* \"#utility.yul\":20081:20101   */\n      tag_341\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":20076:20101   */\n      swap2\n      pop\n        /* \"#utility.yul\":20115:20135   */\n      tag_569\n        /* \"#utility.yul\":20133:20134   */\n      dup4\n        /* \"#utility.yul\":20115:20135   */\n      tag_341\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":20110:20135   */\n      swap3\n      pop\n        /* \"#utility.yul\":20158:20159   */\n      dup3\n        /* \"#utility.yul\":20155:20156   */\n      dup3\n        /* \"#utility.yul\":20151:20160   */\n      add\n        /* \"#utility.yul\":20144:20160   */\n      swap1\n      pop\n        /* \"#utility.yul\":20179:20182   */\n      dup1\n        /* \"#utility.yul\":20176:20177   */\n      dup3\n        /* \"#utility.yul\":20173:20183   */\n      gt\n        /* \"#utility.yul\":20170:20206   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":20186:20204   */\n      tag_571\n      tag_360\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":20170:20206   */\n    tag_570:\n        /* \"#utility.yul\":20022:20213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209cf3cbaaa7c2058302b4cd0d19f579a462cd1589f959130f52b258395171bc0264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 846,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 651,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 979,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8810:7",
										"nodeType": "YulBlock",
										"src": "0:8810:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "890:32:7",
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nativeSrc": "900:16:7",
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:7",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:7",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:7",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1299:413:7",
													"nodeType": "YulBlock",
													"src": "1299:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:7",
																"nodeType": "YulBlock",
																"src": "1345:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:7"
																			},
																			"nativeSrc": "1347:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:7"
																		},
																		"nativeSrc": "1347:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:7"
																		},
																		"nativeSrc": "1316:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:7"
																},
																"nativeSrc": "1312:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:7"
															},
															"nativeSrc": "1309:119:7",
															"nodeType": "YulIf",
															"src": "1309:119:7"
														},
														{
															"nativeSrc": "1438:128:7",
															"nodeType": "YulBlock",
															"src": "1438:128:7",
															"statements": [
																{
																	"nativeSrc": "1453:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:7"
																				},
																				"nativeSrc": "1524:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:7"
																		},
																		"nativeSrc": "1492:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:7",
															"nodeType": "YulBlock",
															"src": "1576:129:7",
															"statements": [
																{
																	"nativeSrc": "1591:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:7"
																				},
																				"nativeSrc": "1663:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:7"
																		},
																		"nativeSrc": "1631:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:7",
														"nodeType": "YulTypedName",
														"src": "1261:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:7",
														"nodeType": "YulTypedName",
														"src": "1272:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:7",
														"nodeType": "YulTypedName",
														"src": "1284:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:7",
														"nodeType": "YulTypedName",
														"src": "1292:6:7",
														"type": ""
													}
												],
												"src": "1205:507:7"
											},
											{
												"body": {
													"nativeSrc": "1777:40:7",
													"nodeType": "YulBlock",
													"src": "1777:40:7",
													"statements": [
														{
															"nativeSrc": "1788:22:7",
															"nodeType": "YulAssignment",
															"src": "1788:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:7"
																},
																"nativeSrc": "1798:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:7",
														"nodeType": "YulTypedName",
														"src": "1760:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:7",
														"nodeType": "YulTypedName",
														"src": "1770:6:7",
														"type": ""
													}
												],
												"src": "1718:99:7"
											},
											{
												"body": {
													"nativeSrc": "1851:152:7",
													"nodeType": "YulBlock",
													"src": "1851:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:7"
																},
																"nativeSrc": "1861:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:7"
															},
															"nativeSrc": "1861:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:7"
																},
																"nativeSrc": "1958:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:7"
															},
															"nativeSrc": "1958:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:7"
																},
																"nativeSrc": "1982:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:7"
															},
															"nativeSrc": "1982:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:7"
											},
											{
												"body": {
													"nativeSrc": "2037:152:7",
													"nodeType": "YulBlock",
													"src": "2037:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:7"
																},
																"nativeSrc": "2047:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:7"
															},
															"nativeSrc": "2047:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:7"
																},
																"nativeSrc": "2144:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:7"
															},
															"nativeSrc": "2144:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:7"
																},
																"nativeSrc": "2168:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:7"
															},
															"nativeSrc": "2168:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:7"
											},
											{
												"body": {
													"nativeSrc": "2246:269:7",
													"nodeType": "YulBlock",
													"src": "2246:269:7",
													"statements": [
														{
															"nativeSrc": "2256:22:7",
															"nodeType": "YulAssignment",
															"src": "2256:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:7"
																},
																"nativeSrc": "2266:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:7"
																}
															]
														},
														{
															"nativeSrc": "2287:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:7"
																},
																"nativeSrc": "2313:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:7",
																"nodeType": "YulBlock",
																"src": "2364:51:7",
																"statements": [
																	{
																		"nativeSrc": "2378:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:7"
																			},
																			"nativeSrc": "2388:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:7"
																},
																"nativeSrc": "2337:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:7"
															},
															"nativeSrc": "2334:81:7",
															"nodeType": "YulIf",
															"src": "2334:81:7"
														},
														{
															"body": {
																"nativeSrc": "2467:42:7",
																"nodeType": "YulBlock",
																"src": "2467:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:7"
																			},
																			"nativeSrc": "2481:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:7"
																		},
																		"nativeSrc": "2481:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:7"
																		},
																		"nativeSrc": "2451:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:7"
																},
																"nativeSrc": "2428:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:7"
															},
															"nativeSrc": "2425:84:7",
															"nodeType": "YulIf",
															"src": "2425:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:7",
														"nodeType": "YulTypedName",
														"src": "2230:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:7",
														"nodeType": "YulTypedName",
														"src": "2239:6:7",
														"type": ""
													}
												],
												"src": "2195:320:7"
											},
											{
												"body": {
													"nativeSrc": "2575:87:7",
													"nodeType": "YulBlock",
													"src": "2575:87:7",
													"statements": [
														{
															"nativeSrc": "2585:11:7",
															"nodeType": "YulAssignment",
															"src": "2585:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:7",
																"nodeType": "YulIdentifier",
																"src": "2593:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:7"
																},
																"nativeSrc": "2606:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:7"
															},
															"nativeSrc": "2606:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:7"
														},
														{
															"nativeSrc": "2629:26:7",
															"nodeType": "YulAssignment",
															"src": "2629:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:7"
																},
																"nativeSrc": "2637:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:7",
														"nodeType": "YulTypedName",
														"src": "2562:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:7",
														"nodeType": "YulTypedName",
														"src": "2570:4:7",
														"type": ""
													}
												],
												"src": "2521:141:7"
											},
											{
												"body": {
													"nativeSrc": "2712:49:7",
													"nodeType": "YulBlock",
													"src": "2712:49:7",
													"statements": [
														{
															"nativeSrc": "2722:33:7",
															"nodeType": "YulAssignment",
															"src": "2722:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:7"
																		},
																		"nativeSrc": "2736:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:7"
																},
																"nativeSrc": "2732:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:7",
														"nodeType": "YulTypedName",
														"src": "2695:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:7",
														"nodeType": "YulTypedName",
														"src": "2705:6:7",
														"type": ""
													}
												],
												"src": "2668:93:7"
											},
											{
												"body": {
													"nativeSrc": "2820:54:7",
													"nodeType": "YulBlock",
													"src": "2820:54:7",
													"statements": [
														{
															"nativeSrc": "2830:37:7",
															"nodeType": "YulAssignment",
															"src": "2830:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:7"
																},
																"nativeSrc": "2851:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:7",
														"nodeType": "YulTypedName",
														"src": "2795:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:7",
														"nodeType": "YulTypedName",
														"src": "2801:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:7",
														"nodeType": "YulTypedName",
														"src": "2811:8:7",
														"type": ""
													}
												],
												"src": "2767:107:7"
											},
											{
												"body": {
													"nativeSrc": "2956:317:7",
													"nodeType": "YulBlock",
													"src": "2956:317:7",
													"statements": [
														{
															"nativeSrc": "2966:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:7"
																},
																"nativeSrc": "2983:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:7",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:7"
																},
																"nativeSrc": "3022:97:7",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:7",
															"nodeType": "YulAssignment",
															"src": "3128:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:7"
																},
																"nativeSrc": "3140:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:7"
																}
															]
														},
														{
															"nativeSrc": "3188:30:7",
															"nodeType": "YulAssignment",
															"src": "3188:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:7"
																		},
																		"nativeSrc": "3208:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:7"
																},
																"nativeSrc": "3197:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:7"
																}
															]
														},
														{
															"nativeSrc": "3227:40:7",
															"nodeType": "YulAssignment",
															"src": "3227:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:7"
																		},
																		"nativeSrc": "3247:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:7"
																},
																"nativeSrc": "3237:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:7",
														"nodeType": "YulTypedName",
														"src": "2917:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:7",
														"nodeType": "YulTypedName",
														"src": "2924:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:7",
														"nodeType": "YulTypedName",
														"src": "2936:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:7",
														"nodeType": "YulTypedName",
														"src": "2949:6:7",
														"type": ""
													}
												],
												"src": "2880:393:7"
											},
											{
												"body": {
													"nativeSrc": "3311:28:7",
													"nodeType": "YulBlock",
													"src": "3311:28:7",
													"statements": [
														{
															"nativeSrc": "3321:12:7",
															"nodeType": "YulAssignment",
															"src": "3321:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:7",
																"nodeType": "YulIdentifier",
																"src": "3328:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:7",
														"nodeType": "YulTypedName",
														"src": "3297:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:7",
														"nodeType": "YulTypedName",
														"src": "3307:3:7",
														"type": ""
													}
												],
												"src": "3279:60:7"
											},
											{
												"body": {
													"nativeSrc": "3405:82:7",
													"nodeType": "YulBlock",
													"src": "3405:82:7",
													"statements": [
														{
															"nativeSrc": "3415:66:7",
															"nodeType": "YulAssignment",
															"src": "3415:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:7"
																				},
																				"nativeSrc": "3455:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:7"
																		},
																		"nativeSrc": "3446:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:7"
																},
																"nativeSrc": "3428:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:7",
														"nodeType": "YulTypedName",
														"src": "3385:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:7",
														"nodeType": "YulTypedName",
														"src": "3395:9:7",
														"type": ""
													}
												],
												"src": "3345:142:7"
											},
											{
												"body": {
													"nativeSrc": "3540:28:7",
													"nodeType": "YulBlock",
													"src": "3540:28:7",
													"statements": [
														{
															"nativeSrc": "3550:12:7",
															"nodeType": "YulAssignment",
															"src": "3550:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:7",
																"nodeType": "YulIdentifier",
																"src": "3557:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:7",
														"nodeType": "YulTypedName",
														"src": "3526:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:7",
														"nodeType": "YulTypedName",
														"src": "3536:3:7",
														"type": ""
													}
												],
												"src": "3493:75:7"
											},
											{
												"body": {
													"nativeSrc": "3650:193:7",
													"nodeType": "YulBlock",
													"src": "3650:193:7",
													"statements": [
														{
															"nativeSrc": "3660:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:7"
																},
																"nativeSrc": "3684:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:7"
																				},
																				"nativeSrc": "3773:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:7"
																				},
																				"nativeSrc": "3794:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:7"
																		},
																		"nativeSrc": "3745:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:7"
																},
																"nativeSrc": "3732:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:7"
															},
															"nativeSrc": "3732:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:7",
														"nodeType": "YulTypedName",
														"src": "3627:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:7",
														"nodeType": "YulTypedName",
														"src": "3633:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:7",
														"nodeType": "YulTypedName",
														"src": "3641:7:7",
														"type": ""
													}
												],
												"src": "3574:269:7"
											},
											{
												"body": {
													"nativeSrc": "3898:24:7",
													"nodeType": "YulBlock",
													"src": "3898:24:7",
													"statements": [
														{
															"nativeSrc": "3908:8:7",
															"nodeType": "YulAssignment",
															"src": "3908:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:7",
																"nodeType": "YulLiteral",
																"src": "3915:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:7",
														"nodeType": "YulTypedName",
														"src": "3894:3:7",
														"type": ""
													}
												],
												"src": "3849:73:7"
											},
											{
												"body": {
													"nativeSrc": "3981:136:7",
													"nodeType": "YulBlock",
													"src": "3981:136:7",
													"statements": [
														{
															"nativeSrc": "3991:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:7"
																},
																"nativeSrc": "4005:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:7"
																},
																"nativeSrc": "4046:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:7"
															},
															"nativeSrc": "4046:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:7",
														"nodeType": "YulTypedName",
														"src": "3967:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:7",
														"nodeType": "YulTypedName",
														"src": "3973:6:7",
														"type": ""
													}
												],
												"src": "3928:189:7"
											},
											{
												"body": {
													"nativeSrc": "4173:136:7",
													"nodeType": "YulBlock",
													"src": "4173:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:7",
																"nodeType": "YulBlock",
																"src": "4240:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:7"
																			},
																			"nativeSrc": "4254:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:7"
																		},
																		"nativeSrc": "4254:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:7"
																},
																"nativeSrc": "4190:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:7"
															},
															"nativeSrc": "4183:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:7",
																"nodeType": "YulBlock",
																"src": "4205:26:7",
																"statements": [
																	{
																		"nativeSrc": "4207:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:7"
																			},
																			"nativeSrc": "4216:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:7",
																"nodeType": "YulBlock",
																"src": "4187:2:7",
																"statements": []
															},
															"src": "4183:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:7",
														"nodeType": "YulTypedName",
														"src": "4161:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:7",
														"nodeType": "YulTypedName",
														"src": "4168:3:7",
														"type": ""
													}
												],
												"src": "4123:186:7"
											},
											{
												"body": {
													"nativeSrc": "4394:464:7",
													"nodeType": "YulBlock",
													"src": "4394:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:7",
																"nodeType": "YulBlock",
																"src": "4420:431:7",
																"statements": [
																	{
																		"nativeSrc": "4434:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:7"
																			},
																			"nativeSrc": "4450:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:7"
																					},
																					"nativeSrc": "4534:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:7"
																			},
																			"nativeSrc": "4520:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:7",
																			"nodeType": "YulBlock",
																			"src": "4721:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:7"
																			},
																			"nativeSrc": "4702:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:7"
																		},
																		"nativeSrc": "4699:49:7",
																		"nodeType": "YulIf",
																		"src": "4699:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:7"
																							},
																							"nativeSrc": "4817:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:7"
																					},
																					"nativeSrc": "4803:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:7"
																			},
																			"nativeSrc": "4761:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:7"
																		},
																		"nativeSrc": "4761:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:7"
																},
																"nativeSrc": "4408:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:7"
															},
															"nativeSrc": "4405:446:7",
															"nodeType": "YulIf",
															"src": "4405:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:7",
														"nodeType": "YulTypedName",
														"src": "4370:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:7",
														"nodeType": "YulTypedName",
														"src": "4377:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:7",
														"nodeType": "YulTypedName",
														"src": "4382:10:7",
														"type": ""
													}
												],
												"src": "4315:543:7"
											},
											{
												"body": {
													"nativeSrc": "4927:54:7",
													"nodeType": "YulBlock",
													"src": "4927:54:7",
													"statements": [
														{
															"nativeSrc": "4937:37:7",
															"nodeType": "YulAssignment",
															"src": "4937:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:7"
																},
																"nativeSrc": "4958:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:7",
														"nodeType": "YulTypedName",
														"src": "4902:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:7",
														"nodeType": "YulTypedName",
														"src": "4908:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:7",
														"nodeType": "YulTypedName",
														"src": "4918:8:7",
														"type": ""
													}
												],
												"src": "4864:117:7"
											},
											{
												"body": {
													"nativeSrc": "5038:118:7",
													"nodeType": "YulBlock",
													"src": "5038:118:7",
													"statements": [
														{
															"nativeSrc": "5048:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:7"
																				},
																				"nativeSrc": "5093:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:7"
																				},
																				"nativeSrc": "5108:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:7"
																		},
																		"nativeSrc": "5064:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:7"
																},
																"nativeSrc": "5060:56:7",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:7",
															"nodeType": "YulAssignment",
															"src": "5125:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:7"
																},
																"nativeSrc": "5135:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:7",
														"nodeType": "YulTypedName",
														"src": "5015:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:7",
														"nodeType": "YulTypedName",
														"src": "5021:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:7",
														"nodeType": "YulTypedName",
														"src": "5031:6:7",
														"type": ""
													}
												],
												"src": "4987:169:7"
											},
											{
												"body": {
													"nativeSrc": "5242:214:7",
													"nodeType": "YulBlock",
													"src": "5242:214:7",
													"statements": [
														{
															"nativeSrc": "5375:37:7",
															"nodeType": "YulAssignment",
															"src": "5375:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:7"
																},
																"nativeSrc": "5383:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:7"
																}
															]
														},
														{
															"nativeSrc": "5421:29:7",
															"nodeType": "YulAssignment",
															"src": "5421:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:7"
																		},
																		"nativeSrc": "5438:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:7"
																},
																"nativeSrc": "5429:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:7",
														"nodeType": "YulTypedName",
														"src": "5223:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:7",
														"nodeType": "YulTypedName",
														"src": "5229:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:7",
														"nodeType": "YulTypedName",
														"src": "5237:4:7",
														"type": ""
													}
												],
												"src": "5161:295:7"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:7",
													"nodeType": "YulBlock",
													"src": "5553:1303:7",
													"statements": [
														{
															"nativeSrc": "5564:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:7"
																},
																"nativeSrc": "5578:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:7",
																"nodeType": "YulBlock",
																"src": "5700:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:7"
																			},
																			"nativeSrc": "5702:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:7"
																		},
																		"nativeSrc": "5702:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:7"
																},
																"nativeSrc": "5669:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:7"
															},
															"nativeSrc": "5666:56:7",
															"nodeType": "YulIf",
															"src": "5666:56:7"
														},
														{
															"nativeSrc": "5732:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:7"
																		},
																		"nativeSrc": "5772:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:7"
																},
																"nativeSrc": "5746:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:7"
																},
																"nativeSrc": "5831:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:7"
															},
															"nativeSrc": "5831:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:7"
														},
														{
															"nativeSrc": "5908:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:7",
																"nodeType": "YulLiteral",
																"src": "5925:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:7",
															"nodeType": "YulAssignment",
															"src": "5936:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:7",
																"nodeType": "YulLiteral",
																"src": "5949:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:7",
																		"nodeType": "YulBlock",
																		"src": "6000:611:7",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:7",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:7"
																							},
																							"nativeSrc": "6041:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:7"
																					},
																					"nativeSrc": "6029:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:7",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:7"
																					},
																					"nativeSrc": "6079:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:7",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:7",
																					"nodeType": "YulBlock",
																					"src": "6197:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:7"
																												},
																												"nativeSrc": "6236:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:7"
																										},
																										"nativeSrc": "6230:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:7"
																								},
																								"nativeSrc": "6215:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:7"
																							},
																							"nativeSrc": "6215:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:7"
																						},
																						{
																							"nativeSrc": "6274:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:7"
																								},
																								"nativeSrc": "6284:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:7"
																								},
																								"nativeSrc": "6328:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:7"
																					},
																					"nativeSrc": "6160:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:7"
																				},
																				"nativeSrc": "6152:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:7",
																					"nodeType": "YulBlock",
																					"src": "6175:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:7"
																								},
																								"nativeSrc": "6182:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:7",
																					"nodeType": "YulBlock",
																					"src": "6156:3:7",
																					"statements": []
																				},
																				"src": "6152:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:7",
																					"nodeType": "YulBlock",
																					"src": "6396:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:7"
																										},
																										"nativeSrc": "6437:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:7"
																								},
																								"nativeSrc": "6431:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:7"
																												},
																												"nativeSrc": "6519:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:7"
																										},
																										"nativeSrc": "6489:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:7"
																								},
																								"nativeSrc": "6474:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:7"
																							},
																							"nativeSrc": "6474:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:7"
																					},
																					"nativeSrc": "6376:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:7"
																				},
																				"nativeSrc": "6373:179:7",
																				"nodeType": "YulIf",
																				"src": "6373:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:7"
																									},
																									"nativeSrc": "6582:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:7"
																							},
																							"nativeSrc": "6578:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:7"
																					},
																					"nativeSrc": "6565:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:7"
																				},
																				"nativeSrc": "6565:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:7",
																	"nodeType": "YulCase",
																	"src": "5993:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:7",
																		"nodeType": "YulBlock",
																		"src": "6628:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:7",
																					"nodeType": "YulBlock",
																					"src": "6679:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:7"
																										},
																										"nativeSrc": "6712:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:7"
																								},
																								"nativeSrc": "6706:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:7"
																				},
																				"nativeSrc": "6669:77:7",
																				"nodeType": "YulIf",
																				"src": "6669:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:7"
																							},
																							"nativeSrc": "6772:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:7"
																					},
																					"nativeSrc": "6759:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:7"
																				},
																				"nativeSrc": "6759:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:7",
																	"nodeType": "YulCase",
																	"src": "6620:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:7"
																},
																"nativeSrc": "5970:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:7"
															},
															"nativeSrc": "5963:887:7",
															"nodeType": "YulSwitch",
															"src": "5963:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:7",
														"nodeType": "YulTypedName",
														"src": "5542:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:7",
														"nodeType": "YulTypedName",
														"src": "5548:3:7",
														"type": ""
													}
												],
												"src": "5461:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6927:53:7",
													"nodeType": "YulBlock",
													"src": "6927:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:7"
																		},
																		"nativeSrc": "6949:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:7"
																},
																"nativeSrc": "6937:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:7"
															},
															"nativeSrc": "6937:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:7",
														"nodeType": "YulTypedName",
														"src": "6915:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:7",
														"nodeType": "YulTypedName",
														"src": "6922:3:7",
														"type": ""
													}
												],
												"src": "6862:118:7"
											},
											{
												"body": {
													"nativeSrc": "7084:124:7",
													"nodeType": "YulBlock",
													"src": "7084:124:7",
													"statements": [
														{
															"nativeSrc": "7094:26:7",
															"nodeType": "YulAssignment",
															"src": "7094:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:7"
																},
																"nativeSrc": "7102:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:7"
																		},
																		"nativeSrc": "7183:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:7"
																},
																"nativeSrc": "7130:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:7"
															},
															"nativeSrc": "7130:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:7",
														"nodeType": "YulTypedName",
														"src": "7056:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:7",
														"nodeType": "YulTypedName",
														"src": "7068:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:7",
														"nodeType": "YulTypedName",
														"src": "7079:4:7",
														"type": ""
													}
												],
												"src": "6986:222:7"
											},
											{
												"body": {
													"nativeSrc": "7242:152:7",
													"nodeType": "YulBlock",
													"src": "7242:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7262:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:7"
																},
																"nativeSrc": "7252:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7252:88:7"
															},
															"nativeSrc": "7252:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7252:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7356:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7356:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7359:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7359:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:7"
																},
																"nativeSrc": "7349:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7349:15:7"
															},
															"nativeSrc": "7349:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7349:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7373:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:7"
																},
																"nativeSrc": "7373:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7373:15:7"
															},
															"nativeSrc": "7373:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7373:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7214:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7214:180:7"
											},
											{
												"body": {
													"nativeSrc": "7448:362:7",
													"nodeType": "YulBlock",
													"src": "7448:362:7",
													"statements": [
														{
															"nativeSrc": "7458:25:7",
															"nodeType": "YulAssignment",
															"src": "7458:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7481:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7481:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7463:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7463:17:7"
																},
																"nativeSrc": "7463:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7463:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7458:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7458:1:7"
																}
															]
														},
														{
															"nativeSrc": "7492:25:7",
															"nodeType": "YulAssignment",
															"src": "7492:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7515:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7515:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7497:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7497:17:7"
																},
																"nativeSrc": "7497:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7497:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7492:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7492:1:7"
																}
															]
														},
														{
															"nativeSrc": "7526:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7526:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7549:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7549:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7552:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7545:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7545:3:7"
																},
																"nativeSrc": "7545:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7545:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7530:11:7",
																	"nodeType": "YulTypedName",
																	"src": "7530:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7563:41:7",
															"nodeType": "YulAssignment",
															"src": "7563:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7592:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "7592:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7574:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7574:17:7"
																},
																"nativeSrc": "7574:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7574:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7563:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7563:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7781:22:7",
																"nodeType": "YulBlock",
																"src": "7781:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7783:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7783:16:7"
																			},
																			"nativeSrc": "7783:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7783:18:7"
																		},
																		"nativeSrc": "7783:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7783:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7714:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7714:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7707:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7707:6:7"
																				},
																				"nativeSrc": "7707:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7707:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7737:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7737:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7744:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "7744:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7753:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "7753:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7740:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7740:3:7"
																						},
																						"nativeSrc": "7740:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7740:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7734:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7734:2:7"
																				},
																				"nativeSrc": "7734:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7734:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7687:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7687:2:7"
																		},
																		"nativeSrc": "7687:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7687:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:7"
																},
																"nativeSrc": "7667:113:7",
																"nodeType": "YulFunctionCall",
																"src": "7667:113:7"
															},
															"nativeSrc": "7664:139:7",
															"nodeType": "YulIf",
															"src": "7664:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7400:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7431:1:7",
														"nodeType": "YulTypedName",
														"src": "7431:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7434:1:7",
														"nodeType": "YulTypedName",
														"src": "7434:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7440:7:7",
														"nodeType": "YulTypedName",
														"src": "7440:7:7",
														"type": ""
													}
												],
												"src": "7400:410:7"
											},
											{
												"body": {
													"nativeSrc": "7860:147:7",
													"nodeType": "YulBlock",
													"src": "7860:147:7",
													"statements": [
														{
															"nativeSrc": "7870:25:7",
															"nodeType": "YulAssignment",
															"src": "7870:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7893:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7893:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7875:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7875:17:7"
																},
																"nativeSrc": "7875:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7875:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7870:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7870:1:7"
																}
															]
														},
														{
															"nativeSrc": "7904:25:7",
															"nodeType": "YulAssignment",
															"src": "7904:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7927:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7927:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7909:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7909:17:7"
																},
																"nativeSrc": "7909:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7909:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7904:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7904:1:7"
																}
															]
														},
														{
															"nativeSrc": "7938:16:7",
															"nodeType": "YulAssignment",
															"src": "7938:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7949:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7949:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7952:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7952:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:7"
																},
																"nativeSrc": "7945:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7945:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7938:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7978:22:7",
																"nodeType": "YulBlock",
																"src": "7978:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7980:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7980:16:7"
																			},
																			"nativeSrc": "7980:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7980:18:7"
																		},
																		"nativeSrc": "7980:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7980:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7970:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7970:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7973:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7973:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7967:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7967:2:7"
																},
																"nativeSrc": "7967:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7967:10:7"
															},
															"nativeSrc": "7964:36:7",
															"nodeType": "YulIf",
															"src": "7964:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7816:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7847:1:7",
														"nodeType": "YulTypedName",
														"src": "7847:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7850:1:7",
														"nodeType": "YulTypedName",
														"src": "7850:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7856:3:7",
														"nodeType": "YulTypedName",
														"src": "7856:3:7",
														"type": ""
													}
												],
												"src": "7816:191:7"
											},
											{
												"body": {
													"nativeSrc": "8078:53:7",
													"nodeType": "YulBlock",
													"src": "8078:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8095:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8095:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8118:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8118:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8100:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8100:17:7"
																		},
																		"nativeSrc": "8100:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8100:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8088:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:7"
																},
																"nativeSrc": "8088:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8088:37:7"
															},
															"nativeSrc": "8088:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8088:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8013:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8066:5:7",
														"nodeType": "YulTypedName",
														"src": "8066:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8073:3:7",
														"nodeType": "YulTypedName",
														"src": "8073:3:7",
														"type": ""
													}
												],
												"src": "8013:118:7"
											},
											{
												"body": {
													"nativeSrc": "8291:288:7",
													"nodeType": "YulBlock",
													"src": "8291:288:7",
													"statements": [
														{
															"nativeSrc": "8301:26:7",
															"nodeType": "YulAssignment",
															"src": "8301:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8313:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8313:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8324:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8309:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8309:3:7"
																},
																"nativeSrc": "8309:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8309:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8301:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8301:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8381:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8394:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8394:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8405:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8405:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8390:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8390:3:7"
																		},
																		"nativeSrc": "8390:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8337:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8337:43:7"
																},
																"nativeSrc": "8337:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8337:71:7"
															},
															"nativeSrc": "8337:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8337:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8462:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8462:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8475:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8486:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8486:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8471:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:7"
																		},
																		"nativeSrc": "8471:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8471:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8418:43:7"
																},
																"nativeSrc": "8418:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8418:72:7"
															},
															"nativeSrc": "8418:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8418:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8544:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8544:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8557:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8557:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8568:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8568:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8553:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8553:3:7"
																		},
																		"nativeSrc": "8553:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8553:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8500:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8500:43:7"
																},
																"nativeSrc": "8500:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8500:72:7"
															},
															"nativeSrc": "8500:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8500:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8137:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8247:9:7",
														"nodeType": "YulTypedName",
														"src": "8247:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8259:6:7",
														"nodeType": "YulTypedName",
														"src": "8259:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8267:6:7",
														"nodeType": "YulTypedName",
														"src": "8267:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8275:6:7",
														"nodeType": "YulTypedName",
														"src": "8275:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8286:4:7",
														"nodeType": "YulTypedName",
														"src": "8286:4:7",
														"type": ""
													}
												],
												"src": "8137:442:7"
											},
											{
												"body": {
													"nativeSrc": "8683:124:7",
													"nodeType": "YulBlock",
													"src": "8683:124:7",
													"statements": [
														{
															"nativeSrc": "8693:26:7",
															"nodeType": "YulAssignment",
															"src": "8693:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8705:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8705:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8716:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8716:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8701:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8701:3:7"
																},
																"nativeSrc": "8701:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8701:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8693:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8693:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8773:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8773:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8797:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8797:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8782:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:7"
																		},
																		"nativeSrc": "8782:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8782:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8729:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8729:43:7"
																},
																"nativeSrc": "8729:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8729:71:7"
															},
															"nativeSrc": "8729:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8729:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8585:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8655:9:7",
														"nodeType": "YulTypedName",
														"src": "8655:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8667:6:7",
														"nodeType": "YulTypedName",
														"src": "8667:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8678:4:7",
														"nodeType": "YulTypedName",
														"src": "8678:4:7",
														"type": ""
													}
												],
												"src": "8585:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a7640000600755670de0b6b3a764000060085573fe09e35dfadf080a768f41df13e06629f5e80eb960095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073eaca0253b95730f2ae2755af09083d69840a683c600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100cf575f80fd5b5060405161303138038061303183398181016040528101906100f1919061067d565b336040518060400160405280600a81526020017f5354454d20546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5354454d00000000000000000000000000000000000000000000000000000000815250816003908161016d91906108ec565b50806004908161017d91906108ec565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101e791906109ca565b60405180910390fd5b6101ff8161028b60201b60201c565b508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061028460095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a7640000836102799190610a10565b61034e60201b60201c565b5050610ae1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103be575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103b591906109ca565b60405180910390fd5b6103cf5f83836103d360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610423578060025f8282546104179190610a51565b925050819055506104f1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104ac578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104a393929190610a93565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610538578060025f8282540392505081905550610582565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105df9190610ac8565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610619826105f0565b9050919050565b6106298161060f565b8114610633575f80fd5b50565b5f8151905061064481610620565b92915050565b5f819050919050565b61065c8161064a565b8114610666575f80fd5b50565b5f8151905061067781610653565b92915050565b5f8060408385031215610693576106926105ec565b5b5f6106a085828601610636565b92505060206106b185828601610669565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061073657607f821691505b602082108103610749576107486106f2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107ab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610770565b6107b58683610770565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107f06107eb6107e68461064a565b6107cd565b61064a565b9050919050565b5f819050919050565b610809836107d6565b61081d610815826107f7565b84845461077c565b825550505050565b5f90565b610831610825565b61083c818484610800565b505050565b5b8181101561085f576108545f82610829565b600181019050610842565b5050565b601f8211156108a4576108758161074f565b61087e84610761565b8101602085101561088d578190505b6108a161089985610761565b830182610841565b50505b505050565b5f82821c905092915050565b5f6108c45f19846008026108a9565b1980831691505092915050565b5f6108dc83836108b5565b9150826002028217905092915050565b6108f5826106bb565b67ffffffffffffffff81111561090e5761090d6106c5565b5b610918825461071f565b610923828285610863565b5f60209050601f831160018114610954575f8415610942578287015190505b61094c85826108d1565b8655506109b3565b601f1984166109628661074f565b5f5b8281101561098957848901518255600182019150602085019450602081019050610964565b868310156109a657848901516109a2601f8916826108b5565b8355505b6001600288020188555050505b505050505050565b6109c48161060f565b82525050565b5f6020820190506109dd5f8301846109bb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a1a8261064a565b9150610a258361064a565b9250828202610a338161064a565b91508282048414831517610a4a57610a496109e3565b5b5092915050565b5f610a5b8261064a565b9150610a668361064a565b9250828201905080821115610a7e57610a7d6109e3565b5b92915050565b610a8d8161064a565b82525050565b5f606082019050610aa65f8301866109bb565b610ab36020830185610a84565b610ac06040830184610a84565b949350505050565b5f602082019050610adb5f830184610a84565b92915050565b61254380610aee5f395ff3fe608060405234801561000f575f80fd5b50600436106101a7575f3560e01c806385e436bf116100f7578063bb28555411610095578063f0f442601161006f578063f0f442601461049b578063f203787c146104b7578063f2fde38b146104d5578063fc37987b146104f1576101a7565b8063bb28555414610429578063c3f909d414610445578063dd62ed3e1461046b576101a7565b806395d89b41116100d157806395d89b41146103a15780639dc29fac146103bf578063a9059cbb146103db578063a98ad46c1461040b576101a7565b806385e436bf1461034b5780638da5cb5b146103675780638e0b017d14610385576101a7565b8063313ce5671161016457806361d027b31161013e57806361d027b3146102d55780636217229b146102f357806370a0823114610311578063715018a614610341576101a7565b8063313ce5671461027f57806340c10f191461029d5780635d91e3f8146102b9576101a7565b806306fdde03146101ab578063095ea7b3146101c95780630f7e730b146101f95780631481794e1461021557806318160ddd1461023157806323b872dd1461024f575b5f80fd5b6101b361050f565b6040516101c09190611b77565b60405180910390f35b6101e360048036038101906101de9190611c28565b61059f565b6040516101f09190611c80565b60405180910390f35b610213600480360381019061020e9190611c99565b6105c1565b005b61022f600480360381019061022a9190611c28565b61064e565b005b610239610783565b6040516102469190611cd3565b60405180910390f35b61026960048036038101906102649190611cec565b61078c565b6040516102769190611c80565b60405180910390f35b6102876107ba565b6040516102949190611d57565b60405180910390f35b6102b760048036038101906102b29190611c28565b6107c2565b005b6102d360048036038101906102ce9190611d70565b610839565b005b6102dd610af3565b6040516102ea9190611daa565b60405180910390f35b6102fb610b18565b6040516103089190611cd3565b60405180910390f35b61032b60048036038101906103269190611c99565b610b1e565b6040516103389190611cd3565b60405180910390f35b610349610b63565b005b61036560048036038101906103609190611d70565b610b76565b005b61036f610c4e565b60405161037c9190611daa565b60405180910390f35b61039f600480360381019061039a9190611d70565b610c76565b005b6103a9610d0a565b6040516103b69190611b77565b60405180910390f35b6103d960048036038101906103d49190611c28565b610d9a565b005b6103f560048036038101906103f09190611c28565b610e11565b6040516104029190611c80565b60405180910390f35b610413610e33565b6040516104209190611e1e565b60405180910390f35b610443600480360381019061043e9190611d70565b610e58565b005b61044d61100e565b60405161046299989796959493929190611e37565b60405180910390f35b61048560048036038101906104809190611ec2565b61117c565b6040516104929190611cd3565b60405180910390f35b6104b560048036038101906104b09190611c99565b6111fe565b005b6104bf61128c565b6040516104cc9190611daa565b60405180910390f35b6104ef60048036038101906104ea9190611c99565b6112b1565b005b6104f9611335565b6040516105069190611cd3565b60405180910390f35b60606003805461051e90611f2d565b80601f016020809104026020016040519081016040528092919081815260200182805461054a90611f2d565b80156105955780601f1061056c57610100808354040283529160200191610595565b820191905f5260205f20905b81548152906001019060200180831161057857829003601f168201915b5050505050905090565b5f806105a961133b565b90506105b6818585611342565b600191505092915050565b6105c9611354565b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167e56d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b60405160405180910390a250565b610656611354565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106b2929190611f5d565b6020604051808303815f875af11580156106ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f29190611fae565b610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890612023565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b826040516107779190611cd3565b60405180910390a25050565b5f600254905090565b5f8061079661133b565b90506107a38582856113db565b6107ae85858561146e565b60019150509392505050565b5f6012905090565b6107ca611354565b6107e782670de0b6b3a7640000836107e2919061206e565b61155e565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe8260405161082d9190611cd3565b60405180910390a25050565b5f811161087b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610872906120f9565b60405180910390fd5b5f600854670de0b6b3a764000083610893919061206e565b61089d9190612144565b90505f670de0b6b3a7640000836108b49190612144565b90505f600854826108c5919061206e565b90505f8482116108d5575f6108e2565b84826108e19190612174565b5b90506109103360095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168761146e565b5f8111801561096c57505f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156109bf576109be60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361146e565b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610a1b929190611f5d565b6020604051808303815f875af1158015610a37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a5b9190611fae565b610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a91906121f1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420868684604051610ae49392919061220f565b60405180910390a25050505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b6b611354565b610b745f6115dd565b565b610b7e611354565b670de0b6b3a7640000811015610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc09061228e565b60405180910390fd5b600854811115610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906122f6565b60405180910390fd5b806007819055507eedd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb181604051610c439190611cd3565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c7e611354565b670de0b6b3a7640000811015610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090612384565b60405180910390fd5b806008819055507fbd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab81604051610cff9190611cd3565b60405180910390a150565b606060048054610d1990611f2d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590611f2d565b8015610d905780601f10610d6757610100808354040283529160200191610d90565b820191905f5260205f20905b815481529060010190602001808311610d7357829003601f168201915b5050505050905090565b610da2611354565b610dbf82670de0b6b3a764000083610dba919061206e565b6116a0565b8173ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df782604051610e059190611cd3565b60405180910390a25050565b5f80610e1b61133b565b9050610e2881858561146e565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e91906120f9565b60405180910390fd5b5f670de0b6b3a764000082610eaf919061206e565b905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f0f939291906123a2565b6020604051808303815f875af1158015610f2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4f9190611fae565b610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8590612421565b60405180910390fd5b610fba60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338361146e565b3373ffffffffffffffffffffffffffffffffffffffff167f59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb838360405161100292919061243f565b60405180910390a25050565b5f805f805f805f805f60075460085460095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661108b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b1e565b6110b5600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b1e565b6110be30610b1e565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111189190611daa565b602060405180830381865afa158015611133573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611157919061247a565b61115f610783565b985098509850985098509850985098509850909192939495969798565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611206611354565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f60860405160405180910390a250565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112b9611354565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611329575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113209190611daa565b60405180910390fd5b611332816115dd565b50565b60075481565b5f33905090565b61134f838383600161171f565b505050565b61135c61133b565b73ffffffffffffffffffffffffffffffffffffffff1661137a610c4e565b73ffffffffffffffffffffffffffffffffffffffff16146113d95761139d61133b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113d09190611daa565b60405180910390fd5b565b5f6113e6848461117c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114685781811015611459578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611450939291906124a5565b60405180910390fd5b61146784848484035f61171f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114de575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d59190611daa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115459190611daa565b60405180910390fd5b6115598383836118ee565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ce575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115c59190611daa565b60405180910390fd5b6115d95f83836118ee565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611710575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117079190611daa565b60405180910390fd5b61171b825f836118ee565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361178f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117869190611daa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ff575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117f69190611daa565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156118e8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118df9190611cd3565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361193e578060025f82825461193291906124da565b92505081905550611a0c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156119c7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119be939291906124a5565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a53578060025f8282540392505081905550611a9d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611afa9190611cd3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b4982611b07565b611b538185611b11565b9350611b63818560208601611b21565b611b6c81611b2f565b840191505092915050565b5f6020820190508181035f830152611b8f8184611b3f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bc482611b9b565b9050919050565b611bd481611bba565b8114611bde575f80fd5b50565b5f81359050611bef81611bcb565b92915050565b5f819050919050565b611c0781611bf5565b8114611c11575f80fd5b50565b5f81359050611c2281611bfe565b92915050565b5f8060408385031215611c3e57611c3d611b97565b5b5f611c4b85828601611be1565b9250506020611c5c85828601611c14565b9150509250929050565b5f8115159050919050565b611c7a81611c66565b82525050565b5f602082019050611c935f830184611c71565b92915050565b5f60208284031215611cae57611cad611b97565b5b5f611cbb84828501611be1565b91505092915050565b611ccd81611bf5565b82525050565b5f602082019050611ce65f830184611cc4565b92915050565b5f805f60608486031215611d0357611d02611b97565b5b5f611d1086828701611be1565b9350506020611d2186828701611be1565b9250506040611d3286828701611c14565b9150509250925092565b5f60ff82169050919050565b611d5181611d3c565b82525050565b5f602082019050611d6a5f830184611d48565b92915050565b5f60208284031215611d8557611d84611b97565b5b5f611d9284828501611c14565b91505092915050565b611da481611bba565b82525050565b5f602082019050611dbd5f830184611d9b565b92915050565b5f819050919050565b5f611de6611de1611ddc84611b9b565b611dc3565b611b9b565b9050919050565b5f611df782611dcc565b9050919050565b5f611e0882611ded565b9050919050565b611e1881611dfe565b82525050565b5f602082019050611e315f830184611e0f565b92915050565b5f61012082019050611e4b5f83018c611cc4565b611e58602083018b611cc4565b611e65604083018a611d9b565b611e726060830189611d9b565b611e7f6080830188611cc4565b611e8c60a0830187611cc4565b611e9960c0830186611cc4565b611ea660e0830185611cc4565b611eb4610100830184611cc4565b9a9950505050505050505050565b5f8060408385031215611ed857611ed7611b97565b5b5f611ee585828601611be1565b9250506020611ef685828601611be1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f4457607f821691505b602082108103611f5757611f56611f00565b5b50919050565b5f604082019050611f705f830185611d9b565b611f7d6020830184611cc4565b9392505050565b611f8d81611c66565b8114611f97575f80fd5b50565b5f81519050611fa881611f84565b92915050565b5f60208284031215611fc357611fc2611b97565b5b5f611fd084828501611f9a565b91505092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f61200d600f83611b11565b915061201882611fd9565b602082019050919050565b5f6020820190508181035f83015261203a81612001565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61207882611bf5565b915061208383611bf5565b925082820261209181611bf5565b915082820484148315176120a8576120a7612041565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6120e3601d83611b11565b91506120ee826120af565b602082019050919050565b5f6020820190508181035f830152612110816120d7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61214e82611bf5565b915061215983611bf5565b92508261216957612168612117565b5b828204905092915050565b5f61217e82611bf5565b915061218983611bf5565b92508282039050818111156121a1576121a0612041565b5b92915050565b7f55534454207061796f7574206661696c656400000000000000000000000000005f82015250565b5f6121db601283611b11565b91506121e6826121a7565b602082019050919050565b5f6020820190508181035f830152612208816121cf565b9050919050565b5f6060820190506122225f830186611cc4565b61222f6020830185611cc4565b61223c6040830184611cc4565b949350505050565b7f4275792072617465206d757374206265203e3d2031205354454d0000000000005f82015250565b5f612278601a83611b11565b915061228382612244565b602082019050919050565b5f6020820190508181035f8301526122a58161226c565b9050919050565b7f4275792072617465206d757374206265203c3d2053656c6c20726174650000005f82015250565b5f6122e0601d83611b11565b91506122eb826122ac565b602082019050919050565b5f6020820190508181035f83015261230d816122d4565b9050919050565b7f53656c6c2072617465206d75737420626520e289a52031205354454d207065725f8201527f2055534454000000000000000000000000000000000000000000000000000000602082015250565b5f61236e602583611b11565b915061237982612314565b604082019050919050565b5f6020820190508181035f83015261239b81612362565b9050919050565b5f6060820190506123b55f830186611d9b565b6123c26020830185611d9b565b6123cf6040830184611cc4565b949350505050565b7f55534454207472616e73666572206661696c65640000000000000000000000005f82015250565b5f61240b601483611b11565b9150612416826123d7565b602082019050919050565b5f6020820190508181035f830152612438816123ff565b9050919050565b5f6040820190506124525f830185611cc4565b61245f6020830184611cc4565b9392505050565b5f8151905061247481611bfe565b92915050565b5f6020828403121561248f5761248e611b97565b5b5f61249c84828501612466565b91505092915050565b5f6060820190506124b85f830186611d9b565b6124c56020830185611cc4565b6124d26040830184611cc4565b949350505050565b5f6124e482611bf5565b91506124ef83611bf5565b925082820190508082111561250757612506612041565b5b9291505056fea26469706673582212209cf3cbaaa7c2058302b4cd0d19f579a462cd1589f959130f52b258395171bc0264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH20 0xFE09E35DFADF080A768F41DF13E06629F5E80EB9 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xEACA0253B95730F2AE2755AF09083D69840A683C PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3031 CODESIZE SUB DUP1 PUSH2 0x3031 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x67D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354454D20546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354454D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FF DUP2 PUSH2 0x28B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x284 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH2 0x34E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xAE1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CF PUSH0 DUP4 DUP4 PUSH2 0x3D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x423 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4F1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4AC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x538 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x582 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x619 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x629 DUP2 PUSH2 0x60F JUMP JUMPDEST DUP2 EQ PUSH2 0x633 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x644 DUP2 PUSH2 0x620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65C DUP2 PUSH2 0x64A JUMP JUMPDEST DUP2 EQ PUSH2 0x666 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x677 DUP2 PUSH2 0x653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0x5EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A0 DUP6 DUP3 DUP7 ADD PUSH2 0x636 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6B1 DUP6 DUP3 DUP7 ADD PUSH2 0x669 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x736 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x749 JUMPI PUSH2 0x748 PUSH2 0x6F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7AB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x7B5 DUP7 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 PUSH2 0x7EB PUSH2 0x7E6 DUP5 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x809 DUP4 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x81D PUSH2 0x815 DUP3 PUSH2 0x7F7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x77C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x831 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x83C DUP2 DUP5 DUP5 PUSH2 0x800 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x85F JUMPI PUSH2 0x854 PUSH0 DUP3 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x842 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8A4 JUMPI PUSH2 0x875 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x87E DUP5 PUSH2 0x761 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x88D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8A1 PUSH2 0x899 DUP6 PUSH2 0x761 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x841 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8C4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8A9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8DC DUP4 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F5 DUP3 PUSH2 0x6BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH2 0x90D PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x918 DUP3 SLOAD PUSH2 0x71F JUMP JUMPDEST PUSH2 0x923 DUP3 DUP3 DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x954 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x942 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x94C DUP6 DUP3 PUSH2 0x8D1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x962 DUP7 PUSH2 0x74F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x989 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x964 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9A6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9A2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8B5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9C4 DUP2 PUSH2 0x60F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DD PUSH0 DUP4 ADD DUP5 PUSH2 0x9BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA1A DUP3 PUSH2 0x64A JUMP JUMPDEST SWAP2 POP PUSH2 0xA25 DUP4 PUSH2 0x64A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA33 DUP2 PUSH2 0x64A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA4A JUMPI PUSH2 0xA49 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA5B DUP3 PUSH2 0x64A JUMP JUMPDEST SWAP2 POP PUSH2 0xA66 DUP4 PUSH2 0x64A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA7E JUMPI PUSH2 0xA7D PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8D DUP2 PUSH2 0x64A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAA6 PUSH0 DUP4 ADD DUP7 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0xAB3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xAC0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA84 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADB PUSH0 DUP4 ADD DUP5 PUSH2 0xA84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2543 DUP1 PUSH2 0xAEE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E436BF GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBB285554 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF0F44260 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xF203787C EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x4F1 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xBB285554 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x40B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x85E436BF EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x8E0B017D EQ PUSH2 0x385 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x61D027B3 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x341 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x5D91E3F8 EQ PUSH2 0x2B9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF7E730B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1481794E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36F PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44D PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BF PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5A9 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 DUP2 DUP6 DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x656 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B DUP3 PUSH1 0x40 MLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x796 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x7A3 DUP6 DUP3 DUP6 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x7AE DUP6 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP3 GT PUSH2 0x8D5 JUMPI PUSH0 PUSH2 0x8E2 JUMP JUMPDEST DUP5 DUP3 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x910 CALLER PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH2 0x146E JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x96C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x146E JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xB74 PUSH0 PUSH2 0x15DD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH31 0xEDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB DUP2 PUSH1 0x40 MLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD19 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD45 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA2 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xDBF DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x16A0 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE1B PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0xE28 DUP2 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE91 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF85 SWAP1 PUSH2 0x2421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBA PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x146E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1002 SWAP3 SWAP2 SWAP1 PUSH2 0x243F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108B PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10B5 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10BE ADDRESS PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH2 0x115F PUSH2 0x783 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12B9 PUSH2 0x1354 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x15DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x134F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x171F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x135C PUSH2 0x133B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137A PUSH2 0xC4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13D9 JUMPI PUSH2 0x139D PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x13E6 DUP5 DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1450 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1467 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x171F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1559 DUP4 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 PUSH0 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1710 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171B DUP3 PUSH0 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x18E8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18DF SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x193E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A0C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19C7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A9D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B49 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1B53 DUP2 DUP6 PUSH2 0x1B11 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B63 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B6C DUP2 PUSH2 0x1B2F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8F DUP2 DUP5 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC4 DUP3 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD4 DUP2 PUSH2 0x1BBA JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEF DUP2 PUSH2 0x1BCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C07 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C22 DUP2 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4B DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C5C DUP6 DUP3 DUP7 ADD PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7A DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C93 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBB DUP5 DUP3 DUP6 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CCD DUP2 PUSH2 0x1BF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D10 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D21 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D32 DUP7 DUP3 DUP8 ADD PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D51 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1D48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D92 DUP5 DUP3 DUP6 ADD PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DA4 DUP2 PUSH2 0x1BBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBD PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE6 PUSH2 0x1DE1 PUSH2 0x1DDC DUP5 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF7 DUP3 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E08 DUP3 PUSH2 0x1DED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E18 DUP2 PUSH2 0x1DFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E31 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1E4B PUSH0 DUP4 ADD DUP13 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E58 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1E72 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1E7F PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E8C PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1EA6 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1EB4 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE5 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF6 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F44 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1F00 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F70 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1F7D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F8D DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA8 DUP2 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC3 JUMPI PUSH2 0x1FC2 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD0 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x200D PUSH1 0xF DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2018 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203A DUP2 PUSH2 0x2001 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2078 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2083 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2091 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20A8 JUMPI PUSH2 0x20A7 PUSH2 0x2041 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20E3 PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x20EE DUP3 PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2110 DUP2 PUSH2 0x20D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x214E DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2159 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2169 JUMPI PUSH2 0x2168 PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x217E DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x2041 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534454207061796F7574206661696C65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21DB PUSH1 0x12 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E6 DUP3 PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2208 DUP2 PUSH2 0x21CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2222 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x222F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x223C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203E3D2031205354454D000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2278 PUSH1 0x1A DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2283 DUP3 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A5 DUP2 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203C3D2053656C6C2072617465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22E0 PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x22EB DUP3 PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230D DUP2 PUSH2 0x22D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C2072617465206D75737420626520E289A52031205354454D20706572 PUSH0 DUP3 ADD MSTORE PUSH32 0x2055534454000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x236E PUSH1 0x25 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2379 DUP3 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x239B DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23B5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x23C2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x23CF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240B PUSH1 0x14 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2416 DUP3 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2438 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2452 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x245F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2474 DUP2 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248F JUMPI PUSH2 0x248E PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249C DUP5 DUP3 DUP6 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24B8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x24C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x24D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24E4 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EF DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2507 JUMPI PUSH2 0x2506 PUSH2 0x2041 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 RETURN 0xCB 0xAA 0xA7 0xC2 SDIV DUP4 MUL 0xB4 0xCD 0xD NOT CREATE2 PUSH26 0xA462CD1589F959130F52B258395171BC0264736F6C634300081A STOP CALLER ",
							"sourceMap": "237:4979:6:-:0;;;336:4;311:29;;403:4;377:30;;485:42;459:68;;;;;;;;;;;;;;;;;;;;565:42;533:74;;;;;;;;;;;;;;;;;;;;1251:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1349:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1390:17:6::2;1371:9;;:37;;;;;;;;;;;;;;;;;;1418;1424:8;;;;;;;;;;;1450:4;1434:13;:20;;;;:::i;:::-;1418:5;;;:37;;:::i;:::-;1251:211:::0;;237:4979;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:410;7440:7;7463:20;7481:1;7463:20;:::i;:::-;7458:25;;7497:20;7515:1;7497:20;:::i;:::-;7492:25;;7552:1;7549;7545:9;7574:30;7592:11;7574:30;:::i;:::-;7563:41;;7753:1;7744:7;7740:15;7737:1;7734:22;7714:1;7707:9;7687:83;7664:139;;7783:18;;:::i;:::-;7664:139;7448:362;7400:410;;;;:::o;7816:191::-;7856:3;7875:20;7893:1;7875:20;:::i;:::-;7870:25;;7909:20;7927:1;7909:20;:::i;:::-;7904:25;;7952:1;7949;7945:9;7938:16;;7973:3;7970:1;7967:10;7964:36;;;7980:18;;:::i;:::-;7964:36;7816:191;;;;:::o;8013:118::-;8100:24;8118:5;8100:24;:::i;:::-;8095:3;8088:37;8013:118;;:::o;8137:442::-;8286:4;8324:2;8313:9;8309:18;8301:26;;8337:71;8405:1;8394:9;8390:17;8381:6;8337:71;:::i;:::-;8418:72;8486:2;8475:9;8471:18;8462:6;8418:72;:::i;:::-;8500;8568:2;8557:9;8553:18;8544:6;8500:72;:::i;:::-;8137:442;;;;;;:::o;8585:222::-;8678:4;8716:2;8705:9;8701:18;8693:26;;8729:71;8797:1;8786:9;8782:17;8773:6;8729:71;:::i;:::-;8585:222;;;;:::o;237:4979:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 4930,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5919,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 5792,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4948,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 5470,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4923,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5083,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5597,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 5230,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6382,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 4476,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1439,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2846,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1217": {
									"entryPoint": 3482,
									"id": 1217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyRate_948": {
									"entryPoint": 4917,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyStem_1085": {
									"entryPoint": 3672,
									"id": 1085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1978,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getConfig_1375": {
									"entryPoint": 4110,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 9
								},
								"@mint_1195": {
									"entryPoint": 1986,
									"id": 1195,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1295,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3150,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@profitTreasury_957": {
									"entryPoint": 4748,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2915,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellRate_951": {
									"entryPoint": 2840,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellStem_1173": {
									"entryPoint": 2105,
									"id": 1173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBuyRate_1247": {
									"entryPoint": 2934,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProfitTreasury_1326": {
									"entryPoint": 1473,
									"id": 1326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellRate_1270": {
									"entryPoint": 3190,
									"id": 1270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_1310": {
									"entryPoint": 4606,
									"id": 1310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 3338,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1923,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1932,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4785,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3601,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_954": {
									"entryPoint": 2803,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtToken_945": {
									"entryPoint": 3635,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUSDT_1294": {
									"entryPoint": 1614,
									"id": 1294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 7695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9122,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9381,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7735,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b": {
									"entryPoint": 8772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28": {
									"entryPoint": 8980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4": {
									"entryPoint": 8615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5": {
									"entryPoint": 8876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20216:7",
										"nodeType": "YulBlock",
										"src": "0:20216:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3405:263:7",
													"nodeType": "YulBlock",
													"src": "3405:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:7",
																"nodeType": "YulBlock",
																"src": "3451:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:7"
																			},
																			"nativeSrc": "3453:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:7"
																		},
																		"nativeSrc": "3453:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:7"
																		},
																		"nativeSrc": "3422:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:7"
																},
																"nativeSrc": "3418:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:7"
															},
															"nativeSrc": "3415:119:7",
															"nodeType": "YulIf",
															"src": "3415:119:7"
														},
														{
															"nativeSrc": "3544:117:7",
															"nodeType": "YulBlock",
															"src": "3544:117:7",
															"statements": [
																{
																	"nativeSrc": "3559:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:7"
																				},
																				"nativeSrc": "3619:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:7"
																		},
																		"nativeSrc": "3598:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:7",
														"nodeType": "YulTypedName",
														"src": "3375:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:7",
														"nodeType": "YulTypedName",
														"src": "3386:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:7",
														"nodeType": "YulTypedName",
														"src": "3398:6:7",
														"type": ""
													}
												],
												"src": "3339:329:7"
											},
											{
												"body": {
													"nativeSrc": "3739:53:7",
													"nodeType": "YulBlock",
													"src": "3739:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:7"
																		},
																		"nativeSrc": "3761:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:7"
																},
																"nativeSrc": "3749:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:7"
															},
															"nativeSrc": "3749:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:7",
														"nodeType": "YulTypedName",
														"src": "3727:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:7",
														"nodeType": "YulTypedName",
														"src": "3734:3:7",
														"type": ""
													}
												],
												"src": "3674:118:7"
											},
											{
												"body": {
													"nativeSrc": "3896:124:7",
													"nodeType": "YulBlock",
													"src": "3896:124:7",
													"statements": [
														{
															"nativeSrc": "3906:26:7",
															"nodeType": "YulAssignment",
															"src": "3906:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:7"
																},
																"nativeSrc": "3914:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:7"
																		},
																		"nativeSrc": "3995:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:7"
																},
																"nativeSrc": "3942:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:7"
															},
															"nativeSrc": "3942:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:7",
														"nodeType": "YulTypedName",
														"src": "3868:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:7",
														"nodeType": "YulTypedName",
														"src": "3880:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:7",
														"nodeType": "YulTypedName",
														"src": "3891:4:7",
														"type": ""
													}
												],
												"src": "3798:222:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5147:263:7",
													"nodeType": "YulBlock",
													"src": "5147:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:7",
																"nodeType": "YulBlock",
																"src": "5193:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:7"
																			},
																			"nativeSrc": "5195:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:7"
																		},
																		"nativeSrc": "5195:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:7"
																		},
																		"nativeSrc": "5164:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:7"
																},
																"nativeSrc": "5160:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:7"
															},
															"nativeSrc": "5157:119:7",
															"nodeType": "YulIf",
															"src": "5157:119:7"
														},
														{
															"nativeSrc": "5286:117:7",
															"nodeType": "YulBlock",
															"src": "5286:117:7",
															"statements": [
																{
																	"nativeSrc": "5301:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:7"
																				},
																				"nativeSrc": "5361:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:7"
																		},
																		"nativeSrc": "5340:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:7",
														"nodeType": "YulTypedName",
														"src": "5117:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:7",
														"nodeType": "YulTypedName",
														"src": "5128:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:7",
														"nodeType": "YulTypedName",
														"src": "5140:6:7",
														"type": ""
													}
												],
												"src": "5081:329:7"
											},
											{
												"body": {
													"nativeSrc": "5481:53:7",
													"nodeType": "YulBlock",
													"src": "5481:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:7"
																		},
																		"nativeSrc": "5503:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:7"
																},
																"nativeSrc": "5491:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:7"
															},
															"nativeSrc": "5491:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:7",
														"nodeType": "YulTypedName",
														"src": "5469:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:7",
														"nodeType": "YulTypedName",
														"src": "5476:3:7",
														"type": ""
													}
												],
												"src": "5416:118:7"
											},
											{
												"body": {
													"nativeSrc": "5638:124:7",
													"nodeType": "YulBlock",
													"src": "5638:124:7",
													"statements": [
														{
															"nativeSrc": "5648:26:7",
															"nodeType": "YulAssignment",
															"src": "5648:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:7"
																},
																"nativeSrc": "5656:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:7"
																		},
																		"nativeSrc": "5737:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:7"
																},
																"nativeSrc": "5684:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:7"
															},
															"nativeSrc": "5684:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:7",
														"nodeType": "YulTypedName",
														"src": "5610:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:7",
														"nodeType": "YulTypedName",
														"src": "5622:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:7",
														"nodeType": "YulTypedName",
														"src": "5633:4:7",
														"type": ""
													}
												],
												"src": "5540:222:7"
											},
											{
												"body": {
													"nativeSrc": "5800:28:7",
													"nodeType": "YulBlock",
													"src": "5800:28:7",
													"statements": [
														{
															"nativeSrc": "5810:12:7",
															"nodeType": "YulAssignment",
															"src": "5810:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5817:5:7",
																"nodeType": "YulIdentifier",
																"src": "5817:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5810:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5768:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5786:5:7",
														"nodeType": "YulTypedName",
														"src": "5786:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5796:3:7",
														"nodeType": "YulTypedName",
														"src": "5796:3:7",
														"type": ""
													}
												],
												"src": "5768:60:7"
											},
											{
												"body": {
													"nativeSrc": "5894:82:7",
													"nodeType": "YulBlock",
													"src": "5894:82:7",
													"statements": [
														{
															"nativeSrc": "5904:66:7",
															"nodeType": "YulAssignment",
															"src": "5904:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5962:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5962:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5944:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5944:17:7"
																				},
																				"nativeSrc": "5944:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5944:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5935:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5935:8:7"
																		},
																		"nativeSrc": "5935:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5935:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5917:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5917:17:7"
																},
																"nativeSrc": "5917:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5917:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5904:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5904:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5834:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5874:5:7",
														"nodeType": "YulTypedName",
														"src": "5874:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5884:9:7",
														"nodeType": "YulTypedName",
														"src": "5884:9:7",
														"type": ""
													}
												],
												"src": "5834:142:7"
											},
											{
												"body": {
													"nativeSrc": "6042:66:7",
													"nodeType": "YulBlock",
													"src": "6042:66:7",
													"statements": [
														{
															"nativeSrc": "6052:50:7",
															"nodeType": "YulAssignment",
															"src": "6052:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6096:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6096:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6065:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6065:30:7"
																},
																"nativeSrc": "6065:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6065:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6052:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6052:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5982:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6022:5:7",
														"nodeType": "YulTypedName",
														"src": "6022:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6032:9:7",
														"nodeType": "YulTypedName",
														"src": "6032:9:7",
														"type": ""
													}
												],
												"src": "5982:126:7"
											},
											{
												"body": {
													"nativeSrc": "6188:66:7",
													"nodeType": "YulBlock",
													"src": "6188:66:7",
													"statements": [
														{
															"nativeSrc": "6198:50:7",
															"nodeType": "YulAssignment",
															"src": "6198:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6242:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6242:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6211:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6211:30:7"
																},
																"nativeSrc": "6211:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6211:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6198:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6198:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "6114:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6168:5:7",
														"nodeType": "YulTypedName",
														"src": "6168:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6178:9:7",
														"nodeType": "YulTypedName",
														"src": "6178:9:7",
														"type": ""
													}
												],
												"src": "6114:140:7"
											},
											{
												"body": {
													"nativeSrc": "6339:80:7",
													"nodeType": "YulBlock",
													"src": "6339:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6356:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6356:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6406:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6406:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "6361:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "6361:44:7"
																		},
																		"nativeSrc": "6361:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:7"
																},
																"nativeSrc": "6349:64:7",
																"nodeType": "YulFunctionCall",
																"src": "6349:64:7"
															},
															"nativeSrc": "6349:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "6349:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "6260:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6327:5:7",
														"nodeType": "YulTypedName",
														"src": "6327:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6334:3:7",
														"nodeType": "YulTypedName",
														"src": "6334:3:7",
														"type": ""
													}
												],
												"src": "6260:159:7"
											},
											{
												"body": {
													"nativeSrc": "6537:138:7",
													"nodeType": "YulBlock",
													"src": "6537:138:7",
													"statements": [
														{
															"nativeSrc": "6547:26:7",
															"nodeType": "YulAssignment",
															"src": "6547:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6559:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6559:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6555:3:7"
																},
																"nativeSrc": "6555:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6555:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6547:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6547:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6641:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6641:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6665:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:7"
																		},
																		"nativeSrc": "6650:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "6583:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "6583:57:7"
																},
																"nativeSrc": "6583:85:7",
																"nodeType": "YulFunctionCall",
																"src": "6583:85:7"
															},
															"nativeSrc": "6583:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "6583:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "6425:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6509:9:7",
														"nodeType": "YulTypedName",
														"src": "6509:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6521:6:7",
														"nodeType": "YulTypedName",
														"src": "6521:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6532:4:7",
														"nodeType": "YulTypedName",
														"src": "6532:4:7",
														"type": ""
													}
												],
												"src": "6425:250:7"
											},
											{
												"body": {
													"nativeSrc": "7003:786:7",
													"nodeType": "YulBlock",
													"src": "7003:786:7",
													"statements": [
														{
															"nativeSrc": "7013:27:7",
															"nodeType": "YulAssignment",
															"src": "7013:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7025:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7025:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7036:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7036:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7021:3:7"
																},
																"nativeSrc": "7021:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7021:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7013:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7013:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7094:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7094:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7107:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7118:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7118:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7103:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7103:3:7"
																		},
																		"nativeSrc": "7103:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7103:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7050:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7050:43:7"
																},
																"nativeSrc": "7050:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7050:71:7"
															},
															"nativeSrc": "7050:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7050:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7175:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7175:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7188:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7188:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7199:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7199:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7184:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7184:3:7"
																		},
																		"nativeSrc": "7184:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7184:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7131:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7131:43:7"
																},
																"nativeSrc": "7131:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7131:72:7"
															},
															"nativeSrc": "7131:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7131:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7257:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7257:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7270:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7270:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7281:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7281:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7266:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7266:3:7"
																		},
																		"nativeSrc": "7266:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7266:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7213:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7213:43:7"
																},
																"nativeSrc": "7213:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7213:72:7"
															},
															"nativeSrc": "7213:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7213:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7339:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7339:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7352:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7363:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7348:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:7"
																		},
																		"nativeSrc": "7348:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7295:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7295:43:7"
																},
																"nativeSrc": "7295:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7295:72:7"
															},
															"nativeSrc": "7295:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7295:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7421:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7421:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7434:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7434:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7445:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7445:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7430:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7430:3:7"
																		},
																		"nativeSrc": "7430:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7430:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7377:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7377:43:7"
																},
																"nativeSrc": "7377:73:7",
																"nodeType": "YulFunctionCall",
																"src": "7377:73:7"
															},
															"nativeSrc": "7377:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "7377:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "7504:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7504:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7517:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7517:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7528:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7528:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7513:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7513:3:7"
																		},
																		"nativeSrc": "7513:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7513:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7460:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7460:43:7"
																},
																"nativeSrc": "7460:73:7",
																"nodeType": "YulFunctionCall",
																"src": "7460:73:7"
															},
															"nativeSrc": "7460:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "7460:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "7587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7587:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7600:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7600:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7611:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7611:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:7"
																		},
																		"nativeSrc": "7596:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7596:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7543:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7543:43:7"
																},
																"nativeSrc": "7543:73:7",
																"nodeType": "YulFunctionCall",
																"src": "7543:73:7"
															},
															"nativeSrc": "7543:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "7543:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "7670:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7670:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7683:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7683:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7694:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7694:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7679:3:7"
																		},
																		"nativeSrc": "7679:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7679:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7626:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7626:43:7"
																},
																"nativeSrc": "7626:73:7",
																"nodeType": "YulFunctionCall",
																"src": "7626:73:7"
															},
															"nativeSrc": "7626:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "7626:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "7753:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7753:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7766:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7777:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7777:3:7",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7762:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:7"
																		},
																		"nativeSrc": "7762:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7762:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7709:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7709:43:7"
																},
																"nativeSrc": "7709:73:7",
																"nodeType": "YulFunctionCall",
																"src": "7709:73:7"
															},
															"nativeSrc": "7709:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "7709:73:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6681:1108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6911:9:7",
														"nodeType": "YulTypedName",
														"src": "6911:9:7",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "6923:6:7",
														"nodeType": "YulTypedName",
														"src": "6923:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6931:6:7",
														"nodeType": "YulTypedName",
														"src": "6931:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6939:6:7",
														"nodeType": "YulTypedName",
														"src": "6939:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6947:6:7",
														"nodeType": "YulTypedName",
														"src": "6947:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6955:6:7",
														"nodeType": "YulTypedName",
														"src": "6955:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6963:6:7",
														"nodeType": "YulTypedName",
														"src": "6963:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6971:6:7",
														"nodeType": "YulTypedName",
														"src": "6971:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6979:6:7",
														"nodeType": "YulTypedName",
														"src": "6979:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6987:6:7",
														"nodeType": "YulTypedName",
														"src": "6987:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6998:4:7",
														"nodeType": "YulTypedName",
														"src": "6998:4:7",
														"type": ""
													}
												],
												"src": "6681:1108:7"
											},
											{
												"body": {
													"nativeSrc": "7878:391:7",
													"nodeType": "YulBlock",
													"src": "7878:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7924:83:7",
																"nodeType": "YulBlock",
																"src": "7924:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7926:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7926:77:7"
																			},
																			"nativeSrc": "7926:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7926:79:7"
																		},
																		"nativeSrc": "7926:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7926:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7899:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7899:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7908:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7908:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:7"
																		},
																		"nativeSrc": "7895:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7920:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7891:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7891:3:7"
																},
																"nativeSrc": "7891:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7891:32:7"
															},
															"nativeSrc": "7888:119:7",
															"nodeType": "YulIf",
															"src": "7888:119:7"
														},
														{
															"nativeSrc": "8017:117:7",
															"nodeType": "YulBlock",
															"src": "8017:117:7",
															"statements": [
																{
																	"nativeSrc": "8032:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8032:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8046:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8046:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8036:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8036:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8061:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8061:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8096:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8096:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8107:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8107:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8092:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8092:3:7"
																				},
																				"nativeSrc": "8092:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8092:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8116:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8071:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8071:20:7"
																		},
																		"nativeSrc": "8071:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8061:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8061:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8144:118:7",
															"nodeType": "YulBlock",
															"src": "8144:118:7",
															"statements": [
																{
																	"nativeSrc": "8159:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8159:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8173:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8173:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8163:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8163:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8189:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8189:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8224:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8224:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8235:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8235:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8220:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8220:3:7"
																				},
																				"nativeSrc": "8220:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8220:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8244:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8244:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8199:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8199:20:7"
																		},
																		"nativeSrc": "8199:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8199:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8189:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8189:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7795:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7840:9:7",
														"nodeType": "YulTypedName",
														"src": "7840:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7851:7:7",
														"nodeType": "YulTypedName",
														"src": "7851:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7863:6:7",
														"nodeType": "YulTypedName",
														"src": "7863:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7871:6:7",
														"nodeType": "YulTypedName",
														"src": "7871:6:7",
														"type": ""
													}
												],
												"src": "7795:474:7"
											},
											{
												"body": {
													"nativeSrc": "8303:152:7",
													"nodeType": "YulBlock",
													"src": "8303:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8320:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8323:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8323:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:7"
																},
																"nativeSrc": "8313:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8313:88:7"
															},
															"nativeSrc": "8313:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8313:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8417:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8420:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8420:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8410:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:7"
																},
																"nativeSrc": "8410:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8410:15:7"
															},
															"nativeSrc": "8410:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8410:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8441:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8441:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8444:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8444:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8434:6:7"
																},
																"nativeSrc": "8434:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8434:15:7"
															},
															"nativeSrc": "8434:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8434:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8275:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8275:180:7"
											},
											{
												"body": {
													"nativeSrc": "8512:269:7",
													"nodeType": "YulBlock",
													"src": "8512:269:7",
													"statements": [
														{
															"nativeSrc": "8522:22:7",
															"nodeType": "YulAssignment",
															"src": "8522:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8536:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8536:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8542:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8542:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8532:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:7"
																},
																"nativeSrc": "8532:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8532:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:7"
																}
															]
														},
														{
															"nativeSrc": "8553:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8553:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8583:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8583:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8589:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8589:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8579:3:7"
																},
																"nativeSrc": "8579:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8579:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8557:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8557:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8630:51:7",
																"nodeType": "YulBlock",
																"src": "8630:51:7",
																"statements": [
																	{
																		"nativeSrc": "8644:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8644:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8658:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8658:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8666:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8666:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8654:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8654:3:7"
																			},
																			"nativeSrc": "8654:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8654:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8644:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8644:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8610:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8610:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:7"
																},
																"nativeSrc": "8603:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8603:26:7"
															},
															"nativeSrc": "8600:81:7",
															"nodeType": "YulIf",
															"src": "8600:81:7"
														},
														{
															"body": {
																"nativeSrc": "8733:42:7",
																"nodeType": "YulBlock",
																"src": "8733:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8747:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8747:16:7"
																			},
																			"nativeSrc": "8747:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8747:18:7"
																		},
																		"nativeSrc": "8747:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8747:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8697:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8697:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8720:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8720:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8728:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8728:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8717:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8717:2:7"
																		},
																		"nativeSrc": "8717:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8717:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8694:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8694:2:7"
																},
																"nativeSrc": "8694:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8694:38:7"
															},
															"nativeSrc": "8691:84:7",
															"nodeType": "YulIf",
															"src": "8691:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8461:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8496:4:7",
														"nodeType": "YulTypedName",
														"src": "8496:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8505:6:7",
														"nodeType": "YulTypedName",
														"src": "8505:6:7",
														"type": ""
													}
												],
												"src": "8461:320:7"
											},
											{
												"body": {
													"nativeSrc": "8913:206:7",
													"nodeType": "YulBlock",
													"src": "8913:206:7",
													"statements": [
														{
															"nativeSrc": "8923:26:7",
															"nodeType": "YulAssignment",
															"src": "8923:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8935:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8935:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8946:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8946:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8931:3:7"
																},
																"nativeSrc": "8931:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8931:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8923:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8923:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9003:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9003:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9016:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9016:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9027:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9027:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9012:3:7"
																		},
																		"nativeSrc": "9012:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9012:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8959:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8959:43:7"
																},
																"nativeSrc": "8959:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8959:71:7"
															},
															"nativeSrc": "8959:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8959:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9084:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9084:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9097:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9097:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9108:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9108:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9093:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9093:3:7"
																		},
																		"nativeSrc": "9093:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9093:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9040:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9040:43:7"
																},
																"nativeSrc": "9040:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9040:72:7"
															},
															"nativeSrc": "9040:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9040:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8787:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8877:9:7",
														"nodeType": "YulTypedName",
														"src": "8877:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8889:6:7",
														"nodeType": "YulTypedName",
														"src": "8889:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8897:6:7",
														"nodeType": "YulTypedName",
														"src": "8897:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8908:4:7",
														"nodeType": "YulTypedName",
														"src": "8908:4:7",
														"type": ""
													}
												],
												"src": "8787:332:7"
											},
											{
												"body": {
													"nativeSrc": "9165:76:7",
													"nodeType": "YulBlock",
													"src": "9165:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9219:16:7",
																"nodeType": "YulBlock",
																"src": "9219:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9228:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9228:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9231:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9231:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9221:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9221:6:7"
																			},
																			"nativeSrc": "9221:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:12:7"
																		},
																		"nativeSrc": "9221:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9221:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9188:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9188:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9210:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9210:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9195:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "9195:14:7"
																				},
																				"nativeSrc": "9195:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9195:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9185:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9185:2:7"
																		},
																		"nativeSrc": "9185:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9178:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:7"
																},
																"nativeSrc": "9178:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9178:40:7"
															},
															"nativeSrc": "9175:60:7",
															"nodeType": "YulIf",
															"src": "9175:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9125:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9158:5:7",
														"nodeType": "YulTypedName",
														"src": "9158:5:7",
														"type": ""
													}
												],
												"src": "9125:116:7"
											},
											{
												"body": {
													"nativeSrc": "9307:77:7",
													"nodeType": "YulBlock",
													"src": "9307:77:7",
													"statements": [
														{
															"nativeSrc": "9317:22:7",
															"nodeType": "YulAssignment",
															"src": "9317:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9332:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9332:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9326:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9326:5:7"
																},
																"nativeSrc": "9326:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9326:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9317:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9317:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9372:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9372:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9348:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "9348:23:7"
																},
																"nativeSrc": "9348:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9348:30:7"
															},
															"nativeSrc": "9348:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9348:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9247:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9285:6:7",
														"nodeType": "YulTypedName",
														"src": "9285:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9293:3:7",
														"nodeType": "YulTypedName",
														"src": "9293:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9301:5:7",
														"nodeType": "YulTypedName",
														"src": "9301:5:7",
														"type": ""
													}
												],
												"src": "9247:137:7"
											},
											{
												"body": {
													"nativeSrc": "9464:271:7",
													"nodeType": "YulBlock",
													"src": "9464:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9510:83:7",
																"nodeType": "YulBlock",
																"src": "9510:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9512:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9512:77:7"
																			},
																			"nativeSrc": "9512:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9512:79:7"
																		},
																		"nativeSrc": "9512:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9512:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9485:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9485:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9494:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9494:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9481:3:7"
																		},
																		"nativeSrc": "9481:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9481:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9506:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9506:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9477:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9477:3:7"
																},
																"nativeSrc": "9477:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9477:32:7"
															},
															"nativeSrc": "9474:119:7",
															"nodeType": "YulIf",
															"src": "9474:119:7"
														},
														{
															"nativeSrc": "9603:125:7",
															"nodeType": "YulBlock",
															"src": "9603:125:7",
															"statements": [
																{
																	"nativeSrc": "9618:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9618:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9632:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9632:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9622:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9622:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9647:71:7",
																	"nodeType": "YulAssignment",
																	"src": "9647:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9690:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9690:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9701:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9701:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9686:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9686:3:7"
																				},
																				"nativeSrc": "9686:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9686:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9710:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9710:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9657:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "9657:28:7"
																		},
																		"nativeSrc": "9657:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9657:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9647:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9647:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9390:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9434:9:7",
														"nodeType": "YulTypedName",
														"src": "9434:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9445:7:7",
														"nodeType": "YulTypedName",
														"src": "9445:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9457:6:7",
														"nodeType": "YulTypedName",
														"src": "9457:6:7",
														"type": ""
													}
												],
												"src": "9390:345:7"
											},
											{
												"body": {
													"nativeSrc": "9847:59:7",
													"nodeType": "YulBlock",
													"src": "9847:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9869:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9869:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9877:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9877:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9865:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:7"
																		},
																		"nativeSrc": "9865:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9865:14:7"
																	},
																	{
																		"hexValue": "5769746864726177206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9881:17:7",
																		"nodeType": "YulLiteral",
																		"src": "9881:17:7",
																		"type": "",
																		"value": "Withdraw failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:7"
																},
																"nativeSrc": "9858:41:7",
																"nodeType": "YulFunctionCall",
																"src": "9858:41:7"
															},
															"nativeSrc": "9858:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "9858:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
												"nativeSrc": "9741:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9839:6:7",
														"nodeType": "YulTypedName",
														"src": "9839:6:7",
														"type": ""
													}
												],
												"src": "9741:165:7"
											},
											{
												"body": {
													"nativeSrc": "10058:220:7",
													"nodeType": "YulBlock",
													"src": "10058:220:7",
													"statements": [
														{
															"nativeSrc": "10068:74:7",
															"nodeType": "YulAssignment",
															"src": "10068:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10134:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10134:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10139:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10075:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10075:58:7"
																},
																"nativeSrc": "10075:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10075:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10068:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10068:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10240:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10240:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																	"nativeSrc": "10151:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10151:88:7"
																},
																"nativeSrc": "10151:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10151:93:7"
															},
															"nativeSrc": "10151:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10151:93:7"
														},
														{
															"nativeSrc": "10253:19:7",
															"nodeType": "YulAssignment",
															"src": "10253:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10264:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10264:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10269:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10260:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10260:3:7"
																},
																"nativeSrc": "10260:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10260:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10253:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10253:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9912:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10046:3:7",
														"nodeType": "YulTypedName",
														"src": "10046:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10054:3:7",
														"nodeType": "YulTypedName",
														"src": "10054:3:7",
														"type": ""
													}
												],
												"src": "9912:366:7"
											},
											{
												"body": {
													"nativeSrc": "10455:248:7",
													"nodeType": "YulBlock",
													"src": "10455:248:7",
													"statements": [
														{
															"nativeSrc": "10465:26:7",
															"nodeType": "YulAssignment",
															"src": "10465:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10477:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10477:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10488:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10488:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10473:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10473:3:7"
																},
																"nativeSrc": "10473:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10473:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10465:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10465:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10512:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10512:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10523:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10523:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:7"
																		},
																		"nativeSrc": "10508:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10508:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10531:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10531:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10527:3:7"
																		},
																		"nativeSrc": "10527:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10527:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:7"
																},
																"nativeSrc": "10501:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10501:47:7"
															},
															"nativeSrc": "10501:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10501:47:7"
														},
														{
															"nativeSrc": "10557:139:7",
															"nodeType": "YulAssignment",
															"src": "10557:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10691:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10691:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10565:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10565:124:7"
																},
																"nativeSrc": "10565:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10565:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10557:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10557:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10284:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10435:9:7",
														"nodeType": "YulTypedName",
														"src": "10435:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10450:4:7",
														"nodeType": "YulTypedName",
														"src": "10450:4:7",
														"type": ""
													}
												],
												"src": "10284:419:7"
											},
											{
												"body": {
													"nativeSrc": "10737:152:7",
													"nodeType": "YulBlock",
													"src": "10737:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10754:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10754:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10757:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10757:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10747:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10747:6:7"
																},
																"nativeSrc": "10747:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10747:88:7"
															},
															"nativeSrc": "10747:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10747:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10851:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10851:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10854:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10854:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10844:6:7"
																},
																"nativeSrc": "10844:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10844:15:7"
															},
															"nativeSrc": "10844:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10844:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10875:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10875:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10878:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10878:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10868:6:7"
																},
																"nativeSrc": "10868:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10868:15:7"
															},
															"nativeSrc": "10868:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10868:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10709:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10709:180:7"
											},
											{
												"body": {
													"nativeSrc": "10943:362:7",
													"nodeType": "YulBlock",
													"src": "10943:362:7",
													"statements": [
														{
															"nativeSrc": "10953:25:7",
															"nodeType": "YulAssignment",
															"src": "10953:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10976:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10976:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10958:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10958:17:7"
																},
																"nativeSrc": "10958:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10958:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10953:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10953:1:7"
																}
															]
														},
														{
															"nativeSrc": "10987:25:7",
															"nodeType": "YulAssignment",
															"src": "10987:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11010:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11010:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10992:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10992:17:7"
																},
																"nativeSrc": "10992:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10992:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10987:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10987:1:7"
																}
															]
														},
														{
															"nativeSrc": "11021:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11021:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11044:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11047:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11047:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11040:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11040:3:7"
																},
																"nativeSrc": "11040:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11040:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11025:11:7",
																	"nodeType": "YulTypedName",
																	"src": "11025:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11058:41:7",
															"nodeType": "YulAssignment",
															"src": "11058:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11087:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "11087:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11069:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11069:17:7"
																},
																"nativeSrc": "11069:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11069:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11058:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11058:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11276:22:7",
																"nodeType": "YulBlock",
																"src": "11276:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11278:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11278:16:7"
																			},
																			"nativeSrc": "11278:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11278:18:7"
																		},
																		"nativeSrc": "11278:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11278:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11209:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11209:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11202:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11202:6:7"
																				},
																				"nativeSrc": "11202:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11202:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11232:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11232:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11239:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "11239:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11248:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "11248:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11235:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11235:3:7"
																						},
																						"nativeSrc": "11235:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11235:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11229:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11229:2:7"
																				},
																				"nativeSrc": "11229:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11229:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11182:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11182:2:7"
																		},
																		"nativeSrc": "11182:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11182:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11162:6:7"
																},
																"nativeSrc": "11162:113:7",
																"nodeType": "YulFunctionCall",
																"src": "11162:113:7"
															},
															"nativeSrc": "11159:139:7",
															"nodeType": "YulIf",
															"src": "11159:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10895:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10926:1:7",
														"nodeType": "YulTypedName",
														"src": "10926:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10929:1:7",
														"nodeType": "YulTypedName",
														"src": "10929:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10935:7:7",
														"nodeType": "YulTypedName",
														"src": "10935:7:7",
														"type": ""
													}
												],
												"src": "10895:410:7"
											},
											{
												"body": {
													"nativeSrc": "11417:73:7",
													"nodeType": "YulBlock",
													"src": "11417:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11439:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11439:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11447:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11447:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11435:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11435:3:7"
																		},
																		"nativeSrc": "11435:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11435:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "11451:31:7",
																		"nodeType": "YulLiteral",
																		"src": "11451:31:7",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11428:6:7"
																},
																"nativeSrc": "11428:55:7",
																"nodeType": "YulFunctionCall",
																"src": "11428:55:7"
															},
															"nativeSrc": "11428:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "11428:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "11311:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11409:6:7",
														"nodeType": "YulTypedName",
														"src": "11409:6:7",
														"type": ""
													}
												],
												"src": "11311:179:7"
											},
											{
												"body": {
													"nativeSrc": "11642:220:7",
													"nodeType": "YulBlock",
													"src": "11642:220:7",
													"statements": [
														{
															"nativeSrc": "11652:74:7",
															"nodeType": "YulAssignment",
															"src": "11652:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11718:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11718:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11723:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11659:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11659:58:7"
																},
																"nativeSrc": "11659:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11659:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11652:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11652:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11824:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11824:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "11735:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11735:88:7"
																},
																"nativeSrc": "11735:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11735:93:7"
															},
															"nativeSrc": "11735:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11735:93:7"
														},
														{
															"nativeSrc": "11837:19:7",
															"nodeType": "YulAssignment",
															"src": "11837:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11848:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11848:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11853:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11853:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11844:3:7"
																},
																"nativeSrc": "11844:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11844:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11837:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11496:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11630:3:7",
														"nodeType": "YulTypedName",
														"src": "11630:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11638:3:7",
														"nodeType": "YulTypedName",
														"src": "11638:3:7",
														"type": ""
													}
												],
												"src": "11496:366:7"
											},
											{
												"body": {
													"nativeSrc": "12039:248:7",
													"nodeType": "YulBlock",
													"src": "12039:248:7",
													"statements": [
														{
															"nativeSrc": "12049:26:7",
															"nodeType": "YulAssignment",
															"src": "12049:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12061:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12061:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12072:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12072:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12057:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12057:3:7"
																},
																"nativeSrc": "12057:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12057:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12049:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12049:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12096:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12096:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12107:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12107:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12092:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12092:3:7"
																		},
																		"nativeSrc": "12092:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12092:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12115:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12115:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12121:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12121:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12111:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12111:3:7"
																		},
																		"nativeSrc": "12111:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12111:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12085:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12085:6:7"
																},
																"nativeSrc": "12085:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12085:47:7"
															},
															"nativeSrc": "12085:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12085:47:7"
														},
														{
															"nativeSrc": "12141:139:7",
															"nodeType": "YulAssignment",
															"src": "12141:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12275:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12275:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12149:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12149:124:7"
																},
																"nativeSrc": "12149:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12149:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12141:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12141:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11868:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12019:9:7",
														"nodeType": "YulTypedName",
														"src": "12019:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12034:4:7",
														"nodeType": "YulTypedName",
														"src": "12034:4:7",
														"type": ""
													}
												],
												"src": "11868:419:7"
											},
											{
												"body": {
													"nativeSrc": "12321:152:7",
													"nodeType": "YulBlock",
													"src": "12321:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12338:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12338:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12341:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12341:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12331:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12331:6:7"
																},
																"nativeSrc": "12331:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12331:88:7"
															},
															"nativeSrc": "12331:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12331:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12435:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12435:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12438:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12438:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12428:6:7"
																},
																"nativeSrc": "12428:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12428:15:7"
															},
															"nativeSrc": "12428:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12428:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12459:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12459:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12462:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12462:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12452:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12452:6:7"
																},
																"nativeSrc": "12452:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12452:15:7"
															},
															"nativeSrc": "12452:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12452:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12293:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12293:180:7"
											},
											{
												"body": {
													"nativeSrc": "12521:143:7",
													"nodeType": "YulBlock",
													"src": "12521:143:7",
													"statements": [
														{
															"nativeSrc": "12531:25:7",
															"nodeType": "YulAssignment",
															"src": "12531:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12554:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12554:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12536:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12536:17:7"
																},
																"nativeSrc": "12536:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12536:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12531:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12531:1:7"
																}
															]
														},
														{
															"nativeSrc": "12565:25:7",
															"nodeType": "YulAssignment",
															"src": "12565:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12588:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12588:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12570:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12570:17:7"
																},
																"nativeSrc": "12570:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12570:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12565:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12565:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12612:22:7",
																"nodeType": "YulBlock",
																"src": "12612:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12614:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12614:16:7"
																			},
																			"nativeSrc": "12614:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12614:18:7"
																		},
																		"nativeSrc": "12614:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12614:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12609:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12609:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12602:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12602:6:7"
																},
																"nativeSrc": "12602:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12602:9:7"
															},
															"nativeSrc": "12599:35:7",
															"nodeType": "YulIf",
															"src": "12599:35:7"
														},
														{
															"nativeSrc": "12644:14:7",
															"nodeType": "YulAssignment",
															"src": "12644:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12653:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12653:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12656:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12656:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12649:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12649:3:7"
																},
																"nativeSrc": "12649:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12649:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12644:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12644:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12479:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12510:1:7",
														"nodeType": "YulTypedName",
														"src": "12510:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12513:1:7",
														"nodeType": "YulTypedName",
														"src": "12513:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12519:1:7",
														"nodeType": "YulTypedName",
														"src": "12519:1:7",
														"type": ""
													}
												],
												"src": "12479:185:7"
											},
											{
												"body": {
													"nativeSrc": "12715:149:7",
													"nodeType": "YulBlock",
													"src": "12715:149:7",
													"statements": [
														{
															"nativeSrc": "12725:25:7",
															"nodeType": "YulAssignment",
															"src": "12725:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12748:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12748:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12730:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12730:17:7"
																},
																"nativeSrc": "12730:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12730:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12725:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12725:1:7"
																}
															]
														},
														{
															"nativeSrc": "12759:25:7",
															"nodeType": "YulAssignment",
															"src": "12759:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12782:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12782:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12764:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12764:17:7"
																},
																"nativeSrc": "12764:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12764:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12759:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12759:1:7"
																}
															]
														},
														{
															"nativeSrc": "12793:17:7",
															"nodeType": "YulAssignment",
															"src": "12793:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12805:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12805:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12808:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12808:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12801:3:7"
																},
																"nativeSrc": "12801:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12801:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12793:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12835:22:7",
																"nodeType": "YulBlock",
																"src": "12835:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12837:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12837:16:7"
																			},
																			"nativeSrc": "12837:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12837:18:7"
																		},
																		"nativeSrc": "12837:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12837:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12826:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12826:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12832:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12832:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12823:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12823:2:7"
																},
																"nativeSrc": "12823:11:7",
																"nodeType": "YulFunctionCall",
																"src": "12823:11:7"
															},
															"nativeSrc": "12820:37:7",
															"nodeType": "YulIf",
															"src": "12820:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12670:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12701:1:7",
														"nodeType": "YulTypedName",
														"src": "12701:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12704:1:7",
														"nodeType": "YulTypedName",
														"src": "12704:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12710:4:7",
														"nodeType": "YulTypedName",
														"src": "12710:4:7",
														"type": ""
													}
												],
												"src": "12670:194:7"
											},
											{
												"body": {
													"nativeSrc": "12976:62:7",
													"nodeType": "YulBlock",
													"src": "12976:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12998:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12998:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13006:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13006:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12994:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12994:3:7"
																		},
																		"nativeSrc": "12994:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12994:14:7"
																	},
																	{
																		"hexValue": "55534454207061796f7574206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13010:20:7",
																		"nodeType": "YulLiteral",
																		"src": "13010:20:7",
																		"type": "",
																		"value": "USDT payout failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12987:6:7"
																},
																"nativeSrc": "12987:44:7",
																"nodeType": "YulFunctionCall",
																"src": "12987:44:7"
															},
															"nativeSrc": "12987:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "12987:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
												"nativeSrc": "12870:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12968:6:7",
														"nodeType": "YulTypedName",
														"src": "12968:6:7",
														"type": ""
													}
												],
												"src": "12870:168:7"
											},
											{
												"body": {
													"nativeSrc": "13190:220:7",
													"nodeType": "YulBlock",
													"src": "13190:220:7",
													"statements": [
														{
															"nativeSrc": "13200:74:7",
															"nodeType": "YulAssignment",
															"src": "13200:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13266:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13266:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13271:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13271:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13207:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13207:58:7"
																},
																"nativeSrc": "13207:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13207:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13200:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13200:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13372:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13372:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																	"nativeSrc": "13283:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13283:88:7"
																},
																"nativeSrc": "13283:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13283:93:7"
															},
															"nativeSrc": "13283:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13283:93:7"
														},
														{
															"nativeSrc": "13385:19:7",
															"nodeType": "YulAssignment",
															"src": "13385:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13396:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13396:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13401:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13401:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13392:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13392:3:7"
																},
																"nativeSrc": "13392:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13392:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13385:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13385:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13044:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13178:3:7",
														"nodeType": "YulTypedName",
														"src": "13178:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13186:3:7",
														"nodeType": "YulTypedName",
														"src": "13186:3:7",
														"type": ""
													}
												],
												"src": "13044:366:7"
											},
											{
												"body": {
													"nativeSrc": "13587:248:7",
													"nodeType": "YulBlock",
													"src": "13587:248:7",
													"statements": [
														{
															"nativeSrc": "13597:26:7",
															"nodeType": "YulAssignment",
															"src": "13597:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13609:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13609:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13620:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13620:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13605:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13605:3:7"
																},
																"nativeSrc": "13605:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13605:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13597:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13597:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13644:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13644:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13655:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13655:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13640:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13640:3:7"
																		},
																		"nativeSrc": "13640:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13640:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13663:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13663:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13669:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13669:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13659:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13659:3:7"
																		},
																		"nativeSrc": "13659:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13659:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13633:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13633:6:7"
																},
																"nativeSrc": "13633:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13633:47:7"
															},
															"nativeSrc": "13633:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13633:47:7"
														},
														{
															"nativeSrc": "13689:139:7",
															"nodeType": "YulAssignment",
															"src": "13689:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13823:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13823:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13697:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13697:124:7"
																},
																"nativeSrc": "13697:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13697:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13689:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13689:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13416:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13567:9:7",
														"nodeType": "YulTypedName",
														"src": "13567:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13582:4:7",
														"nodeType": "YulTypedName",
														"src": "13582:4:7",
														"type": ""
													}
												],
												"src": "13416:419:7"
											},
											{
												"body": {
													"nativeSrc": "13995:288:7",
													"nodeType": "YulBlock",
													"src": "13995:288:7",
													"statements": [
														{
															"nativeSrc": "14005:26:7",
															"nodeType": "YulAssignment",
															"src": "14005:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14017:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14017:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14028:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14028:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14013:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14013:3:7"
																},
																"nativeSrc": "14013:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14013:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14005:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14005:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14085:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14085:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14094:3:7"
																		},
																		"nativeSrc": "14094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14094:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14041:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14041:43:7"
																},
																"nativeSrc": "14041:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14041:71:7"
															},
															"nativeSrc": "14041:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14041:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14166:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14166:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14179:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14179:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14190:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14190:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14175:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14175:3:7"
																		},
																		"nativeSrc": "14175:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14175:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14122:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14122:43:7"
																},
																"nativeSrc": "14122:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14122:72:7"
															},
															"nativeSrc": "14122:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14122:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14248:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14248:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14261:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14261:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14272:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14272:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14257:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14257:3:7"
																		},
																		"nativeSrc": "14257:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14257:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14204:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14204:43:7"
																},
																"nativeSrc": "14204:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14204:72:7"
															},
															"nativeSrc": "14204:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14204:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13841:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13951:9:7",
														"nodeType": "YulTypedName",
														"src": "13951:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13963:6:7",
														"nodeType": "YulTypedName",
														"src": "13963:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13971:6:7",
														"nodeType": "YulTypedName",
														"src": "13971:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13979:6:7",
														"nodeType": "YulTypedName",
														"src": "13979:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13990:4:7",
														"nodeType": "YulTypedName",
														"src": "13990:4:7",
														"type": ""
													}
												],
												"src": "13841:442:7"
											},
											{
												"body": {
													"nativeSrc": "14395:70:7",
													"nodeType": "YulBlock",
													"src": "14395:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14417:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14417:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14425:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14425:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14413:3:7"
																		},
																		"nativeSrc": "14413:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14413:14:7"
																	},
																	{
																		"hexValue": "4275792072617465206d757374206265203e3d2031205354454d",
																		"kind": "string",
																		"nativeSrc": "14429:28:7",
																		"nodeType": "YulLiteral",
																		"src": "14429:28:7",
																		"type": "",
																		"value": "Buy rate must be >= 1 STEM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14406:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14406:6:7"
																},
																"nativeSrc": "14406:52:7",
																"nodeType": "YulFunctionCall",
																"src": "14406:52:7"
															},
															"nativeSrc": "14406:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "14406:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
												"nativeSrc": "14289:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14387:6:7",
														"nodeType": "YulTypedName",
														"src": "14387:6:7",
														"type": ""
													}
												],
												"src": "14289:176:7"
											},
											{
												"body": {
													"nativeSrc": "14617:220:7",
													"nodeType": "YulBlock",
													"src": "14617:220:7",
													"statements": [
														{
															"nativeSrc": "14627:74:7",
															"nodeType": "YulAssignment",
															"src": "14627:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14693:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14693:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14698:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14698:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14634:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14634:58:7"
																},
																"nativeSrc": "14634:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14634:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14627:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14799:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14799:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																	"nativeSrc": "14710:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14710:88:7"
																},
																"nativeSrc": "14710:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14710:93:7"
															},
															"nativeSrc": "14710:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14710:93:7"
														},
														{
															"nativeSrc": "14812:19:7",
															"nodeType": "YulAssignment",
															"src": "14812:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14823:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14828:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14828:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14819:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14819:3:7"
																},
																"nativeSrc": "14819:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14819:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14812:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14812:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14471:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14605:3:7",
														"nodeType": "YulTypedName",
														"src": "14605:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14613:3:7",
														"nodeType": "YulTypedName",
														"src": "14613:3:7",
														"type": ""
													}
												],
												"src": "14471:366:7"
											},
											{
												"body": {
													"nativeSrc": "15014:248:7",
													"nodeType": "YulBlock",
													"src": "15014:248:7",
													"statements": [
														{
															"nativeSrc": "15024:26:7",
															"nodeType": "YulAssignment",
															"src": "15024:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15036:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15036:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15047:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15047:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15032:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15032:3:7"
																},
																"nativeSrc": "15032:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15032:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15024:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15024:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15071:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15071:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15082:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15067:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15067:3:7"
																		},
																		"nativeSrc": "15067:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15067:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15090:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15090:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15096:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15096:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15086:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15086:3:7"
																		},
																		"nativeSrc": "15086:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15086:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15060:6:7"
																},
																"nativeSrc": "15060:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15060:47:7"
															},
															"nativeSrc": "15060:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15060:47:7"
														},
														{
															"nativeSrc": "15116:139:7",
															"nodeType": "YulAssignment",
															"src": "15116:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15250:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15250:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15124:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15124:124:7"
																},
																"nativeSrc": "15124:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15124:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15116:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15116:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14843:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14994:9:7",
														"nodeType": "YulTypedName",
														"src": "14994:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15009:4:7",
														"nodeType": "YulTypedName",
														"src": "15009:4:7",
														"type": ""
													}
												],
												"src": "14843:419:7"
											},
											{
												"body": {
													"nativeSrc": "15374:73:7",
													"nodeType": "YulBlock",
													"src": "15374:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15396:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15396:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15404:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15404:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15392:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15392:3:7"
																		},
																		"nativeSrc": "15392:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15392:14:7"
																	},
																	{
																		"hexValue": "4275792072617465206d757374206265203c3d2053656c6c2072617465",
																		"kind": "string",
																		"nativeSrc": "15408:31:7",
																		"nodeType": "YulLiteral",
																		"src": "15408:31:7",
																		"type": "",
																		"value": "Buy rate must be <= Sell rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15385:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15385:6:7"
																},
																"nativeSrc": "15385:55:7",
																"nodeType": "YulFunctionCall",
																"src": "15385:55:7"
															},
															"nativeSrc": "15385:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "15385:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
												"nativeSrc": "15268:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15366:6:7",
														"nodeType": "YulTypedName",
														"src": "15366:6:7",
														"type": ""
													}
												],
												"src": "15268:179:7"
											},
											{
												"body": {
													"nativeSrc": "15599:220:7",
													"nodeType": "YulBlock",
													"src": "15599:220:7",
													"statements": [
														{
															"nativeSrc": "15609:74:7",
															"nodeType": "YulAssignment",
															"src": "15609:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15675:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15675:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15680:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15680:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15616:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15616:58:7"
																},
																"nativeSrc": "15616:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15616:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15609:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15781:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15781:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																	"nativeSrc": "15692:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15692:88:7"
																},
																"nativeSrc": "15692:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15692:93:7"
															},
															"nativeSrc": "15692:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15692:93:7"
														},
														{
															"nativeSrc": "15794:19:7",
															"nodeType": "YulAssignment",
															"src": "15794:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15805:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15805:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15810:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15801:3:7"
																},
																"nativeSrc": "15801:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15801:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15794:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15794:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15453:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15587:3:7",
														"nodeType": "YulTypedName",
														"src": "15587:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15595:3:7",
														"nodeType": "YulTypedName",
														"src": "15595:3:7",
														"type": ""
													}
												],
												"src": "15453:366:7"
											},
											{
												"body": {
													"nativeSrc": "15996:248:7",
													"nodeType": "YulBlock",
													"src": "15996:248:7",
													"statements": [
														{
															"nativeSrc": "16006:26:7",
															"nodeType": "YulAssignment",
															"src": "16006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16018:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16018:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16029:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16029:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16014:3:7"
																},
																"nativeSrc": "16014:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16006:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16053:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16053:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16064:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16064:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16049:3:7"
																		},
																		"nativeSrc": "16049:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16049:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16072:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16072:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16068:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16068:3:7"
																		},
																		"nativeSrc": "16068:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16068:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16042:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16042:6:7"
																},
																"nativeSrc": "16042:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16042:47:7"
															},
															"nativeSrc": "16042:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16042:47:7"
														},
														{
															"nativeSrc": "16098:139:7",
															"nodeType": "YulAssignment",
															"src": "16098:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16232:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16232:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16106:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16106:124:7"
																},
																"nativeSrc": "16106:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16106:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16098:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16098:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15825:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15976:9:7",
														"nodeType": "YulTypedName",
														"src": "15976:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15991:4:7",
														"nodeType": "YulTypedName",
														"src": "15991:4:7",
														"type": ""
													}
												],
												"src": "15825:419:7"
											},
											{
												"body": {
													"nativeSrc": "16356:150:7",
													"nodeType": "YulBlock",
													"src": "16356:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16378:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16378:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16386:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16386:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16374:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16374:3:7"
																		},
																		"nativeSrc": "16374:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16374:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16390:66:7",
																		"nodeType": "YulLiteral",
																		"src": "16390:66:7",
																		"type": "",
																		"value": "0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16367:6:7"
																},
																"nativeSrc": "16367:90:7",
																"nodeType": "YulFunctionCall",
																"src": "16367:90:7"
															},
															"nativeSrc": "16367:90:7",
															"nodeType": "YulExpressionStatement",
															"src": "16367:90:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16478:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16478:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16486:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16486:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16474:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16474:3:7"
																		},
																		"nativeSrc": "16474:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16474:15:7"
																	},
																	{
																		"hexValue": "2055534454",
																		"kind": "string",
																		"nativeSrc": "16491:7:7",
																		"nodeType": "YulLiteral",
																		"src": "16491:7:7",
																		"type": "",
																		"value": " USDT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16467:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16467:6:7"
																},
																"nativeSrc": "16467:32:7",
																"nodeType": "YulFunctionCall",
																"src": "16467:32:7"
															},
															"nativeSrc": "16467:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "16467:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
												"nativeSrc": "16250:256:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16348:6:7",
														"nodeType": "YulTypedName",
														"src": "16348:6:7",
														"type": ""
													}
												],
												"src": "16250:256:7"
											},
											{
												"body": {
													"nativeSrc": "16658:220:7",
													"nodeType": "YulBlock",
													"src": "16658:220:7",
													"statements": [
														{
															"nativeSrc": "16668:74:7",
															"nodeType": "YulAssignment",
															"src": "16668:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16734:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16734:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16739:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16675:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16675:58:7"
																},
																"nativeSrc": "16675:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16675:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16668:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16668:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16840:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16840:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																	"nativeSrc": "16751:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16751:88:7"
																},
																"nativeSrc": "16751:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16751:93:7"
															},
															"nativeSrc": "16751:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16751:93:7"
														},
														{
															"nativeSrc": "16853:19:7",
															"nodeType": "YulAssignment",
															"src": "16853:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16864:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16864:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16869:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16869:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16860:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16860:3:7"
																},
																"nativeSrc": "16860:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16860:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16853:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16853:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16512:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16646:3:7",
														"nodeType": "YulTypedName",
														"src": "16646:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16654:3:7",
														"nodeType": "YulTypedName",
														"src": "16654:3:7",
														"type": ""
													}
												],
												"src": "16512:366:7"
											},
											{
												"body": {
													"nativeSrc": "17055:248:7",
													"nodeType": "YulBlock",
													"src": "17055:248:7",
													"statements": [
														{
															"nativeSrc": "17065:26:7",
															"nodeType": "YulAssignment",
															"src": "17065:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17077:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17077:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17088:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17088:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17073:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17073:3:7"
																},
																"nativeSrc": "17073:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17073:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17065:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17065:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17112:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17112:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17123:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17123:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17108:3:7"
																		},
																		"nativeSrc": "17108:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17108:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17131:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17131:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17137:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17137:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17127:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17127:3:7"
																		},
																		"nativeSrc": "17127:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17127:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17101:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17101:6:7"
																},
																"nativeSrc": "17101:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17101:47:7"
															},
															"nativeSrc": "17101:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17101:47:7"
														},
														{
															"nativeSrc": "17157:139:7",
															"nodeType": "YulAssignment",
															"src": "17157:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17291:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17291:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17165:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17165:124:7"
																},
																"nativeSrc": "17165:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17165:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17157:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17157:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16884:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17035:9:7",
														"nodeType": "YulTypedName",
														"src": "17035:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17050:4:7",
														"nodeType": "YulTypedName",
														"src": "17050:4:7",
														"type": ""
													}
												],
												"src": "16884:419:7"
											},
											{
												"body": {
													"nativeSrc": "17463:288:7",
													"nodeType": "YulBlock",
													"src": "17463:288:7",
													"statements": [
														{
															"nativeSrc": "17473:26:7",
															"nodeType": "YulAssignment",
															"src": "17473:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17496:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17481:3:7"
																},
																"nativeSrc": "17481:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17481:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17473:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17473:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17577:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17562:3:7"
																		},
																		"nativeSrc": "17562:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17562:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17509:43:7"
																},
																"nativeSrc": "17509:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17509:71:7"
															},
															"nativeSrc": "17509:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17509:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17634:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17634:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17647:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17658:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17658:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17643:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17643:3:7"
																		},
																		"nativeSrc": "17643:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17643:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17590:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17590:43:7"
																},
																"nativeSrc": "17590:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17590:72:7"
															},
															"nativeSrc": "17590:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17590:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17716:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17716:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17729:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17729:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17740:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17740:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17725:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17725:3:7"
																		},
																		"nativeSrc": "17725:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17725:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17672:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17672:43:7"
																},
																"nativeSrc": "17672:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17672:72:7"
															},
															"nativeSrc": "17672:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17672:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17309:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17419:9:7",
														"nodeType": "YulTypedName",
														"src": "17419:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17431:6:7",
														"nodeType": "YulTypedName",
														"src": "17431:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17439:6:7",
														"nodeType": "YulTypedName",
														"src": "17439:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17447:6:7",
														"nodeType": "YulTypedName",
														"src": "17447:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17458:4:7",
														"nodeType": "YulTypedName",
														"src": "17458:4:7",
														"type": ""
													}
												],
												"src": "17309:442:7"
											},
											{
												"body": {
													"nativeSrc": "17863:64:7",
													"nodeType": "YulBlock",
													"src": "17863:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17885:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17885:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17893:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17893:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17881:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17881:3:7"
																		},
																		"nativeSrc": "17881:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17881:14:7"
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "17897:22:7",
																		"nodeType": "YulLiteral",
																		"src": "17897:22:7",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17874:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17874:6:7"
																},
																"nativeSrc": "17874:46:7",
																"nodeType": "YulFunctionCall",
																"src": "17874:46:7"
															},
															"nativeSrc": "17874:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "17874:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
												"nativeSrc": "17757:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17855:6:7",
														"nodeType": "YulTypedName",
														"src": "17855:6:7",
														"type": ""
													}
												],
												"src": "17757:170:7"
											},
											{
												"body": {
													"nativeSrc": "18079:220:7",
													"nodeType": "YulBlock",
													"src": "18079:220:7",
													"statements": [
														{
															"nativeSrc": "18089:74:7",
															"nodeType": "YulAssignment",
															"src": "18089:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18155:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18155:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18160:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18160:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18096:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18096:58:7"
																},
																"nativeSrc": "18096:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18096:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18089:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18261:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18261:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																	"nativeSrc": "18172:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18172:88:7"
																},
																"nativeSrc": "18172:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18172:93:7"
															},
															"nativeSrc": "18172:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18172:93:7"
														},
														{
															"nativeSrc": "18274:19:7",
															"nodeType": "YulAssignment",
															"src": "18274:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18285:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18285:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18290:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18290:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18281:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18281:3:7"
																},
																"nativeSrc": "18281:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18281:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18274:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17933:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18067:3:7",
														"nodeType": "YulTypedName",
														"src": "18067:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18075:3:7",
														"nodeType": "YulTypedName",
														"src": "18075:3:7",
														"type": ""
													}
												],
												"src": "17933:366:7"
											},
											{
												"body": {
													"nativeSrc": "18476:248:7",
													"nodeType": "YulBlock",
													"src": "18476:248:7",
													"statements": [
														{
															"nativeSrc": "18486:26:7",
															"nodeType": "YulAssignment",
															"src": "18486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18494:3:7"
																},
																"nativeSrc": "18494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18544:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18544:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18529:3:7"
																		},
																		"nativeSrc": "18529:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18529:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18552:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18552:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18558:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18548:3:7"
																		},
																		"nativeSrc": "18548:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18548:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18522:6:7"
																},
																"nativeSrc": "18522:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18522:47:7"
															},
															"nativeSrc": "18522:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18522:47:7"
														},
														{
															"nativeSrc": "18578:139:7",
															"nodeType": "YulAssignment",
															"src": "18578:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18712:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18712:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18586:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18586:124:7"
																},
																"nativeSrc": "18586:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18586:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18578:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18305:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18456:9:7",
														"nodeType": "YulTypedName",
														"src": "18456:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18471:4:7",
														"nodeType": "YulTypedName",
														"src": "18471:4:7",
														"type": ""
													}
												],
												"src": "18305:419:7"
											},
											{
												"body": {
													"nativeSrc": "18856:206:7",
													"nodeType": "YulBlock",
													"src": "18856:206:7",
													"statements": [
														{
															"nativeSrc": "18866:26:7",
															"nodeType": "YulAssignment",
															"src": "18866:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18878:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18878:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18889:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18889:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18874:3:7"
																},
																"nativeSrc": "18874:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18874:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18866:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18866:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18946:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18946:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18959:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18959:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18970:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18970:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18955:3:7"
																		},
																		"nativeSrc": "18955:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18955:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18902:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18902:43:7"
																},
																"nativeSrc": "18902:71:7",
																"nodeType": "YulFunctionCall",
																"src": "18902:71:7"
															},
															"nativeSrc": "18902:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "18902:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19027:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19027:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19040:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19040:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19051:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19051:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19036:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19036:3:7"
																		},
																		"nativeSrc": "19036:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19036:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18983:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18983:43:7"
																},
																"nativeSrc": "18983:72:7",
																"nodeType": "YulFunctionCall",
																"src": "18983:72:7"
															},
															"nativeSrc": "18983:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "18983:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18730:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18820:9:7",
														"nodeType": "YulTypedName",
														"src": "18820:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18832:6:7",
														"nodeType": "YulTypedName",
														"src": "18832:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18840:6:7",
														"nodeType": "YulTypedName",
														"src": "18840:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18851:4:7",
														"nodeType": "YulTypedName",
														"src": "18851:4:7",
														"type": ""
													}
												],
												"src": "18730:332:7"
											},
											{
												"body": {
													"nativeSrc": "19131:80:7",
													"nodeType": "YulBlock",
													"src": "19131:80:7",
													"statements": [
														{
															"nativeSrc": "19141:22:7",
															"nodeType": "YulAssignment",
															"src": "19141:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19156:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19156:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19150:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19150:5:7"
																},
																"nativeSrc": "19150:13:7",
																"nodeType": "YulFunctionCall",
																"src": "19150:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19141:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19141:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19199:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19199:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19172:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "19172:26:7"
																},
																"nativeSrc": "19172:33:7",
																"nodeType": "YulFunctionCall",
																"src": "19172:33:7"
															},
															"nativeSrc": "19172:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "19172:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "19068:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19109:6:7",
														"nodeType": "YulTypedName",
														"src": "19109:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19117:3:7",
														"nodeType": "YulTypedName",
														"src": "19117:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19125:5:7",
														"nodeType": "YulTypedName",
														"src": "19125:5:7",
														"type": ""
													}
												],
												"src": "19068:143:7"
											},
											{
												"body": {
													"nativeSrc": "19294:274:7",
													"nodeType": "YulBlock",
													"src": "19294:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "19340:83:7",
																"nodeType": "YulBlock",
																"src": "19340:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19342:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "19342:77:7"
																			},
																			"nativeSrc": "19342:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19342:79:7"
																		},
																		"nativeSrc": "19342:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19342:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19315:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "19315:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19324:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19324:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19311:3:7"
																		},
																		"nativeSrc": "19311:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19311:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19307:3:7"
																},
																"nativeSrc": "19307:32:7",
																"nodeType": "YulFunctionCall",
																"src": "19307:32:7"
															},
															"nativeSrc": "19304:119:7",
															"nodeType": "YulIf",
															"src": "19304:119:7"
														},
														{
															"nativeSrc": "19433:128:7",
															"nodeType": "YulBlock",
															"src": "19433:128:7",
															"statements": [
																{
																	"nativeSrc": "19448:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19448:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19462:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19462:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19452:6:7",
																			"nodeType": "YulTypedName",
																			"src": "19452:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19477:74:7",
																	"nodeType": "YulAssignment",
																	"src": "19477:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19523:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "19523:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19534:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "19534:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19519:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19519:3:7"
																				},
																				"nativeSrc": "19519:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19519:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19543:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "19543:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19487:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "19487:31:7"
																		},
																		"nativeSrc": "19487:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19487:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19477:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "19477:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "19217:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19264:9:7",
														"nodeType": "YulTypedName",
														"src": "19264:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19275:7:7",
														"nodeType": "YulTypedName",
														"src": "19275:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19287:6:7",
														"nodeType": "YulTypedName",
														"src": "19287:6:7",
														"type": ""
													}
												],
												"src": "19217:351:7"
											},
											{
												"body": {
													"nativeSrc": "19728:288:7",
													"nodeType": "YulBlock",
													"src": "19728:288:7",
													"statements": [
														{
															"nativeSrc": "19738:26:7",
															"nodeType": "YulAssignment",
															"src": "19738:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19750:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19750:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19761:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19761:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19746:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19746:3:7"
																},
																"nativeSrc": "19746:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19746:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19738:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19738:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19818:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19818:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19831:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19842:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19842:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19827:3:7"
																		},
																		"nativeSrc": "19827:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19827:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19774:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19774:43:7"
																},
																"nativeSrc": "19774:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19774:71:7"
															},
															"nativeSrc": "19774:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19774:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19899:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19899:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19912:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19912:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19923:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19923:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19908:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19908:3:7"
																		},
																		"nativeSrc": "19908:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19908:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19855:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19855:43:7"
																},
																"nativeSrc": "19855:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19855:72:7"
															},
															"nativeSrc": "19855:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19855:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19981:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19981:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19994:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19994:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20005:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20005:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19990:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19990:3:7"
																		},
																		"nativeSrc": "19990:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19990:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19937:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19937:43:7"
																},
																"nativeSrc": "19937:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19937:72:7"
															},
															"nativeSrc": "19937:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19937:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19574:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19684:9:7",
														"nodeType": "YulTypedName",
														"src": "19684:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19696:6:7",
														"nodeType": "YulTypedName",
														"src": "19696:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19704:6:7",
														"nodeType": "YulTypedName",
														"src": "19704:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19712:6:7",
														"nodeType": "YulTypedName",
														"src": "19712:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19723:4:7",
														"nodeType": "YulTypedName",
														"src": "19723:4:7",
														"type": ""
													}
												],
												"src": "19574:442:7"
											},
											{
												"body": {
													"nativeSrc": "20066:147:7",
													"nodeType": "YulBlock",
													"src": "20066:147:7",
													"statements": [
														{
															"nativeSrc": "20076:25:7",
															"nodeType": "YulAssignment",
															"src": "20076:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20099:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20099:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20081:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20081:17:7"
																},
																"nativeSrc": "20081:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20081:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20076:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20076:1:7"
																}
															]
														},
														{
															"nativeSrc": "20110:25:7",
															"nodeType": "YulAssignment",
															"src": "20110:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20133:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20133:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20115:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20115:17:7"
																},
																"nativeSrc": "20115:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20115:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20110:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20110:1:7"
																}
															]
														},
														{
															"nativeSrc": "20144:16:7",
															"nodeType": "YulAssignment",
															"src": "20144:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20155:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20155:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20158:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20158:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20151:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20151:3:7"
																},
																"nativeSrc": "20151:9:7",
																"nodeType": "YulFunctionCall",
																"src": "20151:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20144:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20144:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20184:22:7",
																"nodeType": "YulBlock",
																"src": "20184:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20186:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20186:16:7"
																			},
																			"nativeSrc": "20186:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20186:18:7"
																		},
																		"nativeSrc": "20186:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20186:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20176:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20176:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20179:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20179:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20173:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20173:2:7"
																},
																"nativeSrc": "20173:10:7",
																"nodeType": "YulFunctionCall",
																"src": "20173:10:7"
															},
															"nativeSrc": "20170:36:7",
															"nodeType": "YulIf",
															"src": "20170:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "20022:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20053:1:7",
														"nodeType": "YulTypedName",
														"src": "20053:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20056:1:7",
														"nodeType": "YulTypedName",
														"src": "20056:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20062:3:7",
														"nodeType": "YulTypedName",
														"src": "20062:3:7",
														"type": ""
													}
												],
												"src": "20022:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT payout failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy rate must be >= 1 STEM\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy rate must be <= Sell rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28(memPtr) {\n\n        mstore(add(memPtr, 0), 0x53656c6c2072617465206d75737420626520e289a52031205354454d20706572)\n\n        mstore(add(memPtr, 32), \" USDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E436BF GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBB285554 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF0F44260 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xF203787C EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x4F1 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xBB285554 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x40B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x85E436BF EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x8E0B017D EQ PUSH2 0x385 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x61D027B3 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x341 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x5D91E3F8 EQ PUSH2 0x2B9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF7E730B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1481794E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36F PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44D PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BF PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5A9 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 DUP2 DUP6 DUP6 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x656 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B DUP3 PUSH1 0x40 MLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x796 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0x7A3 DUP6 DUP3 DUP6 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x7AE DUP6 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP3 GT PUSH2 0x8D5 JUMPI PUSH0 PUSH2 0x8E2 JUMP JUMPDEST DUP5 DUP3 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x910 CALLER PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH2 0x146E JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x96C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x146E JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xB74 PUSH0 PUSH2 0x15DD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH31 0xEDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x1354 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB DUP2 PUSH1 0x40 MLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD19 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD45 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA2 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xDBF DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x16A0 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE1B PUSH2 0x133B JUMP JUMPDEST SWAP1 POP PUSH2 0xE28 DUP2 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE91 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF85 SWAP1 PUSH2 0x2421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBA PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x146E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1002 SWAP3 SWAP2 SWAP1 PUSH2 0x243F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108B PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10B5 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10BE ADDRESS PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH2 0x115F PUSH2 0x783 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12B9 PUSH2 0x1354 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x15DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x134F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x171F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x135C PUSH2 0x133B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137A PUSH2 0xC4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13D9 JUMPI PUSH2 0x139D PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x13E6 DUP5 DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1450 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1467 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x171F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1559 DUP4 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 PUSH0 DUP4 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1710 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171B DUP3 PUSH0 DUP4 PUSH2 0x18EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x18E8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18DF SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x193E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A0C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19C7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A9D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B49 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1B53 DUP2 DUP6 PUSH2 0x1B11 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B63 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B6C DUP2 PUSH2 0x1B2F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8F DUP2 DUP5 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC4 DUP3 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD4 DUP2 PUSH2 0x1BBA JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEF DUP2 PUSH2 0x1BCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C07 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C22 DUP2 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4B DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C5C DUP6 DUP3 DUP7 ADD PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7A DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C93 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBB DUP5 DUP3 DUP6 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CCD DUP2 PUSH2 0x1BF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D10 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D21 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D32 DUP7 DUP3 DUP8 ADD PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D51 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1D48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D92 DUP5 DUP3 DUP6 ADD PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DA4 DUP2 PUSH2 0x1BBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBD PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE6 PUSH2 0x1DE1 PUSH2 0x1DDC DUP5 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF7 DUP3 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E08 DUP3 PUSH2 0x1DED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E18 DUP2 PUSH2 0x1DFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E31 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1E4B PUSH0 DUP4 ADD DUP13 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E58 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1E72 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1E7F PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E8C PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1EA6 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1EB4 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE5 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF6 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F44 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1F00 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F70 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x1F7D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F8D DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA8 DUP2 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC3 JUMPI PUSH2 0x1FC2 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD0 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x200D PUSH1 0xF DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2018 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203A DUP2 PUSH2 0x2001 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2078 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2083 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2091 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20A8 JUMPI PUSH2 0x20A7 PUSH2 0x2041 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20E3 PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x20EE DUP3 PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2110 DUP2 PUSH2 0x20D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x214E DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2159 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2169 JUMPI PUSH2 0x2168 PUSH2 0x2117 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x217E DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x2041 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534454207061796F7574206661696C65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21DB PUSH1 0x12 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E6 DUP3 PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2208 DUP2 PUSH2 0x21CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2222 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x222F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x223C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203E3D2031205354454D000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2278 PUSH1 0x1A DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2283 DUP3 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A5 DUP2 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275792072617465206D757374206265203C3D2053656C6C2072617465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22E0 PUSH1 0x1D DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x22EB DUP3 PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230D DUP2 PUSH2 0x22D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C2072617465206D75737420626520E289A52031205354454D20706572 PUSH0 DUP3 ADD MSTORE PUSH32 0x2055534454000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x236E PUSH1 0x25 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2379 DUP3 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x239B DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23B5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x23C2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x23CF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240B PUSH1 0x14 DUP4 PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2416 DUP3 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2438 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2452 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x245F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2474 DUP2 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248F JUMPI PUSH2 0x248E PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249C DUP5 DUP3 DUP6 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24B8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x24C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x24D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24E4 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EF DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2507 JUMPI PUSH2 0x2506 PUSH2 0x2041 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 RETURN 0xCB 0xAA 0xA7 0xC2 SDIV DUP4 MUL 0xB4 0xCD 0xD NOT CREATE2 PUSH26 0xA462CD1589F959130F52B258395171BC0264736F6C634300081A STOP CALLER ",
							"sourceMap": "237:4979:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4315:155:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3886:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2943:135:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1945:963;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;459:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3301:263:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3634:213:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3113:141:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:23:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1524:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4508:706;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4128:137:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;533:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;311:29:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;4315:155:6:-;1531:13:0;:11;:13::i;:::-;4407:9:6::1;4390:14;;:26;;;;;;;;;;;;;;;;;;4453:9;4431:32;;;;;;;;;;;;4315:155:::0;:::o;3886:184::-;1531:13:0;:11;:13::i;:::-;3973:9:6::1;;;;;;;;;;;:18;;;3992:2;3996:6;3973:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3965:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4052:2;4038:25;;;4056:6;4038:25;;;;;;:::i;:::-;;;;;;;;3886:184:::0;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2943:135:6:-;1531:13:0;:11;:13::i;:::-;3014:24:6::1;3020:2;3033:4;3024:6;:13;;;;:::i;:::-;3014:5;:24::i;:::-;3060:2;3053:18;;;3064:6;3053:18;;;;;;:::i;:::-;;;;;;;;2943:135:::0;;:::o;1945:963::-;2023:1;2010:10;:14;2002:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2120:18;2163:8;;2155:4;2142:10;:17;;;;:::i;:::-;2141:30;;;;:::i;:::-;2120:51;;2278:22;2316:4;2303:10;:17;;;;:::i;:::-;2278:42;;2330:21;2371:8;;2354:14;:25;;;;:::i;:::-;2330:49;;2389:19;2427:10;2411:13;:26;:59;;2469:1;2411:59;;;2456:10;2440:13;:26;;;;:::i;:::-;2411:59;2389:81;;2567:43;2577:10;2589:8;;;;;;;;;;;2599:10;2567:9;:43::i;:::-;2638:1;2624:11;:15;:47;;;;;2669:1;2643:28;;:14;;;;;;;;;;;:28;;;;2624:47;2620:126;;;2687:48;2697:8;;;;;;;;;;;2707:14;;;;;;;;;;;2723:11;2687:9;:48::i;:::-;2620:126;2764:9;;;;;;;;;;;:18;;;2783:10;2795;2764:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2756:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2853:10;2844:57;;;2865:10;2877;2889:11;2844:57;;;;;;;;:::i;:::-;;;;;;;;1992:916;;;;1945:963;:::o;459:68::-;;;;;;;;;;;;;:::o;377:30::-;;;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3301:263:6:-;1531:13:0;:11;:13::i;:::-;3386:4:6::1;3375:7;:15;;3367:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3450:8;;3439:7;:19;;3431:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3512:7;3502;:17;;;;3534:23;3549:7;3534:23;;;;;;:::i;:::-;;;;;;;;3301:263:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3634:213:6:-;1531:13:0;:11;:13::i;:::-;3720:4:6::1;3709:7;:15;;3701:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3794:7;3783:8;:18;;;;3816:24;3832:7;3816:24;;;;;;:::i;:::-;;;;;;;;3634:213:::0;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3113:141:6:-;1531:13:0;:11;:13::i;:::-;3186:26:6::1;3192:4;3207;3198:6;:13;;;;:::i;:::-;3186:5;:26::i;:::-;3234:4;3227:20;;;3240:6;3227:20;;;;;;:::i;:::-;;;;;;;;3113:141:::0;;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;281:23:6:-;;;;;;;;;;;;;:::o;1524:384::-;1601:1;1588:10;:14;1580:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1647:18;1681:4;1668:10;:17;;;;:::i;:::-;1647:38;;1703:9;;;;;;;;;;;:22;;;1726:10;1746:4;1753:10;1703:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1695:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1800:43;1810:8;;;;;;;;;;;1820:10;1832;1800:9;:43::i;:::-;1866:10;1858:43;;;1878:10;1890;1858:43;;;;;;;:::i;:::-;;;;;;;;1570:338;1524:384;:::o;4508:706::-;4561:16;4587:17;4614;4641:23;4674:27;4711:25;4746:27;4783;4820:23;4893:7;;4918:8;;4944;;;;;;;;;;;4970:14;;;;;;;;;;;5002:19;5012:8;;;;;;;;;;;5002:9;:19::i;:::-;5039:25;5049:14;;;;;;;;;;;5039:9;:25::i;:::-;5082:24;5100:4;5082:9;:24::i;:::-;5124:9;;;;;;;;;;;:19;;;5152:4;5124:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5176:13;:11;:13::i;:::-;4868:335;;;;;;;;;;;;;;;;;;4508:706;;;;;;;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;4128:137:6:-;1531:13:0;:11;:13::i;:::-;4208:9:6::1;4197:8;;:20;;;;;;;;;;;;;;;;;;4248:9;4232:26;;;;;;;;;;;;4128:137:::0;:::o;533:74::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;311:29:6:-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10396:476:2:-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7965:206:2:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:60::-;5796:3;5817:5;5810:12;;5768:60;;;:::o;5834:142::-;5884:9;5917:53;5935:34;5944:24;5962:5;5944:24;:::i;:::-;5935:34;:::i;:::-;5917:53;:::i;:::-;5904:66;;5834:142;;;:::o;5982:126::-;6032:9;6065:37;6096:5;6065:37;:::i;:::-;6052:50;;5982:126;;;:::o;6114:140::-;6178:9;6211:37;6242:5;6211:37;:::i;:::-;6198:50;;6114:140;;;:::o;6260:159::-;6361:51;6406:5;6361:51;:::i;:::-;6356:3;6349:64;6260:159;;:::o;6425:250::-;6532:4;6570:2;6559:9;6555:18;6547:26;;6583:85;6665:1;6654:9;6650:17;6641:6;6583:85;:::i;:::-;6425:250;;;;:::o;6681:1108::-;6998:4;7036:3;7025:9;7021:19;7013:27;;7050:71;7118:1;7107:9;7103:17;7094:6;7050:71;:::i;:::-;7131:72;7199:2;7188:9;7184:18;7175:6;7131:72;:::i;:::-;7213;7281:2;7270:9;7266:18;7257:6;7213:72;:::i;:::-;7295;7363:2;7352:9;7348:18;7339:6;7295:72;:::i;:::-;7377:73;7445:3;7434:9;7430:19;7421:6;7377:73;:::i;:::-;7460;7528:3;7517:9;7513:19;7504:6;7460:73;:::i;:::-;7543;7611:3;7600:9;7596:19;7587:6;7543:73;:::i;:::-;7626;7694:3;7683:9;7679:19;7670:6;7626:73;:::i;:::-;7709;7777:3;7766:9;7762:19;7753:6;7709:73;:::i;:::-;6681:1108;;;;;;;;;;;;:::o;7795:474::-;7863:6;7871;7920:2;7908:9;7899:7;7895:23;7891:32;7888:119;;;7926:79;;:::i;:::-;7888:119;8046:1;8071:53;8116:7;8107:6;8096:9;8092:22;8071:53;:::i;:::-;8061:63;;8017:117;8173:2;8199:53;8244:7;8235:6;8224:9;8220:22;8199:53;:::i;:::-;8189:63;;8144:118;7795:474;;;;;:::o;8275:180::-;8323:77;8320:1;8313:88;8420:4;8417:1;8410:15;8444:4;8441:1;8434:15;8461:320;8505:6;8542:1;8536:4;8532:12;8522:22;;8589:1;8583:4;8579:12;8610:18;8600:81;;8666:4;8658:6;8654:17;8644:27;;8600:81;8728:2;8720:6;8717:14;8697:18;8694:38;8691:84;;8747:18;;:::i;:::-;8691:84;8512:269;8461:320;;;:::o;8787:332::-;8908:4;8946:2;8935:9;8931:18;8923:26;;8959:71;9027:1;9016:9;9012:17;9003:6;8959:71;:::i;:::-;9040:72;9108:2;9097:9;9093:18;9084:6;9040:72;:::i;:::-;8787:332;;;;;:::o;9125:116::-;9195:21;9210:5;9195:21;:::i;:::-;9188:5;9185:32;9175:60;;9231:1;9228;9221:12;9175:60;9125:116;:::o;9247:137::-;9301:5;9332:6;9326:13;9317:22;;9348:30;9372:5;9348:30;:::i;:::-;9247:137;;;;:::o;9390:345::-;9457:6;9506:2;9494:9;9485:7;9481:23;9477:32;9474:119;;;9512:79;;:::i;:::-;9474:119;9632:1;9657:61;9710:7;9701:6;9690:9;9686:22;9657:61;:::i;:::-;9647:71;;9603:125;9390:345;;;;:::o;9741:165::-;9881:17;9877:1;9869:6;9865:14;9858:41;9741:165;:::o;9912:366::-;10054:3;10075:67;10139:2;10134:3;10075:67;:::i;:::-;10068:74;;10151:93;10240:3;10151:93;:::i;:::-;10269:2;10264:3;10260:12;10253:19;;9912:366;;;:::o;10284:419::-;10450:4;10488:2;10477:9;10473:18;10465:26;;10537:9;10531:4;10527:20;10523:1;10512:9;10508:17;10501:47;10565:131;10691:4;10565:131;:::i;:::-;10557:139;;10284:419;;;:::o;10709:180::-;10757:77;10754:1;10747:88;10854:4;10851:1;10844:15;10878:4;10875:1;10868:15;10895:410;10935:7;10958:20;10976:1;10958:20;:::i;:::-;10953:25;;10992:20;11010:1;10992:20;:::i;:::-;10987:25;;11047:1;11044;11040:9;11069:30;11087:11;11069:30;:::i;:::-;11058:41;;11248:1;11239:7;11235:15;11232:1;11229:22;11209:1;11202:9;11182:83;11159:139;;11278:18;;:::i;:::-;11159:139;10943:362;10895:410;;;;:::o;11311:179::-;11451:31;11447:1;11439:6;11435:14;11428:55;11311:179;:::o;11496:366::-;11638:3;11659:67;11723:2;11718:3;11659:67;:::i;:::-;11652:74;;11735:93;11824:3;11735:93;:::i;:::-;11853:2;11848:3;11844:12;11837:19;;11496:366;;;:::o;11868:419::-;12034:4;12072:2;12061:9;12057:18;12049:26;;12121:9;12115:4;12111:20;12107:1;12096:9;12092:17;12085:47;12149:131;12275:4;12149:131;:::i;:::-;12141:139;;11868:419;;;:::o;12293:180::-;12341:77;12338:1;12331:88;12438:4;12435:1;12428:15;12462:4;12459:1;12452:15;12479:185;12519:1;12536:20;12554:1;12536:20;:::i;:::-;12531:25;;12570:20;12588:1;12570:20;:::i;:::-;12565:25;;12609:1;12599:35;;12614:18;;:::i;:::-;12599:35;12656:1;12653;12649:9;12644:14;;12479:185;;;;:::o;12670:194::-;12710:4;12730:20;12748:1;12730:20;:::i;:::-;12725:25;;12764:20;12782:1;12764:20;:::i;:::-;12759:25;;12808:1;12805;12801:9;12793:17;;12832:1;12826:4;12823:11;12820:37;;;12837:18;;:::i;:::-;12820:37;12670:194;;;;:::o;12870:168::-;13010:20;13006:1;12998:6;12994:14;12987:44;12870:168;:::o;13044:366::-;13186:3;13207:67;13271:2;13266:3;13207:67;:::i;:::-;13200:74;;13283:93;13372:3;13283:93;:::i;:::-;13401:2;13396:3;13392:12;13385:19;;13044:366;;;:::o;13416:419::-;13582:4;13620:2;13609:9;13605:18;13597:26;;13669:9;13663:4;13659:20;13655:1;13644:9;13640:17;13633:47;13697:131;13823:4;13697:131;:::i;:::-;13689:139;;13416:419;;;:::o;13841:442::-;13990:4;14028:2;14017:9;14013:18;14005:26;;14041:71;14109:1;14098:9;14094:17;14085:6;14041:71;:::i;:::-;14122:72;14190:2;14179:9;14175:18;14166:6;14122:72;:::i;:::-;14204;14272:2;14261:9;14257:18;14248:6;14204:72;:::i;:::-;13841:442;;;;;;:::o;14289:176::-;14429:28;14425:1;14417:6;14413:14;14406:52;14289:176;:::o;14471:366::-;14613:3;14634:67;14698:2;14693:3;14634:67;:::i;:::-;14627:74;;14710:93;14799:3;14710:93;:::i;:::-;14828:2;14823:3;14819:12;14812:19;;14471:366;;;:::o;14843:419::-;15009:4;15047:2;15036:9;15032:18;15024:26;;15096:9;15090:4;15086:20;15082:1;15071:9;15067:17;15060:47;15124:131;15250:4;15124:131;:::i;:::-;15116:139;;14843:419;;;:::o;15268:179::-;15408:31;15404:1;15396:6;15392:14;15385:55;15268:179;:::o;15453:366::-;15595:3;15616:67;15680:2;15675:3;15616:67;:::i;:::-;15609:74;;15692:93;15781:3;15692:93;:::i;:::-;15810:2;15805:3;15801:12;15794:19;;15453:366;;;:::o;15825:419::-;15991:4;16029:2;16018:9;16014:18;16006:26;;16078:9;16072:4;16068:20;16064:1;16053:9;16049:17;16042:47;16106:131;16232:4;16106:131;:::i;:::-;16098:139;;15825:419;;;:::o;16250:256::-;16390:66;16386:1;16378:6;16374:14;16367:90;16491:7;16486:2;16478:6;16474:15;16467:32;16250:256;:::o;16512:366::-;16654:3;16675:67;16739:2;16734:3;16675:67;:::i;:::-;16668:74;;16751:93;16840:3;16751:93;:::i;:::-;16869:2;16864:3;16860:12;16853:19;;16512:366;;;:::o;16884:419::-;17050:4;17088:2;17077:9;17073:18;17065:26;;17137:9;17131:4;17127:20;17123:1;17112:9;17108:17;17101:47;17165:131;17291:4;17165:131;:::i;:::-;17157:139;;16884:419;;;:::o;17309:442::-;17458:4;17496:2;17485:9;17481:18;17473:26;;17509:71;17577:1;17566:9;17562:17;17553:6;17509:71;:::i;:::-;17590:72;17658:2;17647:9;17643:18;17634:6;17590:72;:::i;:::-;17672;17740:2;17729:9;17725:18;17716:6;17672:72;:::i;:::-;17309:442;;;;;;:::o;17757:170::-;17897:22;17893:1;17885:6;17881:14;17874:46;17757:170;:::o;17933:366::-;18075:3;18096:67;18160:2;18155:3;18096:67;:::i;:::-;18089:74;;18172:93;18261:3;18172:93;:::i;:::-;18290:2;18285:3;18281:12;18274:19;;17933:366;;;:::o;18305:419::-;18471:4;18509:2;18498:9;18494:18;18486:26;;18558:9;18552:4;18548:20;18544:1;18533:9;18529:17;18522:47;18586:131;18712:4;18586:131;:::i;:::-;18578:139;;18305:419;;;:::o;18730:332::-;18851:4;18889:2;18878:9;18874:18;18866:26;;18902:71;18970:1;18959:9;18955:17;18946:6;18902:71;:::i;:::-;18983:72;19051:2;19040:9;19036:18;19027:6;18983:72;:::i;:::-;18730:332;;;;;:::o;19068:143::-;19125:5;19156:6;19150:13;19141:22;;19172:33;19199:5;19172:33;:::i;:::-;19068:143;;;;:::o;19217:351::-;19287:6;19336:2;19324:9;19315:7;19311:23;19307:32;19304:119;;;19342:79;;:::i;:::-;19304:119;19462:1;19487:64;19543:7;19534:6;19523:9;19519:22;19487:64;:::i;:::-;19477:74;;19433:128;19217:351;;;;:::o;19574:442::-;19723:4;19761:2;19750:9;19746:18;19738:26;;19774:71;19842:1;19831:9;19827:17;19818:6;19774:71;:::i;:::-;19855:72;19923:2;19912:9;19908:18;19899:6;19855:72;:::i;:::-;19937;20005:2;19994:9;19990:18;19981:6;19937:72;:::i;:::-;19574:442;;;;;;:::o;20022:191::-;20062:3;20081:20;20099:1;20081:20;:::i;:::-;20076:25;;20115:20;20133:1;20115:20;:::i;:::-;20110:25;;20158:1;20155;20151:9;20144:16;;20179:3;20176:1;20173:10;20170:36;;;20186:18;;:::i;:::-;20170:36;20022:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1907800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(address,uint256)": "infinite",
								"buyRate()": "2535",
								"buyStem(uint256)": "infinite",
								"decimals()": "384",
								"getConfig()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2583",
								"profitTreasury()": "2574",
								"renounceOwnership()": "infinite",
								"sellRate()": "2492",
								"sellStem(uint256)": "infinite",
								"setBuyRate(uint256)": "infinite",
								"setProfitTreasury(address)": "infinite",
								"setSellRate(uint256)": "infinite",
								"setTreasury(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2553",
								"usdtToken()": "infinite",
								"withdrawUSDT(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 336,
									"end": 340,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 311,
									"end": 340,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 311,
									"end": 340,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 403,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 377,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 377,
									"end": 407,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 485,
									"end": 527,
									"name": "PUSH",
									"source": 6,
									"value": "FE09E35DFADF080A768F41DF13E06629F5E80EB9"
								},
								{
									"begin": 459,
									"end": 527,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 459,
									"end": 527,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 527,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 459,
									"end": 527,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 459,
									"end": 527,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 459,
									"end": 527,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 527,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 565,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "EACA0253B95730F2AE2755AF09083D69840A683C"
								},
								{
									"begin": 533,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 533,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 533,
									"end": 607,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 533,
									"end": 607,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 533,
									"end": 607,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 533,
									"end": 607,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1251,
									"end": 1462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1349,
									"end": 1359,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5354454D20546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5354454D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1407,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1371,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1408,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1424,
									"end": 1432,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1454,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1434,
									"end": 1447,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1454,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1434,
									"end": 1454,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1454,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1454,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1434,
									"end": 1454,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1454,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1434,
									"end": 1454,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1423,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1418,
									"end": 1423,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1418,
									"end": 1423,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1418,
									"end": 1455,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1455,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1455,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1418,
									"end": 1455,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1462,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7339,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7340,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7349,
									"end": 7364,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7388,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7810,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7400,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7440,
									"end": 7447,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7463,
									"end": 7483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7481,
									"end": 7482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7463,
									"end": 7483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7463,
									"end": 7483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7463,
									"end": 7483,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7463,
									"end": 7483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7458,
									"end": 7483,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7458,
									"end": 7483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7497,
									"end": 7517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7515,
									"end": 7516,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7497,
									"end": 7517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7497,
									"end": 7517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7497,
									"end": 7517,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7497,
									"end": 7517,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7492,
									"end": 7517,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7492,
									"end": 7517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7552,
									"end": 7553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7549,
									"end": 7550,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7574,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7592,
									"end": 7603,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7574,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7574,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7574,
									"end": 7604,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7574,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7753,
									"end": 7754,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7744,
									"end": 7751,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7740,
									"end": 7755,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7737,
									"end": 7738,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7734,
									"end": 7756,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7714,
									"end": 7715,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7716,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7687,
									"end": 7770,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7664,
									"end": 7803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7664,
									"end": 7803,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7783,
									"end": 7801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7783,
									"end": 7801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7783,
									"end": 7801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7783,
									"end": 7801,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7783,
									"end": 7801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7664,
									"end": 7803,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7664,
									"end": 7803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7448,
									"end": 7810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7810,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7810,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 8007,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 7816,
									"end": 8007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7856,
									"end": 7859,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7875,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7893,
									"end": 7894,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7875,
									"end": 7895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 7895,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7875,
									"end": 7895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7895,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7895,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7909,
									"end": 7929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7909,
									"end": 7929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7909,
									"end": 7929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7909,
									"end": 7929,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7909,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7904,
									"end": 7929,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7904,
									"end": 7929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7952,
									"end": 7953,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7949,
									"end": 7950,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7945,
									"end": 7954,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 7954,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 7954,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7973,
									"end": 7976,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7970,
									"end": 7971,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7977,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7964,
									"end": 8000,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7964,
									"end": 8000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7964,
									"end": 8000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7980,
									"end": 7998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7980,
									"end": 7998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7980,
									"end": 7998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7980,
									"end": 7998,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7980,
									"end": 7998,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7964,
									"end": 8000,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7964,
									"end": 8000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 8007,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 8007,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 8007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 8007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 8007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8013,
									"end": 8131,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8013,
									"end": 8131,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8118,
									"end": 8123,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8100,
									"end": 8124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8124,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8100,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8095,
									"end": 8098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8088,
									"end": 8125,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8013,
									"end": 8131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8013,
									"end": 8131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8013,
									"end": 8131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8324,
									"end": 8326,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8313,
									"end": 8322,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8327,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8327,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8337,
									"end": 8408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8405,
									"end": 8406,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8394,
									"end": 8403,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8390,
									"end": 8407,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8381,
									"end": 8387,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8337,
									"end": 8408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 8337,
									"end": 8408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8337,
									"end": 8408,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8337,
									"end": 8408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8418,
									"end": 8490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8486,
									"end": 8488,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8475,
									"end": 8484,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8471,
									"end": 8489,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8462,
									"end": 8468,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8418,
									"end": 8490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8418,
									"end": 8490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8418,
									"end": 8490,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8418,
									"end": 8490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8500,
									"end": 8572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8568,
									"end": 8570,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8557,
									"end": 8566,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8553,
									"end": 8571,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8550,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8500,
									"end": 8572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8500,
									"end": 8572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8500,
									"end": 8572,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8500,
									"end": 8572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8585,
									"end": 8807,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8585,
									"end": 8807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8678,
									"end": 8682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8716,
									"end": 8718,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8705,
									"end": 8714,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8701,
									"end": 8719,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8693,
									"end": 8719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8693,
									"end": 8719,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8797,
									"end": 8798,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8786,
									"end": 8795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8782,
									"end": 8799,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8773,
									"end": 8779,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8729,
									"end": 8800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8800,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8729,
									"end": 8800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8585,
									"end": 8807,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8585,
									"end": 8807,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8585,
									"end": 8807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8585,
									"end": 8807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8585,
									"end": 8807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 5216,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cf3cbaaa7c2058302b4cd0d19f579a462cd1589f959130f52b258395171bc0264736f6c634300081a0033",
									".code": [
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "85E436BF"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "BB285554"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "F0F44260"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "F0F44260"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "F203787C"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "FC37987B"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "BB285554"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "C3F909D4"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "A98AD46C"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "85E436BF"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "8E0B017D"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "61D027B3"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "61D027B3"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "6217229B"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "5D91E3F8"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "F7E730B"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "1481794E"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 5216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4315,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4315,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3886,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3886,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2943,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2943,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1945,
											"end": 2908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1945,
											"end": 2908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 459,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 459,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 377,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 377,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3301,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3301,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3634,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3634,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3113,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3113,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 281,
											"end": 304,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 281,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 281,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1524,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1524,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4508,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4508,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4128,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4128,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 533,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 533,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 311,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 311,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4390,
											"end": 4404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4416,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4453,
											"end": 4462,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "56D7403454282C9D1B884C3BDCFE0C09772C704AD0B14978C55BF72867485B"
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4463,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 3982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 3991,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3992,
											"end": 3994,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3973,
											"end": 4003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3973,
											"end": 4003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3973,
											"end": 4003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3965,
											"end": 4023,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3965,
											"end": 4023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B0BD88CDAE83F74F918EB6BF26D99DCB3C1530530F339233B029E3B6A00AC50B"
										},
										{
											"begin": 4056,
											"end": 4062,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4038,
											"end": 4063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4063,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 4070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3020,
											"end": 3022,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3024,
											"end": 3030,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3024,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3024,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3024,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3014,
											"end": 3038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3014,
											"end": 3038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 3064,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3053,
											"end": 3071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3071,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2024,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2002,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2002,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2142,
											"end": 2152,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2142,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2141,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2320,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2303,
											"end": 2313,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2303,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2379,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2354,
											"end": 2379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2354,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2354,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2437,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2440,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2411,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2577,
											"end": 2587,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2609,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2567,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2610,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2567,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2639,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2657,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2624,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2620,
											"end": 2746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2687,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2687,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2746,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2620,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2783,
											"end": 2793,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2764,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2764,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2764,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2756,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2756,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "91B69B546D2910AD29983DA9D221CF0EBAE5EB1929083361F4D6C95878CDB420"
										},
										{
											"begin": 2865,
											"end": 2875,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2887,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2900,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2844,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2901,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 459,
											"end": 527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 459,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 407,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 377,
											"end": 407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3375,
											"end": 3382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3390,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3367,
											"end": 3421,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3367,
											"end": 3421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3450,
											"end": 3458,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3458,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3431,
											"end": 3492,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3431,
											"end": 3492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3502,
											"end": 3519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3519,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "EDD2200F5E00A665285F3C40E420FF44575A36D6ABF0B366D132A22CC4FCB1"
										},
										{
											"begin": 3549,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3534,
											"end": 3557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3709,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3724,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3724,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3701,
											"end": 3773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3701,
											"end": 3773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3783,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BD74CA4C80E5EAFE62D339ABF0F9676E065FE0F2EBCA0689E97DD5730CE4D8AB"
										},
										{
											"begin": 3832,
											"end": 3839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3816,
											"end": 3840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3840,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3192,
											"end": 3196,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3198,
											"end": 3204,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3198,
											"end": 3211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3186,
											"end": 3212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3186,
											"end": 3212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7"
										},
										{
											"begin": 3240,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3227,
											"end": 3247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3247,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 304,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 304,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1602,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1580,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1580,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1668,
											"end": 1678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1668,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1725,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1726,
											"end": 1736,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1763,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1703,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1703,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1703,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1695,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1695,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1818,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1800,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1843,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1800,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "59BB2BDDFF6A71F8747469B7104385348606A838F9A98DE25C0793B2AA4DD0EB"
										},
										{
											"begin": 1878,
											"end": 1888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1900,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1858,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1901,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4664,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4918,
											"end": 4926,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5002,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5021,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5002,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5049,
											"end": 5063,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5039,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5064,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5039,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5100,
											"end": 5104,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5082,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5106,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5082,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5124,
											"end": 5143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5143,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5152,
											"end": 5156,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5124,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5124,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5124,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5176,
											"end": 5189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5189,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5176,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 5214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4197,
											"end": 4205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4257,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C714D22A2F08B695F81E7C707058DB484AA5B4D6B4C9FD64BEB10FE85832F608"
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4258,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 533,
											"end": 607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5884,
											"end": 5893,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 5962,
											"end": 5967,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5944,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5935,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5917,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 6096,
											"end": 6101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6065,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 6242,
											"end": 6247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6211,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6198,
											"end": 6248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6198,
											"end": 6248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 6406,
											"end": 6411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 6361,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6359,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6260,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6559,
											"end": 6568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6650,
											"end": 6667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 6583,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7039,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 7118,
											"end": 7119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7103,
											"end": 7120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7050,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7121,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 7050,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 7199,
											"end": 7201,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7181,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7131,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7203,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 7131,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7263,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7213,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 7213,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7295,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 7295,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 7445,
											"end": 7448,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7434,
											"end": 7443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7377,
											"end": 7450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7450,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 7377,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 7528,
											"end": 7531,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7513,
											"end": 7532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7510,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7460,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7533,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 7460,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 7611,
											"end": 7614,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 7600,
											"end": 7609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7543,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7616,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 7543,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 7694,
											"end": 7697,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7683,
											"end": 7692,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7626,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7699,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 7626,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 7777,
											"end": 7780,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7766,
											"end": 7775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7709,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 7789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7906,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7918,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7923,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7926,
											"end": 8005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8105,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8071,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8071,
											"end": 8124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8071,
											"end": 8124,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 8071,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8124,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8175,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8199,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 8244,
											"end": 8251,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8233,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8199,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8252,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 8199,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8455,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8275,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8400,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8320,
											"end": 8321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8401,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8420,
											"end": 8424,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8410,
											"end": 8425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8441,
											"end": 8442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8449,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8781,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8461,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8543,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8536,
											"end": 8540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8544,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8583,
											"end": 8587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8591,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 8600,
											"end": 8681,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8666,
											"end": 8670,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8658,
											"end": 8664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8671,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8681,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 8600,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8731,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8694,
											"end": 8732,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 8691,
											"end": 8775,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8747,
											"end": 8765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8775,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 8691,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8512,
											"end": 8781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8948,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8935,
											"end": 8944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8959,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 9030,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 8959,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 9108,
											"end": 9110,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 9040,
											"end": 9112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9112,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 9040,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 9119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9241,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9125,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 9210,
											"end": 9215,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 9195,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 9195,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9188,
											"end": 9193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9185,
											"end": 9217,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 9175,
											"end": 9235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9221,
											"end": 9233,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9235,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 9175,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9247,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9332,
											"end": 9338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9326,
											"end": 9339,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 9372,
											"end": 9377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9348,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9384,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9735,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9390,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9508,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9494,
											"end": 9503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9485,
											"end": 9492,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9477,
											"end": 9509,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 9474,
											"end": 9593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9512,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 9512,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9593,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 9474,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9657,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9699,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9657,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9718,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9657,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 9718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 9718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9906,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9741,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9881,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "5769746864726177206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 9879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9858,
											"end": 9899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 10278,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9912,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10057,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10075,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 10139,
											"end": 10141,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 10134,
											"end": 10137,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10075,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10075,
											"end": 10142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10075,
											"end": 10142,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 10075,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10068,
											"end": 10142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10068,
											"end": 10142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10151,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10240,
											"end": 10243,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10151,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 10151,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10151,
											"end": 10244,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10151,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10269,
											"end": 10271,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10264,
											"end": 10267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 10278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 10278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 10278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 10278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10703,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 10284,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10465,
											"end": 10491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10465,
											"end": 10491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10531,
											"end": 10535,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10527,
											"end": 10547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10523,
											"end": 10524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10521,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 10565,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10696,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 10565,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10709,
											"end": 10889,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 10709,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10757,
											"end": 10834,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10754,
											"end": 10755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10747,
											"end": 10835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10854,
											"end": 10858,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10851,
											"end": 10852,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10844,
											"end": 10859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10878,
											"end": 10882,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10883,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11305,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10895,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 10976,
											"end": 10977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 10958,
											"end": 10978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10978,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 10958,
											"end": 10978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10953,
											"end": 10978,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10953,
											"end": 10978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11010,
											"end": 11011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 10992,
											"end": 11012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 11012,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 11012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 11087,
											"end": 11098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 11069,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11250,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11229,
											"end": 11251,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11209,
											"end": 11210,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11265,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11159,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 11159,
											"end": 11298,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 11278,
											"end": 11296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11159,
											"end": 11298,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 11159,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10943,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11305,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11490,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11311,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11451,
											"end": 11482,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 11447,
											"end": 11448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11428,
											"end": 11483,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11862,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 11496,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11638,
											"end": 11641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 11718,
											"end": 11721,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 11659,
											"end": 11726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 11726,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 11659,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11652,
											"end": 11726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11652,
											"end": 11726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11735,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 11824,
											"end": 11827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11735,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11735,
											"end": 11828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11735,
											"end": 11828,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 11735,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 11856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11837,
											"end": 11856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11837,
											"end": 11856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12287,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 11868,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12034,
											"end": 12038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12074,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12061,
											"end": 12070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12111,
											"end": 12131,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12096,
											"end": 12105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12092,
											"end": 12109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12085,
											"end": 12132,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12275,
											"end": 12279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 12149,
											"end": 12280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12280,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12149,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12473,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 12293,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12341,
											"end": 12418,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12338,
											"end": 12339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12331,
											"end": 12419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12442,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12428,
											"end": 12443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12462,
											"end": 12466,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12459,
											"end": 12460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12452,
											"end": 12467,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12479,
											"end": 12664,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 12479,
											"end": 12664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12519,
											"end": 12520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 12554,
											"end": 12555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12536,
											"end": 12556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 12536,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12531,
											"end": 12556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12531,
											"end": 12556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12588,
											"end": 12589,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12570,
											"end": 12590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12609,
											"end": 12610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12599,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12599,
											"end": 12634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 12614,
											"end": 12632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12599,
											"end": 12634,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12599,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12653,
											"end": 12654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 12658,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 12658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 12658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12479,
											"end": 12664,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12479,
											"end": 12664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12479,
											"end": 12664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12479,
											"end": 12664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12479,
											"end": 12664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12864,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 12670,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 12748,
											"end": 12749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12730,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12750,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 12730,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12725,
											"end": 12750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12725,
											"end": 12750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 12782,
											"end": 12783,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12764,
											"end": 12784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12759,
											"end": 12784,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12759,
											"end": 12784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12808,
											"end": 12809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 12810,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12793,
											"end": 12810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12793,
											"end": 12810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12832,
											"end": 12833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12823,
											"end": 12834,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12857,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 12820,
											"end": 12857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 12837,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12857,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 12820,
											"end": 12857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12864,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 13038,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 12870,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13010,
											"end": 13030,
											"name": "PUSH",
											"source": 7,
											"value": "55534454207061796F7574206661696C65640000000000000000000000000000"
										},
										{
											"begin": 13006,
											"end": 13007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12994,
											"end": 13008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 13038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 13038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13044,
											"end": 13410,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 13044,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13186,
											"end": 13189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13207,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 13271,
											"end": 13273,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 13266,
											"end": 13269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 13207,
											"end": 13274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13274,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 13207,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13200,
											"end": 13274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13200,
											"end": 13274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 13372,
											"end": 13375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 13283,
											"end": 13376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13376,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 13283,
											"end": 13376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13401,
											"end": 13403,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13396,
											"end": 13399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13392,
											"end": 13404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13385,
											"end": 13404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13385,
											"end": 13404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13044,
											"end": 13410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13044,
											"end": 13410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13044,
											"end": 13410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13044,
											"end": 13410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13416,
											"end": 13835,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 13416,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13582,
											"end": 13586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13620,
											"end": 13622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13609,
											"end": 13618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13597,
											"end": 13623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13597,
											"end": 13623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13669,
											"end": 13678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 13667,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13679,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13644,
											"end": 13653,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13640,
											"end": 13657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13633,
											"end": 13680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13697,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 13823,
											"end": 13827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13697,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 13697,
											"end": 13828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13697,
											"end": 13828,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 13697,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13416,
											"end": 13835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13416,
											"end": 13835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13416,
											"end": 13835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13416,
											"end": 13835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 13994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14028,
											"end": 14030,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 14017,
											"end": 14026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14013,
											"end": 14031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14109,
											"end": 14110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14094,
											"end": 14111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14085,
											"end": 14091,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 14041,
											"end": 14112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14041,
											"end": 14112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 14190,
											"end": 14192,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14188,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14166,
											"end": 14172,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 14122,
											"end": 14194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14194,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 14122,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14204,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 14272,
											"end": 14274,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14261,
											"end": 14270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14257,
											"end": 14275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14248,
											"end": 14254,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14204,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 14204,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14204,
											"end": 14276,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 14204,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 14283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14465,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 14289,
											"end": 14465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14429,
											"end": 14457,
											"name": "PUSH",
											"source": 7,
											"value": "4275792072617465206D757374206265203E3D2031205354454D000000000000"
										},
										{
											"begin": 14425,
											"end": 14426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14413,
											"end": 14427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14406,
											"end": 14458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14471,
											"end": 14837,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 14471,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14613,
											"end": 14616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14634,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 14698,
											"end": 14700,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 14693,
											"end": 14696,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14634,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 14634,
											"end": 14701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14634,
											"end": 14701,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 14634,
											"end": 14701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14627,
											"end": 14701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14627,
											"end": 14701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14710,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 14799,
											"end": 14802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14710,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 14710,
											"end": 14803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14710,
											"end": 14803,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 14710,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14828,
											"end": 14830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14823,
											"end": 14826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14819,
											"end": 14831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14812,
											"end": 14831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14812,
											"end": 14831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14471,
											"end": 14837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14471,
											"end": 14837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14471,
											"end": 14837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14471,
											"end": 14837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15262,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 14843,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15009,
											"end": 15013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15047,
											"end": 15049,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15036,
											"end": 15045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15086,
											"end": 15106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15082,
											"end": 15083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15071,
											"end": 15080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15067,
											"end": 15084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15060,
											"end": 15107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 15250,
											"end": 15254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 15124,
											"end": 15255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15255,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 15124,
											"end": 15255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15116,
											"end": 15255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15116,
											"end": 15255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15447,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 15268,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15439,
											"name": "PUSH",
											"source": 7,
											"value": "4275792072617465206D757374206265203C3D2053656C6C2072617465000000"
										},
										{
											"begin": 15404,
											"end": 15405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15396,
											"end": 15402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15392,
											"end": 15406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15385,
											"end": 15440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15453,
											"end": 15819,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 15453,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15595,
											"end": 15598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15616,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 15680,
											"end": 15682,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 15675,
											"end": 15678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15616,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15616,
											"end": 15683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15616,
											"end": 15683,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 15616,
											"end": 15683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15609,
											"end": 15683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15609,
											"end": 15683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15692,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 15781,
											"end": 15784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15692,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 15692,
											"end": 15785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15692,
											"end": 15785,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 15692,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15810,
											"end": 15812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15805,
											"end": 15808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15801,
											"end": 15813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15453,
											"end": 15819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15453,
											"end": 15819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15453,
											"end": 15819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15453,
											"end": 15819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15825,
											"end": 16244,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 15825,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15991,
											"end": 15995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16029,
											"end": 16031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16018,
											"end": 16027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16006,
											"end": 16032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16006,
											"end": 16032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16078,
											"end": 16087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16072,
											"end": 16076,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16068,
											"end": 16088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16049,
											"end": 16066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16042,
											"end": 16089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16106,
											"end": 16237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16232,
											"end": 16236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16106,
											"end": 16237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 16106,
											"end": 16237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16106,
											"end": 16237,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16106,
											"end": 16237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16098,
											"end": 16237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16098,
											"end": 16237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15825,
											"end": 16244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15825,
											"end": 16244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15825,
											"end": 16244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15825,
											"end": 16244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16250,
											"end": 16506,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 16250,
											"end": 16506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16390,
											"end": 16456,
											"name": "PUSH",
											"source": 7,
											"value": "53656C6C2072617465206D75737420626520E289A52031205354454D20706572"
										},
										{
											"begin": 16386,
											"end": 16387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16378,
											"end": 16384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16374,
											"end": 16388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16367,
											"end": 16457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16491,
											"end": 16498,
											"name": "PUSH",
											"source": 7,
											"value": "2055534454000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16486,
											"end": 16488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16478,
											"end": 16484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16474,
											"end": 16489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16467,
											"end": 16499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16250,
											"end": 16506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16250,
											"end": 16506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16512,
											"end": 16878,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 16512,
											"end": 16878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16654,
											"end": 16657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16675,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 16739,
											"end": 16741,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 16734,
											"end": 16737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16675,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16675,
											"end": 16742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16675,
											"end": 16742,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 16675,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16668,
											"end": 16742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16668,
											"end": 16742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16751,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 16840,
											"end": 16843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16751,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 16751,
											"end": 16844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16751,
											"end": 16844,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 16751,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16869,
											"end": 16871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16864,
											"end": 16867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16860,
											"end": 16872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16853,
											"end": 16872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16853,
											"end": 16872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16512,
											"end": 16878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16512,
											"end": 16878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16512,
											"end": 16878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16512,
											"end": 16878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 17303,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 16884,
											"end": 17303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17050,
											"end": 17054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17077,
											"end": 17086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17073,
											"end": 17091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17065,
											"end": 17091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17065,
											"end": 17091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17137,
											"end": 17146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17131,
											"end": 17135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17127,
											"end": 17147,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17112,
											"end": 17121,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17108,
											"end": 17125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17101,
											"end": 17148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17165,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17291,
											"end": 17295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17165,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 17165,
											"end": 17296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17165,
											"end": 17296,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17165,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17157,
											"end": 17296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17157,
											"end": 17296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 17303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 17303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 17303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 17303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17458,
											"end": 17462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17498,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 17485,
											"end": 17494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17481,
											"end": 17499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17473,
											"end": 17499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17473,
											"end": 17499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17509,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17577,
											"end": 17578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17566,
											"end": 17575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17553,
											"end": 17559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17509,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 17509,
											"end": 17580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17509,
											"end": 17580,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17509,
											"end": 17580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17590,
											"end": 17662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 17658,
											"end": 17660,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17647,
											"end": 17656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17643,
											"end": 17661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17634,
											"end": 17640,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17590,
											"end": 17662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 17590,
											"end": 17662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17590,
											"end": 17662,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 17590,
											"end": 17662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17672,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 17740,
											"end": 17742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17729,
											"end": 17738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17725,
											"end": 17743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 17722,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17672,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 17672,
											"end": 17744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17672,
											"end": 17744,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 17672,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17309,
											"end": 17751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17757,
											"end": 17927,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 17757,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17897,
											"end": 17919,
											"name": "PUSH",
											"source": 7,
											"value": "55534454207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 17893,
											"end": 17894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17885,
											"end": 17891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17881,
											"end": 17895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17874,
											"end": 17920,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17757,
											"end": 17927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17757,
											"end": 17927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 18299,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 17933,
											"end": 18299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18075,
											"end": 18078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18096,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 18160,
											"end": 18162,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 18155,
											"end": 18158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18096,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 18096,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18096,
											"end": 18163,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 18096,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18089,
											"end": 18163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18089,
											"end": 18163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18172,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 18261,
											"end": 18264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18172,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 18172,
											"end": 18265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18172,
											"end": 18265,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 18172,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18290,
											"end": 18292,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18285,
											"end": 18288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18281,
											"end": 18293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 18299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 18299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 18299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 18299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18724,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 18305,
											"end": 18724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18471,
											"end": 18475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18509,
											"end": 18511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18498,
											"end": 18507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18494,
											"end": 18512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18486,
											"end": 18512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18486,
											"end": 18512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18558,
											"end": 18567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18552,
											"end": 18556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18548,
											"end": 18568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18544,
											"end": 18545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18533,
											"end": 18542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18529,
											"end": 18546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18522,
											"end": 18569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18586,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18712,
											"end": 18716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18586,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 18586,
											"end": 18717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18586,
											"end": 18717,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18586,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18578,
											"end": 18717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18578,
											"end": 18717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18851,
											"end": 18855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18889,
											"end": 18891,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18878,
											"end": 18887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18874,
											"end": 18892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 18970,
											"end": 18971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18959,
											"end": 18968,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18955,
											"end": 18972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18946,
											"end": 18952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 18902,
											"end": 18973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18983,
											"end": 19055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 19051,
											"end": 19053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19040,
											"end": 19049,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19036,
											"end": 19054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19027,
											"end": 19033,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18983,
											"end": 19055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 18983,
											"end": 19055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18983,
											"end": 19055,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 18983,
											"end": 19055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 19062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19211,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 19068,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19125,
											"end": 19130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19156,
											"end": 19162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19150,
											"end": 19163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19141,
											"end": 19163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19141,
											"end": 19163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19172,
											"end": 19205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 19199,
											"end": 19204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19172,
											"end": 19205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 19172,
											"end": 19205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19172,
											"end": 19205,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 19172,
											"end": 19205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19211,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19217,
											"end": 19568,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 19217,
											"end": 19568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19287,
											"end": 19293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19336,
											"end": 19338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19324,
											"end": 19333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19315,
											"end": 19322,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19311,
											"end": 19334,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19339,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19423,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 19304,
											"end": 19423,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19342,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 19342,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 19342,
											"end": 19421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19342,
											"end": 19421,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 19342,
											"end": 19421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19423,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 19304,
											"end": 19423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19462,
											"end": 19463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19487,
											"end": 19551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 19543,
											"end": 19550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19534,
											"end": 19540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19523,
											"end": 19532,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19519,
											"end": 19541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19487,
											"end": 19551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 19487,
											"end": 19551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19487,
											"end": 19551,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 19487,
											"end": 19551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19477,
											"end": 19551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19477,
											"end": 19551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19433,
											"end": 19561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19217,
											"end": 19568,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19217,
											"end": 19568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19217,
											"end": 19568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19217,
											"end": 19568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19217,
											"end": 19568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19723,
											"end": 19727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19761,
											"end": 19763,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19750,
											"end": 19759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19746,
											"end": 19764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19738,
											"end": 19764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19738,
											"end": 19764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19774,
											"end": 19845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 19842,
											"end": 19843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19831,
											"end": 19840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19827,
											"end": 19844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19818,
											"end": 19824,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19774,
											"end": 19845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 19774,
											"end": 19845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19774,
											"end": 19845,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 19774,
											"end": 19845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19855,
											"end": 19927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 19923,
											"end": 19925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19912,
											"end": 19921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 19926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19899,
											"end": 19905,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19855,
											"end": 19927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 19855,
											"end": 19927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19855,
											"end": 19927,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 19855,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19937,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 20005,
											"end": 20007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19994,
											"end": 20003,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19990,
											"end": 20008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19981,
											"end": 19987,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19937,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 19937,
											"end": 20009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19937,
											"end": 20009,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 19937,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19574,
											"end": 20016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20022,
											"end": 20213,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 20022,
											"end": 20213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20062,
											"end": 20065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20081,
											"end": 20101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 20099,
											"end": 20100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20081,
											"end": 20101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 20081,
											"end": 20101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20081,
											"end": 20101,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 20081,
											"end": 20101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20076,
											"end": 20101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20076,
											"end": 20101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20115,
											"end": 20135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 20133,
											"end": 20134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20115,
											"end": 20135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 20115,
											"end": 20135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20115,
											"end": 20135,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 20115,
											"end": 20135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20110,
											"end": 20135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20110,
											"end": 20135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20158,
											"end": 20159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20155,
											"end": 20156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20151,
											"end": 20160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20144,
											"end": 20160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20144,
											"end": 20160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20179,
											"end": 20182,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20176,
											"end": 20177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20173,
											"end": 20183,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20170,
											"end": 20206,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20170,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20170,
											"end": 20206,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 20186,
											"end": 20204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20170,
											"end": 20206,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20170,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20022,
											"end": 20213,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20022,
											"end": 20213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20022,
											"end": 20213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20022,
											"end": 20213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20022,
											"end": 20213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/STEMToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"buyRate()": "fc37987b",
							"buyStem(uint256)": "bb285554",
							"decimals()": "313ce567",
							"getConfig()": "c3f909d4",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"profitTreasury()": "f203787c",
							"renounceOwnership()": "715018a6",
							"sellRate()": "6217229b",
							"sellStem(uint256)": "5d91e3f8",
							"setBuyRate(uint256)": "85e436bf",
							"setProfitTreasury(address)": "0f7e730b",
							"setSellRate(uint256)": "8e0b017d",
							"setTreasury(address)": "f0f44260",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"usdtToken()": "a98ad46c",
							"withdrawUSDT(address,uint256)": "1481794e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyRate\",\"type\":\"uint256\"}],\"name\":\"BuyRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"}],\"name\":\"BuyStem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProfitTreasury\",\"type\":\"address\"}],\"name\":\"ProfitTreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellRate\",\"type\":\"uint256\"}],\"name\":\"SellRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitStems\",\"type\":\"uint256\"}],\"name\":\"SellStem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDTWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyStem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profitTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"treasuryStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractStemBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractUsdtBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStemSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stemAmount\",\"type\":\"uint256\"}],\"name\":\"sellStem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setBuyRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setProfitTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setSellRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/STEMToken.sol\":\"STEMToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/STEMToken.sol\":{\"keccak256\":\"0x6ad243011e2fa7dc6891613b84b1398e91bde823f3aed35c81962c30ea3dc649\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f35020fcdc81b36715ca7227cc43308f471c3917915ee1d866770128f02d2363\",\"dweb:/ipfs/QmNxkDN1UCghkYKchyBuMw5NWTXFCrAywawMaF8kgmKG9C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "usdtToken",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 948,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "buyRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "sellRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 954,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "treasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 957,
								"contract": "contracts/STEMToken.sol:STEMToken",
								"label": "profitTreasury",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`‚Äôs `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`‚Äôs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`‚Äôs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/STEMToken.sol": {
				"ast": {
					"absolutePath": "contracts/STEMToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"STEMToken": [
							1376
						]
					},
					"id": 1377,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 878,
							"src": "114:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 148,
							"src": "183:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"259:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "259:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "259:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"266:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "266:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "266:7:6"
								}
							],
							"canonicalName": "STEMToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1376,
							"linearizedBaseContracts": [
								1376,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "STEMToken",
							"nameLocation": "246:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 945,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "295:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "281:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 944,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 943,
											"name": "IERC20",
											"nameLocations": [
												"281:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "281:6:6"
										},
										"referencedDeclaration": 877,
										"src": "281:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc37987b",
									"id": 948,
									"mutability": "mutable",
									"name": "buyRate",
									"nameLocation": "326:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "311:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "336:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6217229b",
									"id": 951,
									"mutability": "mutable",
									"name": "sellRate",
									"nameLocation": "392:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "377:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "403:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 954,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "474:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "459:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 952,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "459:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307866453039453335446661644630383041373638663431646631336530363632394635453830456239",
										"id": 953,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "485:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xfE09E35DfadF080A768f41df13e06629F5E80Eb9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f203787c",
									"id": 957,
									"mutability": "mutable",
									"name": "profitTreasury",
									"nameLocation": "548:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "533:74:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 955,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307865414361303235334239353733304632616532373535416630393038336436393834304136383343",
										"id": 956,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "565:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xeACa0253B95730F2ae2755Af09083d69840A683C"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "59bb2bddff6a71f8747469b7104385348606a838f9a98de25c0793b2aa4dd0eb",
									"id": 965,
									"name": "BuyStem",
									"nameLocation": "680:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "704:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "688:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "719:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "711:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "739:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "731:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:63:6"
									},
									"src": "674:77:6"
								},
								{
									"anonymous": false,
									"eventSelector": "91b69b546d2910ad29983da9d221cf0ebae5eb1929083361f4d6c95878cdb420",
									"id": 975,
									"name": "SellStem",
									"nameLocation": "762:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "771:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "803:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "795:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "823:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "815:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "profitStems",
												"nameLocation": "843:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "835:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:85:6"
									},
									"src": "756:100:6"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 981,
									"name": "Minted",
									"nameLocation": "867:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "874:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "902:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "894:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:36:6"
									},
									"src": "861:49:6"
								},
								{
									"anonymous": false,
									"eventSelector": "696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7",
									"id": 987,
									"name": "Burned",
									"nameLocation": "921:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "944:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "928:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "958:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "950:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:38:6"
									},
									"src": "915:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bd74ca4c80e5eafe62d339abf0f9676e065fe0f2ebca0689e97dd5730ce4d8ab",
									"id": 991,
									"name": "SellRateUpdated",
									"nameLocation": "977:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSellRate",
												"nameLocation": "1001:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "993:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:21:6"
									},
									"src": "971:43:6"
								},
								{
									"anonymous": false,
									"eventSelector": "00edd2200f5e00a665285f3c40e420ff44575a36d6abf0b366d132a22cc4fcb1",
									"id": 995,
									"name": "BuyRateUpdated",
									"nameLocation": "1025:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBuyRate",
												"nameLocation": "1048:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1040:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:20:6"
									},
									"src": "1019:41:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608",
									"id": 999,
									"name": "TreasuryChanged",
									"nameLocation": "1071:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "1103:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1087:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:29:6"
									},
									"src": "1065:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "0056d7403454282c9d1b884c3bdcfe0c09772c704ad0b14978c55bf72867485b",
									"id": 1003,
									"name": "ProfitTreasuryChanged",
									"nameLocation": "1127:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"indexed": true,
												"mutability": "mutable",
												"name": "newProfitTreasury",
												"nameLocation": "1165:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1149:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:35:6"
									},
									"src": "1121:63:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b0bd88cdae83f74f918eb6bf26d99dcb3c1530530f339233b029e3b6a00ac50b",
									"id": 1009,
									"name": "USDTWithdrawn",
									"nameLocation": "1195:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1225:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1209:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1237:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1229:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:36:6"
									},
									"src": "1189:56:6"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1361:101:6",
										"statements": [
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1024,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1371:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1026,
																"name": "_usdtTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "1390:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1025,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1383:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1383:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "1371:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1371:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1424:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "1434:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1450:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1434:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1030,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1418:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1418:37:6"
											}
										]
									},
									"id": 1038,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5354454d20546f6b656e",
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1319:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c494a6b032ae9be6bbbea42451c8d18994176fc7f2bd1537a9185b7e4975f888",
														"typeString": "literal_string \"STEM Token\""
													},
													"value": "STEM Token"
												},
												{
													"hexValue": "5354454d",
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1333:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8a41c0f2575200c6620e0e981e04ebdbd20c94c08716ef02ff08a4b28fc2f53e",
														"typeString": "literal_string \"STEM\""
													},
													"value": "STEM"
												}
											],
											"id": 1018,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1015,
												"name": "ERC20",
												"nameLocations": [
													"1313:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1313:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1313:27:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1020,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1349:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1353:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1349:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1022,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1019,
												"name": "Ownable",
												"nameLocations": [
													"1341:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1341:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1341:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_usdtTokenAddress",
												"nameLocation": "1271:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1263:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1298:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1290:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:50:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:6"
									},
									"scope": 1376,
									"src": "1251:211:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "1570:338:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "usdtAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1588:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1601:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1588:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1604:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1580:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1580:56:6"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "stemAmount",
														"nameLocation": "1655:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "1647:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "usdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1668:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1681:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1668:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1647:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1059,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1726:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1730:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1726:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1063,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1746:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMToken_$1376",
																				"typeString": "contract STEMToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMToken_$1376",
																				"typeString": "contract STEMToken"
																			}
																		],
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1738:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1061,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1738:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1738:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1065,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "1753:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1057,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "1703:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1713:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "1703:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1703:61:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1766:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1695:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:94:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1695:94:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1810:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1820:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1820:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "1832:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1800:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1800:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "1800:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1866:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1870:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1866:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "1878:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1081,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "1890:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "BuyStem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "EmitStatement",
												"src": "1853:48:6"
											}
										]
									},
									"functionSelector": "bb285554",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyStem",
									"nameLocation": "1533:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "1549:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1541:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:20:6"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1570:0:6"
									},
									"scope": 1376,
									"src": "1524:384:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "1992:916:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1091,
																"name": "stemAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "2010:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2010:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2026:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2002:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "2002:56:6"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "usdtAmount",
														"nameLocation": "2128:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "2120:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2120:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "stemAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "2142:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2142:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1102,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2141:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1103,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2163:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2141:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2120:51:6"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "fairUsdtAmount",
														"nameLocation": "2286:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "2278:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2278:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "stemAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2303:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2316:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2303:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2278:42:6"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "expectedStems",
														"nameLocation": "2338:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "2330:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2330:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "fairUsdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2354:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1115,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2371:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2354:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2330:49:6"
											},
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "profitStems",
														"nameLocation": "2397:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "2389:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2389:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1120,
															"name": "expectedStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2411:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1121,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2427:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2411:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2469:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2411:59:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1123,
															"name": "expectedStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2440:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1124,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2456:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2440:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2389:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2577:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2581:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2577:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "2589:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2599:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2567:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2567:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "2567:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1136,
															"name": "profitStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2624:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2638:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2624:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1139,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "2643:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2669:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2661:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2661:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2661:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2643:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2624:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1153,
												"nodeType": "IfStatement",
												"src": "2620:126:6",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "2673:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1147,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "2697:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1148,
																		"name": "profitTreasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "2707:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1149,
																		"name": "profitStems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "2723:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1146,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "2687:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2687:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1151,
															"nodeType": "ExpressionStatement",
															"src": "2687:48:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1157,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2783:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2787:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2783:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1159,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "2795:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1155,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "2764:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2774:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "2764:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2764:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207061796f7574206661696c6564",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2808:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																"typeString": "literal_string \"USDT payout failed\""
															},
															"value": "USDT payout failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bbbbc962b0e2f2be6254534584b30836656bf5ddeac99c942bfd79c74492b4",
																"typeString": "literal_string \"USDT payout failed\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2756:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2756:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2756:73:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2853:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2857:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2853:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "stemAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2865:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1168,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2877:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1169,
															"name": "profitStems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2889:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1164,
														"name": "SellStem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "2844:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "EmitStatement",
												"src": "2839:62:6"
											}
										]
									},
									"functionSelector": "5d91e3f8",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellStem",
									"nameLocation": "1954:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "stemAmount",
												"nameLocation": "1971:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1963:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:20:6"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1992:0:6"
									},
									"scope": 1376,
									"src": "1945:963:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "3004:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1183,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "3020:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "3024:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3033:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3024:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3014:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "3014:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "3060:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "3064:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "3053:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3053:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "EmitStatement",
												"src": "3048:23:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1179,
												"name": "onlyOwner",
												"nameLocations": [
													"2994:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2994:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2994:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "2952:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2965:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2957:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2977:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2969:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2969:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:28:6"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3004:0:6"
									},
									"scope": 1376,
									"src": "2943:135:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "3176:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "3198:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3207:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3198:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1204,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "3186:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3186:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "3186:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1212,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3234:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "3240:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3227:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "EmitStatement",
												"src": "3222:25:6"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "onlyOwner",
												"nameLocations": [
													"3166:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3166:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3166:9:6"
										}
									],
									"name": "burn",
									"nameLocation": "3122:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3135:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3127:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3149:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3141:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:30:6"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3176:0:6"
									},
									"scope": 1376,
									"src": "3113:141:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "3357:207:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1225,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "3375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3386:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3375:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792072617465206d757374206265203e3d2031205354454d",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3392:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																"typeString": "literal_string \"Buy rate must be >= 1 STEM\""
															},
															"value": "Buy rate must be >= 1 STEM"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8ce50c2c339379f5a57f95246647ebce0323529ed52e190709de64c1a2d329b",
																"typeString": "literal_string \"Buy rate must be >= 1 STEM\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "3367:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "3439:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1233,
																"name": "sellRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "3450:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3439:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792072617465206d757374206265203c3d2053656c6c2072617465",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3460:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																"typeString": "literal_string \"Buy rate must be <= Sell rate\""
															},
															"value": "Buy rate must be <= Sell rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb043ddc4e12590f32b3680ce7fa2555e5c8879420a32ff9efe3e290610d4cb5",
																"typeString": "literal_string \"Buy rate must be <= Sell rate\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3431:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3431:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "3431:61:6"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "buyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3502:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1239,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "3512:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3502:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "3502:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1243,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3549:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "BuyRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3534:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3534:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "3529:28:6"
											}
										]
									},
									"functionSelector": "85e436bf",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1222,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1221,
												"name": "onlyOwner",
												"nameLocations": [
													"3347:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3347:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3347:9:6"
										}
									],
									"name": "setBuyRate",
									"nameLocation": "3310:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "3329:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3321:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3320:17:6"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3357:0:6"
									},
									"scope": 1376,
									"src": "3301:263:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "3691:156:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1255,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "3709:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3720:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3709:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "unicodeString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3726:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																"typeString": "literal_string hex\"53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454\""
															},
															"value": "Sell rate must be ‚â• 1 STEM per USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd87eede70257daa4ce43b097303a02228773bec5b818a431d7df5d18b774f28",
																"typeString": "literal_string hex\"53656c6c2072617465206d75737420626520e289a52031205354454d207065722055534454\""
															}
														],
														"id": 1254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3701:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3701:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "3701:72:6"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1261,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "3783:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1262,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "3794:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3783:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "3783:18:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "3832:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1265,
														"name": "SellRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "3816:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3816:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "EmitStatement",
												"src": "3811:29:6"
											}
										]
									},
									"functionSelector": "8e0b017d",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "onlyOwner",
												"nameLocations": [
													"3681:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3681:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3681:9:6"
										}
									],
									"name": "setSellRate",
									"nameLocation": "3643:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "3663:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3655:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:17:6"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:0:6"
									},
									"scope": 1376,
									"src": "3634:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "3955:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1282,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "3992:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1283,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "3996:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1280,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "3973:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3983:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "3973:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3973:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177206661696c6564",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4005:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															},
															"value": "Withdraw failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "3965:58:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1289,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "4052:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "4056:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1288,
														"name": "USDTWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4038:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4038:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "EmitStatement",
												"src": "4033:30:6"
											}
										]
									},
									"functionSelector": "1481794e",
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1276,
												"name": "onlyOwner",
												"nameLocations": [
													"3945:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3945:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3945:9:6"
										}
									],
									"name": "withdrawUSDT",
									"nameLocation": "3895:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3916:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3908:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3928:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3920:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:28:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:0:6"
									},
									"scope": 1376,
									"src": "3886:184:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "4187:78:6",
										"statements": [
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "4197:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1302,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4208:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4197:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "4197:20:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1306,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "4248:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1305,
														"name": "TreasuryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "4232:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4232:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "EmitStatement",
												"src": "4227:31:6"
											}
										]
									},
									"functionSelector": "f0f44260",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1299,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1298,
												"name": "onlyOwner",
												"nameLocations": [
													"4177:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4177:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4177:9:6"
										}
									],
									"name": "setTreasury",
									"nameLocation": "4137:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "4157:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4149:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4149:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4148:19:6"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4187:0:6"
									},
									"scope": 1376,
									"src": "4128:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "4380:90:6",
										"statements": [
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1317,
														"name": "profitTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4390:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "4407:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4390:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "4390:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1322,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "4453:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1321,
														"name": "ProfitTreasuryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "4431:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "EmitStatement",
												"src": "4426:37:6"
											}
										]
									},
									"functionSelector": "0f7e730b",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1314,
												"name": "onlyOwner",
												"nameLocations": [
													"4370:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4370:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4370:9:6"
										}
									],
									"name": "setProfitTreasury",
									"nameLocation": "4324:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "4350:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4342:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4341:19:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4380:0:6"
									},
									"scope": 1376,
									"src": "4315:155:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "4854:360:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1347,
															"name": "buyRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "4893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1348,
															"name": "sellRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4918:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1349,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "4944:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "profitTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4970:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1352,
																	"name": "treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "5012:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1351,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "5002:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5002:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1355,
																	"name": "profitTreasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "5049:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1354,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "5039:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5039:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1360,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5100:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMToken_$1376",
																				"typeString": "contract STEMToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMToken_$1376",
																				"typeString": "contract STEMToken"
																			}
																		],
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5092:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1358,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5092:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5092:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1357,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "5082:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5082:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1367,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5152:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_STEMToken_$1376",
																				"typeString": "contract STEMToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_STEMToken_$1376",
																				"typeString": "contract STEMToken"
																			}
																		],
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5144:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1365,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5144:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5144:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1363,
																	"name": "usdtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "5124:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5134:9:6",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 834,
																"src": "5124:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5124:34:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1370,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5176:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5176:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1372,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4875:328:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,address,address,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1373,
												"nodeType": "Return",
												"src": "4868:335:6"
											}
										]
									},
									"functionSelector": "c3f909d4",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConfig",
									"nameLocation": "4517:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4526:2:6"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "_buyRate",
												"nameLocation": "4569:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4561:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4561:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "_sellRate",
												"nameLocation": "4595:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4587:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4587:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "4622:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4614:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "_profitTreasury",
												"nameLocation": "4649:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4641:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "treasuryStemBalance",
												"nameLocation": "4682:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4674:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "profitStemBalance",
												"nameLocation": "4719:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4711:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "contractStemBalance",
												"nameLocation": "4754:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4746:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "contractUsdtBalance",
												"nameLocation": "4791:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4783:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "totalStemSupply",
												"nameLocation": "4828:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4820:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4551:302:6"
									},
									"scope": 1376,
									"src": "4508:706:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1377,
							"src": "237:4979:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								965,
								975,
								981,
								987,
								991,
								995,
								999,
								1003,
								1009
							]
						}
					],
					"src": "32:5185:6"
				},
				"id": 6
			}
		}
	}
}